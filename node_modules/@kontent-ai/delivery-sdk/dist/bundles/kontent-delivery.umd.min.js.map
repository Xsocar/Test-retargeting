{"version":3,"file":"kontent-delivery.umd.min.js","mappings":"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","sources":["webpack://kontentDelivery/webpack/universalModuleDefinition","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/url.helper.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/header.helper.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/enum.helper.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/headers-helper.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/helpers/retry-helper.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/models/parameters.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.debugger.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.functions.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/http/http.service.js","webpack://kontentDelivery/./node_modules/@kontent-ai/core-sdk/dist/es6/http/test-http.service.js","webpack://kontentDelivery/./node_modules/axios/index.js","webpack://kontentDelivery/./node_modules/axios/lib/adapters/xhr.js","webpack://kontentDelivery/./node_modules/axios/lib/axios.js","webpack://kontentDelivery/./node_modules/axios/lib/cancel/CancelToken.js","webpack://kontentDelivery/./node_modules/axios/lib/cancel/CanceledError.js","webpack://kontentDelivery/./node_modules/axios/lib/cancel/isCancel.js","webpack://kontentDelivery/./node_modules/axios/lib/core/Axios.js","webpack://kontentDelivery/./node_modules/axios/lib/core/AxiosError.js","webpack://kontentDelivery/./node_modules/axios/lib/core/InterceptorManager.js","webpack://kontentDelivery/./node_modules/axios/lib/core/buildFullPath.js","webpack://kontentDelivery/./node_modules/axios/lib/core/dispatchRequest.js","webpack://kontentDelivery/./node_modules/axios/lib/core/mergeConfig.js","webpack://kontentDelivery/./node_modules/axios/lib/core/settle.js","webpack://kontentDelivery/./node_modules/axios/lib/core/transformData.js","webpack://kontentDelivery/./node_modules/axios/lib/defaults/index.js","webpack://kontentDelivery/./node_modules/axios/lib/defaults/transitional.js","webpack://kontentDelivery/./node_modules/axios/lib/env/data.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/bind.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/buildURL.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/combineURLs.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/cookies.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/isAxiosError.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/null.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/parseHeaders.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/parseProtocol.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/spread.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/toFormData.js","webpack://kontentDelivery/./node_modules/axios/lib/helpers/validator.js","webpack://kontentDelivery/./node_modules/axios/lib/utils.js","webpack://kontentDelivery/./node_modules/querystringify/index.js","webpack://kontentDelivery/./node_modules/requires-port/index.js","webpack://kontentDelivery/./lib/client/delivery-client.factory.ts","webpack://kontentDelivery/./lib/client/delivery-client.ts","webpack://kontentDelivery/./lib/client/index.ts","webpack://kontentDelivery/./lib/config/index.ts","webpack://kontentDelivery/./lib/contracts/index.ts","webpack://kontentDelivery/./lib/elements/element-type.ts","webpack://kontentDelivery/./lib/elements/index.ts","webpack://kontentDelivery/./lib/images/image-url-transformation-builder.factory.ts","webpack://kontentDelivery/./lib/images/image-url-transformation-builder.ts","webpack://kontentDelivery/./lib/images/index.ts","webpack://kontentDelivery/./lib/index.ts","webpack://kontentDelivery/./lib/mappers/element.mapper.ts","webpack://kontentDelivery/./lib/mappers/generic-element.mapper.ts","webpack://kontentDelivery/./lib/mappers/index.ts","webpack://kontentDelivery/./lib/mappers/item.mapper.ts","webpack://kontentDelivery/./lib/mappers/language.mapper.ts","webpack://kontentDelivery/./lib/mappers/sync.mapper.ts","webpack://kontentDelivery/./lib/mappers/taxonomy.mapper.ts","webpack://kontentDelivery/./lib/mappers/type.mapper.ts","webpack://kontentDelivery/./lib/models/common/common-models.ts","webpack://kontentDelivery/./lib/models/common/filters.ts","webpack://kontentDelivery/./lib/models/common/headers.ts","webpack://kontentDelivery/./lib/models/common/index.ts","webpack://kontentDelivery/./lib/models/common/parameters.ts","webpack://kontentDelivery/./lib/models/index.ts","webpack://kontentDelivery/./lib/parser/implementation/async-browser-parser.class.ts","webpack://kontentDelivery/./lib/parser/implementation/browser-parser.class.ts","webpack://kontentDelivery/./lib/parser/index.ts","webpack://kontentDelivery/./lib/parser/parse-models.ts","webpack://kontentDelivery/./lib/parser/parser-configuration.ts","webpack://kontentDelivery/./lib/parser/parser.helper.ts","webpack://kontentDelivery/./lib/query/common/base-item-listing-query.class.ts","webpack://kontentDelivery/./lib/query/common/base-listing-query.class.ts","webpack://kontentDelivery/./lib/query/common/base-query.class.ts","webpack://kontentDelivery/./lib/query/element/element-query.class.ts","webpack://kontentDelivery/./lib/query/index.ts","webpack://kontentDelivery/./lib/query/item/multiple-items-query.class.ts","webpack://kontentDelivery/./lib/query/item/single-item-query.class.ts","webpack://kontentDelivery/./lib/query/items-feed/items-feed-query.class.ts","webpack://kontentDelivery/./lib/query/language/languages-query.class.ts","webpack://kontentDelivery/./lib/query/sync/initialize-sync-query.class.ts","webpack://kontentDelivery/./lib/query/sync/sync-changes-query.class.ts","webpack://kontentDelivery/./lib/query/taxonomy/taxonomies-query.class.ts","webpack://kontentDelivery/./lib/query/taxonomy/taxonomy-query.class.ts","webpack://kontentDelivery/./lib/query/type/multiple-type-query.class.ts","webpack://kontentDelivery/./lib/query/type/single-type-query.class.ts","webpack://kontentDelivery/./lib/resolvers/index.ts","webpack://kontentDelivery/./lib/resolvers/property-name/camel-case-property-name-resolver.class.ts","webpack://kontentDelivery/./lib/resolvers/property-name/pascal-case-property-name-resolver.class.ts","webpack://kontentDelivery/./lib/resolvers/property-name/snake-case-property-name-resolver.class.ts","webpack://kontentDelivery/./lib/resolvers/rich-text/async/async-rich-text-html-resolver.ts","webpack://kontentDelivery/./lib/resolvers/rich-text/base/base-async-rich-text-resolver.ts","webpack://kontentDelivery/./lib/resolvers/rich-text/base/base-rich-text-resolver.ts","webpack://kontentDelivery/./lib/resolvers/rich-text/sync/rich-text-html-resolver.ts","webpack://kontentDelivery/./lib/resolvers/rich-text/sync/rich-text-json-resolver.ts","webpack://kontentDelivery/./lib/resolvers/rich-text/sync/rich-text-object-resolver.ts","webpack://kontentDelivery/./lib/sdk-info.generated.ts","webpack://kontentDelivery/./lib/services/base-delivery-query.service.ts","webpack://kontentDelivery/./lib/services/delivery-query.service.ts","webpack://kontentDelivery/./lib/services/index.ts","webpack://kontentDelivery/./lib/services/mapping.service.ts","webpack://kontentDelivery/./lib/utilities/delivery-url.helper.ts","webpack://kontentDelivery/./lib/utilities/guid.helper.ts","webpack://kontentDelivery/./lib/utilities/index.ts","webpack://kontentDelivery/./lib/utilities/linked-items.helper.ts","webpack://kontentDelivery/./lib/utilities/text-helper.ts","webpack://kontentDelivery/./node_modules/url-parse/index.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/index.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/md5.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/native.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/nil.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/parse.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/regex.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/rng.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/sha1.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/stringify.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/v1.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/v3.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/v35.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/v4.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/v5.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/validate.js","webpack://kontentDelivery/./node_modules/uuid/dist/commonjs-browser/version.js","webpack://kontentDelivery/webpack/bootstrap","webpack://kontentDelivery/webpack/runtime/compat get default export","webpack://kontentDelivery/webpack/runtime/define property getters","webpack://kontentDelivery/webpack/runtime/global","webpack://kontentDelivery/webpack/runtime/hasOwnProperty shorthand","webpack://kontentDelivery/webpack/runtime/make namespace object","webpack://kontentDelivery/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"kontentDelivery\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"kontentDelivery\"] = factory();\n\telse\n\t\troot[\"kontentDelivery\"] = factory();\n})(self, () => {\nreturn ","export class UrlHelper {\r\n    /**\r\n   * Adds query parameters to given url\r\n   * @param url Url to which options will be added\r\n   * @param options Query parameters to add\r\n   */\r\n    addOptionsToUrl(url, options) {\r\n        if (options) {\r\n            options.forEach(filter => {\r\n                if (url.indexOf('?') > -1) {\r\n                    url += '&';\r\n                }\r\n                else {\r\n                    url += '?';\r\n                }\r\n                url += filter.getParam();\r\n            });\r\n        }\r\n        return url;\r\n    }\r\n}\r\nexport const urlHelper = new UrlHelper();\r\n//# sourceMappingURL=url.helper.js.map","export class HeaderHelper {\r\n    constructor() {\r\n        /**\r\n        * Header name for SDK usage\r\n        */\r\n        this.sdkVersionHeader = 'X-KC-SDKID';\r\n    }\r\n    /**\r\n    * Header identifying SDK type & version for internal purposes of Kontent.ai\r\n    */\r\n    getSdkIdHeader(info) {\r\n        return {\r\n            header: this.sdkVersionHeader,\r\n            value: `${info.host};${info.name};${info.version}`\r\n        };\r\n    }\r\n}\r\nexport const headerHelper = new HeaderHelper();\r\n//# sourceMappingURL=header.helper.js.map","export class EnumHelper {\r\n    getAllNames(T) {\r\n        const enumNames = [];\r\n        for (const key in T) {\r\n            if (T.hasOwnProperty(key)) {\r\n                enumNames.push(key);\r\n            }\r\n        }\r\n        return enumNames;\r\n    }\r\n    getAllValues(T) {\r\n        const allEnumValues = Object.keys(T).map(key => T[key]);\r\n        return allEnumValues;\r\n    }\r\n    getEnumFromValue(T, value) {\r\n        try {\r\n            if (!value) {\r\n                return undefined;\r\n            }\r\n            // we can map back from index number directly\r\n            if (this.isNumeric(value)) {\r\n                return T[value];\r\n            }\r\n            // for strings, we need to compare each value separately\r\n            const allEnumValues = this.getAllValues(T);\r\n            const result = allEnumValues.find(m => m.toLowerCase() === value.toString().toLowerCase());\r\n            if (!result) {\r\n                return undefined;\r\n            }\r\n            return result;\r\n        }\r\n        catch (err) {\r\n            return undefined;\r\n        }\r\n    }\r\n    getEnumFromName(T, name) {\r\n        const allNames = this.getAllNames(T);\r\n        for (const enumName of allNames) {\r\n            if (enumName.toLowerCase() === name.toLowerCase()) {\r\n                return T[enumName];\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    isNumeric(value) {\r\n        return !isNaN(parseFloat(value)) && isFinite(value);\r\n    }\r\n}\r\nexport const enumHelper = new EnumHelper();\r\n//# sourceMappingURL=enum.helper.js.map","export function extractHeadersFromAxiosResponse(response) {\r\n    const headers = [];\r\n    for (const headerKey of Object.keys(response.headers)) {\r\n        headers.push({\r\n            header: headerKey,\r\n            value: response.headers[headerKey]\r\n        });\r\n    }\r\n    return headers;\r\n}\r\n//# sourceMappingURL=headers-helper.js.map","import { extractHeadersFromAxiosResponse } from './headers-helper';\r\nexport class RetryHelper {\r\n    constructor() {\r\n        this.requestCancelledMessagePrefix = 'Request cancelled';\r\n        this.retryAfterHeaderName = 'Retry-After';\r\n        this.defaultRetryStatusCodes = [408, 429, 500, 502, 503, 504];\r\n        this.defaultRetryStrategy = {\r\n            addJitter: true,\r\n            deltaBackoffMs: 1000,\r\n            maxAttempts: 5,\r\n            canRetryError: (error) => this.canRetryErrorDefault(error)\r\n        };\r\n    }\r\n    getRetryErrorResult(data) {\r\n        var _a, _b, _c;\r\n        if (data.error && data.error.message) {\r\n            if (data.error.message.startsWith(this.requestCancelledMessagePrefix)) {\r\n                // request was cancelled by user, do not retry it\r\n                return {\r\n                    canRetry: false,\r\n                    retryInMs: 0,\r\n                    maxRetries: 0\r\n                };\r\n            }\r\n        }\r\n        const canRetryError = data.retryStrategy.canRetryError\r\n            ? data.retryStrategy.canRetryError(data.error)\r\n            : this.defaultRetryStrategy.canRetryError(data.error);\r\n        if (!canRetryError) {\r\n            // request cannot be retried\r\n            return {\r\n                canRetry: false,\r\n                retryInMs: 0,\r\n                maxRetries: 0\r\n            };\r\n        }\r\n        const maxRetries = ((_a = data.retryStrategy.maxAttempts) !== null && _a !== void 0 ? _a : this.defaultRetryStrategy.maxAttempts);\r\n        const maxRetriesReached = data.retryAttempt >= maxRetries;\r\n        if (maxRetriesReached) {\r\n            // request cannot be retried anymore due to maximum attempts\r\n            return {\r\n                canRetry: false,\r\n                retryInMs: 0,\r\n                maxRetries: maxRetries\r\n            };\r\n        }\r\n        // get wait time\r\n        const retryResult = this.tryGetRetryAfterInMsFromError(data.error);\r\n        if (retryResult) {\r\n            // retry after header was provided\r\n            return {\r\n                canRetry: true,\r\n                retryInMs: retryResult,\r\n                maxRetries: maxRetries\r\n            };\r\n        }\r\n        // wait time was not provided in header\r\n        const waitTimeMs = this.getNextWaitTimeMs((_b = data.retryStrategy.addJitter) !== null && _b !== void 0 ? _b : this.defaultRetryStrategy.addJitter, (_c = data.retryStrategy.deltaBackoffMs) !== null && _c !== void 0 ? _c : this.defaultRetryStrategy.deltaBackoffMs, data.retryAttempt);\r\n        return {\r\n            canRetry: true,\r\n            retryInMs: waitTimeMs,\r\n            maxRetries: maxRetries\r\n        };\r\n    }\r\n    getRetryStrategyFromStrategyOptions(retryOptions) {\r\n        if (!retryOptions) {\r\n            return this.defaultRetryStrategy;\r\n        }\r\n        return retryOptions;\r\n    }\r\n    canRetryInTime(startTime, maxCumulativeWaitTimeMs) {\r\n        const start = startTime.getTime();\r\n        const now = new Date().getTime();\r\n        const differenceInMs = now - start;\r\n        return {\r\n            canRetry: differenceInMs < maxCumulativeWaitTimeMs,\r\n            differenceInMs: differenceInMs\r\n        };\r\n    }\r\n    getNextWaitTimeMs(addJitter, deltaBackoffMs, retryAttempts) {\r\n        if (!addJitter) {\r\n            return deltaBackoffMs * Math.pow(2, retryAttempts);\r\n        }\r\n        const from = 0.8 * deltaBackoffMs;\r\n        const to = 1.2 * deltaBackoffMs * Math.pow(2, retryAttempts);\r\n        return this.randomNumberFromInterval(from, to);\r\n    }\r\n    canRetryErrorDefault(error) {\r\n        const axiosError = this.tryGetAxiosError(error);\r\n        if (!axiosError) {\r\n            // by default non-axios errors are not retried\r\n            return false;\r\n        }\r\n        const statusCode = this.getStatusCodeFromError(error);\r\n        const canRetryStatusCode = this.canRetryStatusCode(statusCode, this.defaultRetryStatusCodes);\r\n        if (canRetryStatusCode) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    tryGetRetryAfterInMsFromError(error) {\r\n        const axiosError = this.tryGetAxiosError(error);\r\n        if (!axiosError || !axiosError.response) {\r\n            return undefined;\r\n        }\r\n        const headers = extractHeadersFromAxiosResponse(axiosError.response);\r\n        const retryValueHeader = headers.find((m) => m.header.toLowerCase() === this.retryAfterHeaderName.toLowerCase());\r\n        if (!retryValueHeader) {\r\n            return undefined;\r\n        }\r\n        const retryInSeconds = +retryValueHeader.value;\r\n        return retryInSeconds * 1000;\r\n    }\r\n    canRetryStatusCode(statusCode, useRetryForResponseCodes) {\r\n        return useRetryForResponseCodes.includes(statusCode);\r\n    }\r\n    getStatusCodeFromError(error) {\r\n        const axiosError = this.tryGetAxiosError(error);\r\n        if (!axiosError || !axiosError.response) {\r\n            return 0;\r\n        }\r\n        return axiosError.response.status;\r\n    }\r\n    tryGetAxiosError(error) {\r\n        if (!error) {\r\n            return undefined;\r\n        }\r\n        if (error.isAxiosError) {\r\n            return error;\r\n        }\r\n        const originalError = error.originalError;\r\n        if (originalError && originalError.isAxiosError) {\r\n            return originalError;\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * min and max included\r\n     */\r\n    randomNumberFromInterval(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}\r\nexport const retryHelper = new RetryHelper();\r\n//# sourceMappingURL=retry-helper.js.map","export var Parameters;\r\n(function (Parameters) {\r\n    class CustomParameter {\r\n        /**\r\n         * Custom parameter\r\n         * @constructor\r\n         * @param {string} name - Name of the parameter\r\n         * @param {string} value - Value of the parameter\r\n         */\r\n        constructor(name, value) {\r\n            this.name = name;\r\n            this.value = value;\r\n            if (!name) {\r\n                throw Error(`Name of the custom parameter is not specified`);\r\n            }\r\n        }\r\n        getParam() {\r\n            return this.name;\r\n        }\r\n        getParamValue() {\r\n            return this.value;\r\n        }\r\n    }\r\n    Parameters.CustomParameter = CustomParameter;\r\n})(Parameters || (Parameters = {}));\r\n//# sourceMappingURL=parameters.js.map","export class HttpDebugger {\r\n    /*\r\n    Called when http request is started\r\n    */\r\n    debugStartHttpRequest() {\r\n    }\r\n    /*\r\n    Called when http request is resolved\r\n    */\r\n    debugSuccessHttpRequest() {\r\n    }\r\n    /*\r\n    Called when http request is being retried\r\n    */\r\n    debugRetryHttpRequest() {\r\n    }\r\n}\r\nexport const httpDebugger = new HttpDebugger();\r\n//# sourceMappingURL=http.debugger.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport axios from 'axios';\r\nimport { extractHeadersFromAxiosResponse } from '../helpers/headers-helper';\r\nimport { httpDebugger } from './http.debugger';\r\nimport { retryHelper } from '../helpers/retry-helper';\r\nexport function getWithRetryAsync(instance, call, functionsConfig, options) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\r\n        return yield runWithRetryAsync({\r\n            retryAttempt: 0,\r\n            url: call.url,\r\n            retryStrategy: retryStrategyOptions,\r\n            functionsConfig: functionsConfig,\r\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\r\n                var _b, _c;\r\n                httpDebugger.debugStartHttpRequest();\r\n                const axiosResponse = yield instance.get(call.url, {\r\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\r\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\r\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\r\n                });\r\n                const response = {\r\n                    data: axiosResponse.data,\r\n                    rawResponse: axiosResponse,\r\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                    status: axiosResponse.status,\r\n                    retryStrategy: {\r\n                        options: retryStrategyOptions,\r\n                        retryAttempts: retryAttempt\r\n                    }\r\n                };\r\n                httpDebugger.debugSuccessHttpRequest();\r\n                return response;\r\n            })\r\n        });\r\n    });\r\n}\r\nexport function postWithRetryAsync(instance, call, functionsConfig, options) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\r\n        return yield runWithRetryAsync({\r\n            retryAttempt: 0,\r\n            url: call.url,\r\n            retryStrategy: retryStrategyOptions,\r\n            functionsConfig: functionsConfig,\r\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\r\n                var _b, _c;\r\n                httpDebugger.debugStartHttpRequest();\r\n                const axiosResponse = yield instance.post(call.url, call.body, {\r\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\r\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\r\n                    // required for uploading large files\r\n                    // https://github.com/axios/axios/issues/1362\r\n                    maxContentLength: 'Infinity',\r\n                    maxBodyLength: 'Infinity',\r\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\r\n                });\r\n                const response = {\r\n                    data: axiosResponse.data,\r\n                    rawResponse: axiosResponse,\r\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                    status: axiosResponse.status,\r\n                    retryStrategy: {\r\n                        options: retryStrategyOptions,\r\n                        retryAttempts: retryAttempt\r\n                    }\r\n                };\r\n                httpDebugger.debugSuccessHttpRequest();\r\n                return response;\r\n            })\r\n        });\r\n    });\r\n}\r\nexport function putWithRetryAsync(instance, call, functionsConfig, options) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\r\n        return yield runWithRetryAsync({\r\n            retryAttempt: 0,\r\n            url: call.url,\r\n            retryStrategy: retryStrategyOptions,\r\n            functionsConfig: functionsConfig,\r\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\r\n                var _b, _c;\r\n                httpDebugger.debugStartHttpRequest();\r\n                const axiosResponse = yield instance.put(call.url, call.body, {\r\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\r\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\r\n                    // required for uploading large files\r\n                    // https://github.com/axios/axios/issues/1362\r\n                    maxContentLength: 'Infinity',\r\n                    maxBodyLength: 'Infinity',\r\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\r\n                });\r\n                const response = {\r\n                    data: axiosResponse.data,\r\n                    rawResponse: axiosResponse,\r\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                    status: axiosResponse.status,\r\n                    retryStrategy: {\r\n                        options: retryStrategyOptions,\r\n                        retryAttempts: retryAttempt\r\n                    }\r\n                };\r\n                httpDebugger.debugSuccessHttpRequest();\r\n                return response;\r\n            })\r\n        });\r\n    });\r\n}\r\nexport function patchWithRetryAsync(instance, call, functionsConfig, options) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\r\n        return yield runWithRetryAsync({\r\n            retryAttempt: 0,\r\n            url: call.url,\r\n            retryStrategy: retryStrategyOptions,\r\n            functionsConfig: functionsConfig,\r\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\r\n                var _b, _c;\r\n                httpDebugger.debugStartHttpRequest();\r\n                const axiosResponse = yield instance.patch(call.url, call.body, {\r\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\r\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\r\n                    // required for uploading large files\r\n                    // https://github.com/axios/axios/issues/1362\r\n                    maxContentLength: 'Infinity',\r\n                    maxBodyLength: 'Infinity',\r\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\r\n                });\r\n                const response = {\r\n                    data: axiosResponse.data,\r\n                    rawResponse: axiosResponse,\r\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                    status: axiosResponse.status,\r\n                    retryStrategy: {\r\n                        options: retryStrategyOptions,\r\n                        retryAttempts: retryAttempt\r\n                    }\r\n                };\r\n                httpDebugger.debugSuccessHttpRequest();\r\n                return response;\r\n            })\r\n        });\r\n    });\r\n}\r\nexport function deleteWithRetryAsync(instance, call, functionsConfig, options) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const retryStrategyOptions = (_a = options === null || options === void 0 ? void 0 : options.retryStrategy) !== null && _a !== void 0 ? _a : retryHelper.defaultRetryStrategy;\r\n        return yield runWithRetryAsync({\r\n            retryAttempt: 0,\r\n            url: call.url,\r\n            retryStrategy: retryStrategyOptions,\r\n            functionsConfig: functionsConfig,\r\n            call: (retryAttempt) => __awaiter(this, void 0, void 0, function* () {\r\n                var _b, _c;\r\n                httpDebugger.debugStartHttpRequest();\r\n                const axiosResponse = yield instance.delete(call.url, {\r\n                    headers: getHeadersJson((_b = options === null || options === void 0 ? void 0 : options.headers) !== null && _b !== void 0 ? _b : [], false),\r\n                    responseType: options === null || options === void 0 ? void 0 : options.responseType,\r\n                    // required for uploading large files\r\n                    // https://github.com/axios/axios/issues/1362\r\n                    maxContentLength: 'Infinity',\r\n                    maxBodyLength: 'Infinity',\r\n                    cancelToken: (_c = options === null || options === void 0 ? void 0 : options.cancelToken) === null || _c === void 0 ? void 0 : _c.token\r\n                });\r\n                const response = {\r\n                    data: axiosResponse.data,\r\n                    rawResponse: axiosResponse,\r\n                    headers: extractHeadersFromAxiosResponse(axiosResponse),\r\n                    status: axiosResponse.status,\r\n                    retryStrategy: {\r\n                        options: retryStrategyOptions,\r\n                        retryAttempts: retryAttempt\r\n                    }\r\n                };\r\n                httpDebugger.debugSuccessHttpRequest();\r\n                return response;\r\n            })\r\n        });\r\n    });\r\n}\r\nexport function createCancelToken() {\r\n    let canceler;\r\n    const token = new axios.CancelToken((c) => {\r\n        // An executor function receives a cancel function as a parameter\r\n        canceler = c;\r\n    });\r\n    return {\r\n        cancel: (cancelMessage) => canceler(`${retryHelper.requestCancelledMessagePrefix}: ${cancelMessage !== null && cancelMessage !== void 0 ? cancelMessage : 'User cancel'}`),\r\n        token: token\r\n    };\r\n}\r\nfunction runWithRetryAsync(data) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        try {\r\n            return yield data.call(data.retryAttempt);\r\n        }\r\n        catch (error) {\r\n            const retryResult = retryHelper.getRetryErrorResult({\r\n                error: error,\r\n                retryAttempt: data.retryAttempt,\r\n                retryStrategy: data.retryStrategy\r\n            });\r\n            if (retryResult.canRetry) {\r\n                httpDebugger.debugRetryHttpRequest();\r\n                // wait time before retrying\r\n                yield new Promise((resolve) => setTimeout(resolve, retryResult.retryInMs));\r\n                // retry request\r\n                console.warn(`Retry attempt '${data.retryAttempt + 1}' from a maximum of '${retryResult.maxRetries}' retries. Request url: '${data.url}'`);\r\n                return yield runWithRetryAsync({\r\n                    call: data.call,\r\n                    retryStrategy: data.retryStrategy,\r\n                    retryAttempt: data.retryAttempt + 1,\r\n                    url: data.url,\r\n                    functionsConfig: data.functionsConfig\r\n                });\r\n            }\r\n            if (data.functionsConfig.logErrorsToConsole) {\r\n                console.error(`Executing '${data.url}' failed. Request was retried '${data.retryAttempt}' times. `, error);\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n}\r\nfunction getHeadersJson(headers, addContentTypeHeader) {\r\n    const headerJson = {};\r\n    headers.forEach((header) => {\r\n        headerJson[header.header] = header.value;\r\n    });\r\n    if (addContentTypeHeader) {\r\n        // add default content type header if not present\r\n        const contentTypeHeader = headers.find((m) => m.header.toLowerCase() === 'Content-Type'.toLowerCase());\r\n        if (!contentTypeHeader) {\r\n            headerJson['Content-Type'] = 'application/json';\r\n        }\r\n    }\r\n    return headerJson;\r\n}\r\n//# sourceMappingURL=http.functions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport axios from 'axios';\r\nimport * as HttpFunctions from './http.functions';\r\nexport class HttpService {\r\n    constructor(opts) {\r\n        this.opts = opts;\r\n        this.axiosInstance = axios.create(opts === null || opts === void 0 ? void 0 : opts.axiosRequestConfig);\r\n        this.functionsConfig = this.getFunctionsConfig();\r\n    }\r\n    getAsync(call, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield HttpFunctions.getWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\r\n        });\r\n    }\r\n    postAsync(call, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield HttpFunctions.postWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\r\n        });\r\n    }\r\n    putAsync(call, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield HttpFunctions.putWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\r\n        });\r\n    }\r\n    patchAsync(call, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield HttpFunctions.patchWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\r\n        });\r\n    }\r\n    deleteAsync(call, options) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return yield HttpFunctions.deleteWithRetryAsync(this.axiosInstance, call, this.functionsConfig, options);\r\n        });\r\n    }\r\n    createCancelToken() {\r\n        return HttpFunctions.createCancelToken();\r\n    }\r\n    getFunctionsConfig() {\r\n        var _a, _b;\r\n        return {\r\n            logErrorsToConsole: (_b = (_a = this.opts) === null || _a === void 0 ? void 0 : _a.logErrorsToConsole) !== null && _b !== void 0 ? _b : true\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=http.service.js.map","export class TestHttpService {\r\n    constructor(config) {\r\n        this.response = undefined;\r\n        this.error = undefined;\r\n        Object.assign(this, config);\r\n    }\r\n    getAsync(call, options) {\r\n        return this.resolveTestCall();\r\n    }\r\n    postAsync(call, options) {\r\n        return this.resolveTestCall();\r\n    }\r\n    putAsync(call, options) {\r\n        return this.resolveTestCall();\r\n    }\r\n    patchAsync(call, options) {\r\n        return this.resolveTestCall();\r\n    }\r\n    deleteAsync(call, options) {\r\n        return this.resolveTestCall();\r\n    }\r\n    createCancelToken() {\r\n        return {\r\n            cancel: () => { },\r\n            token: undefined\r\n        };\r\n    }\r\n    resolveTestCall() {\r\n        const promise = new Promise((resolve, reject) => {\r\n            if (this.response) {\r\n                resolve(this.response);\r\n            }\r\n            if (this.error) {\r\n                reject(this.error);\r\n            }\r\n            throw Error(`Missing test data`);\r\n        });\r\n        return promise;\r\n    }\r\n}\r\n//# sourceMappingURL=test-http.service.js.map","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , undef;\n\n/**\n * Decode a URI encoded string.\n *\n * @param {String} input The URI encoded string.\n * @returns {String|Null} The decoded string.\n * @api private\n */\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input.replace(/\\+/g, ' '));\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Attempts to encode a given input.\n *\n * @param {String} input The string that needs to be encoded.\n * @returns {String|Null} The encoded string.\n * @api private\n */\nfunction encode(input) {\n  try {\n    return encodeURIComponent(input);\n  } catch (e) {\n    return null;\n  }\n}\n\n/**\n * Simple query string parser.\n *\n * @param {String} query The query string that needs to be parsed.\n * @returns {Object}\n * @api public\n */\nfunction querystring(query) {\n  var parser = /([^=?#&]+)=?([^&]*)/g\n    , result = {}\n    , part;\n\n  while (part = parser.exec(query)) {\n    var key = decode(part[1])\n      , value = decode(part[2]);\n\n    //\n    // Prevent overriding of existing properties. This ensures that build-in\n    // methods like `toString` or __proto__ are not overriden by malicious\n    // querystrings.\n    //\n    // In the case if failed decoding, we want to omit the key/value pairs\n    // from the result.\n    //\n    if (key === null || value === null || key in result) continue;\n    result[key] = value;\n  }\n\n  return result;\n}\n\n/**\n * Transform a query string to an object.\n *\n * @param {Object} obj Object that should be transformed.\n * @param {String} prefix Optional prefix.\n * @returns {String}\n * @api public\n */\nfunction querystringify(obj, prefix) {\n  prefix = prefix || '';\n\n  var pairs = []\n    , value\n    , key;\n\n  //\n  // Optionally prefix with a '?' if needed\n  //\n  if ('string' !== typeof prefix) prefix = '?';\n\n  for (key in obj) {\n    if (has.call(obj, key)) {\n      value = obj[key];\n\n      //\n      // Edge cases where we actually want to encode the value to an empty\n      // string instead of the stringified value.\n      //\n      if (!value && (value === null || value === undef || isNaN(value))) {\n        value = '';\n      }\n\n      key = encode(key);\n      value = encode(value);\n\n      //\n      // If we failed to encode the strings, we should bail out as we don't\n      // want to add invalid strings to the query.\n      //\n      if (key === null || value === null) continue;\n      pairs.push(key +'='+ value);\n    }\n  }\n\n  return pairs.length ? prefix + pairs.join('&') : '';\n}\n\n//\n// Expose the module.\n//\nexports.stringify = querystringify;\nexports.parse = querystring;\n","'use strict';\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nmodule.exports = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n","import { IDeliveryClientConfig } from '../config/delivery-configs';\r\nimport { DeliveryClient } from './delivery-client';\r\n\r\nexport function createDeliveryClient(config: IDeliveryClientConfig): DeliveryClient {\r\n    return new DeliveryClient(config);\r\n}\r\n","import { HttpService } from '@kontent-ai/core-sdk';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { IContentItem } from '../models';\r\nimport {\r\n    ElementQuery,\r\n    ItemsFeedQuery,\r\n    MultipleItemsQuery,\r\n    MultipleTypeQuery,\r\n    SingleItemQuery,\r\n    SingleTypeQuery,\r\n    TaxonomiesQuery,\r\n    TaxonomyQuery,\r\n    LanguagesQuery,\r\n    InitializeSyncQuery,\r\n    SyncChangesQuery\r\n} from '../query';\r\nimport { sdkInfo } from '../sdk-info.generated';\r\nimport { IMappingService, MappingService, QueryService } from '../services';\r\nimport { IDeliveryClient } from './idelivery-client.interface';\r\n\r\nexport class DeliveryClient implements IDeliveryClient {\r\n    private queryService: QueryService;\r\n    public mappingService: IMappingService;\r\n\r\n    /**\r\n     * Delivery client used to fetch data from Kontent.ai\r\n     * @constructor\r\n     * @param {IDeliveryClientConfig} config - The client configuration\r\n     */\r\n    constructor(protected config: IDeliveryClientConfig) {\r\n        if (!config) {\r\n            throw Error(`Delivery client configuration is not set`);\r\n        }\r\n\r\n        this.mappingService = new MappingService(config);\r\n        this.queryService = new QueryService(\r\n            config,\r\n            config.httpService ? config.httpService : new HttpService(),\r\n            {\r\n                host: sdkInfo.host,\r\n                name: sdkInfo.name,\r\n                version: sdkInfo.version\r\n            },\r\n            this.mappingService\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple languages\r\n     */\r\n    languages(): LanguagesQuery {\r\n        return new LanguagesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple types\r\n     */\r\n    types(): MultipleTypeQuery {\r\n        return new MultipleTypeQuery(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for single type\r\n     * @param {string} typeCodename - Codename of the type to fetch\r\n     */\r\n    type(typeCodename: string): SingleTypeQuery {\r\n        return new SingleTypeQuery(this.config, this.queryService, typeCodename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple items\r\n     */\r\n    items<TContentItem extends IContentItem = IContentItem>(): MultipleItemsQuery<TContentItem> {\r\n        return new MultipleItemsQuery<TContentItem>(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for single item\r\n     * @param {string} codename - Codename of item to fetch\r\n     */\r\n    item<TContentItem extends IContentItem = IContentItem>(codename: string): SingleItemQuery<TContentItem> {\r\n        return new SingleItemQuery<TContentItem>(this.config, this.queryService, codename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for items feed. Executes single HTTP request only. Might not get all items from your Kontent.ai project.\r\n     */\r\n    itemsFeed<TContentItem extends IContentItem = IContentItem>(): ItemsFeedQuery<TContentItem> {\r\n        return new ItemsFeedQuery<TContentItem>(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for single taxonomy\r\n     * @param {string} codename - Codename of taxonomy to fetch\r\n     */\r\n    taxonomy(codename: string): TaxonomyQuery {\r\n        return new TaxonomyQuery(this.config, this.queryService, codename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for multiple taxonomies\r\n     */\r\n    taxonomies(): TaxonomiesQuery {\r\n        return new TaxonomiesQuery(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query for an element within a type\r\n     * @param {string} typeCodename - Codename of the type\r\n     * @param {string} elementCodename - Codename of the element\r\n     */\r\n    element(typeCodename: string, elementCodename: string): ElementQuery {\r\n        return new ElementQuery(this.config, this.queryService, typeCodename, elementCodename);\r\n    }\r\n\r\n    /**\r\n     * Gets query for initializing sync\r\n     */\r\n    initializeSync(): InitializeSyncQuery {\r\n        return new InitializeSyncQuery(this.config, this.queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets query fetching delta updates of content items\r\n     */\r\n    syncChanges(): SyncChangesQuery {\r\n        return new SyncChangesQuery(this.config, this.queryService);\r\n    }\r\n}\r\n","export * from './delivery-client';\r\nexport * from './idelivery-client.interface';\r\nexport * from './delivery-client.factory';\r\n","export * from './delivery-configs';\r\n","export * from './contracts';\r\n","/**\r\n* Represents codename of Kontent.ai element types\r\n*/\r\nexport enum ElementType {\r\n    Text = 'text',\r\n    Number = 'number',\r\n    ModularContent = 'modular_content',\r\n    Asset = 'asset',\r\n    DateTime = 'date_time',\r\n    RichText = 'rich_text',\r\n    MultipleChoice = 'multiple_choice',\r\n    UrlSlug = 'url_slug',\r\n    Taxonomy = 'taxonomy',\r\n    Custom = 'custom',\r\n    Unknown = 'unknown'\r\n}\r\n","export * from './element-models';\r\nexport * from './element-type';\r\nexport * from './elements';\r\nexport * from './element-resolver';\r\n","import { ImageUrlTransformationBuilder } from './image-url-transformation-builder';\r\n\r\nexport function transformImageUrl(url: string): ImageUrlTransformationBuilder {\r\n    return new ImageUrlTransformationBuilder(url);\r\n}\r\n","import { IQueryParameter } from '@kontent-ai/core-sdk';\r\n\r\nimport { Parameters } from '../models';\r\nimport { ImageCompression, ImageFitMode, ImageFormat } from './image.models';\r\n\r\nexport class ImageUrlTransformationBuilder {\r\n  private queryParams: IQueryParameter[] = [];\r\n  private readonly automaticFormatValue: string = 'format';\r\n\r\n  constructor(\r\n    /** Image url */\r\n    public imageUrl: string\r\n  ) { }\r\n\r\n  /**\r\n   * Used to add custom parameters to existing query string\r\n   * @param param Parameter (may or may not include value)\r\n   */\r\n  withCustomParam(param: string): this {\r\n    this.queryParams.push(\r\n      new Parameters.CustomParameter(param)\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The dpr transformation is used to serve correctly sized images for devices that expose a device pixel ratio.\r\n   * @param dpr A required DPR value.\r\n   */\r\n  withDpr(dpr: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('dpr', dpr.toString())\r\n    );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies the crop transformation that removes pixels from an image outside the specified rectangle.\r\n   * @param x Rectangle offset on the X-axis.\r\n   * @param y Rectangle offset on the Y-axis.\r\n   * @param width Rectangle width.\r\n   * @param height Rectangle height.\r\n   */\r\n  withRectangleCrop(x: number, y: number, width: number, height: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('rect', [x, y, width, height].join(','))\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies the crop transformation centered on the specified point.\r\n   * @param x Focal point X coordinate.\r\n   * @param y Focal point Y coordinate.\r\n   * @param z Zoom of the transformation.\r\n   */\r\n  withFocalPointCrop(x: number, y: number, z: number): this {\r\n    this.withFitMode('crop');\r\n\r\n    this.queryParams.push(new Parameters.QueryParameter('crop', 'focalpoint'));\r\n    this.queryParams.push(new Parameters.QueryParameter('fp-x', x.toString()));\r\n    this.queryParams.push(new Parameters.QueryParameter('fp-y', y.toString()));\r\n    this.queryParams.push(new Parameters.QueryParameter('fp-z', z.toString()));\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Enables WebP image support.\r\n   * @param compression Specifies the lossy or lossless compression.\r\n   */\r\n  withAutomaticFormat(backupFormat?: ImageFormat): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('auto', this.automaticFormatValue)\r\n    );\r\n\r\n    if (backupFormat) {\r\n      this.withFormat(backupFormat);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The fit transformation controls how the output image is fit to its target dimensions after resizing.\r\n   * @param fitMode Specifies the mode for the transformation.\r\n   */\r\n  withFitMode(fitMode: ImageFitMode): this {\r\n    this.queryParams.push(new Parameters.QueryParameter('fit', fitMode));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Specifies the compression mode for the WebP image transformations.\r\n   * @param compression Specifies the lossy or lossless compression.\r\n   */\r\n  withCompression(compression: ImageCompression): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter(\r\n        'lossless',\r\n        compression === 'lossless' ? 'true' : 'false'\r\n      )\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies the quality parameter that enables control over the compression level for lossy file-formatted images.\r\n   * @param quality The required quality of the image.\r\n   */\r\n  withQuality(quality: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('q', quality.toString())\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The format transformation enables the source image to be converted (a.k.a., \"transcoded\") from\r\n   * one encoded format to another. This is very useful when the source image has been saved in a sub-optimal\r\n   * file format that hinders performance.\r\n   * @param format Target image file type.\r\n   */\r\n  withFormat(format: ImageFormat): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('fm', format)\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The height transformation enables dynamic height resizing based on pixels and percent values.\r\n   * @param height A required image height.\r\n   */\r\n  withHeight(height: number): this {\r\n    this.queryParams.push(\r\n      new Parameters.QueryParameter('h', height.toString())\r\n    );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * The width transformation enables dynamic width resizing based on pixels and percent values.\r\n   * @param width A required image width.\r\n   */\r\n  withWidth(width: number): this {\r\n    this.queryParams.push(new Parameters.QueryParameter('w', width.toString()));\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets params applied to image\r\n   */\r\n  getParams(): IQueryParameter[] {\r\n    return this.queryParams;\r\n  }\r\n\r\n  /**\r\n   * Gets query string part of the image URL\r\n   */\r\n  getQueryString(): string {\r\n    let query: string = '';\r\n    this.queryParams.forEach(filter => {\r\n      if (query.indexOf('?') > -1) {\r\n        query = query + '&' + filter.getParam();\r\n      } else {\r\n        query = query + '?' + filter.getParam();\r\n      }\r\n    });\r\n\r\n    return query;\r\n  }\r\n\r\n  /**\r\n   * Gets full transformed url to image with parameters\r\n   */\r\n  getUrl(): string {\r\n    return this.imageUrl + this.getQueryString();\r\n  }\r\n}\r\n","export * from './image-url-transformation-builder';\r\nexport * from './image.models';\r\nexport * from './image-url-transformation-builder.factory';\r\n","// Public API\r\nexport * from './client';\r\nexport * from './sdk-info.generated';\r\nexport * from './config';\r\nexport * from './contracts';\r\nexport * from './elements';\r\nexport * from './parser';\r\nexport * from './resolvers';\r\nexport * from './services';\r\nexport * from './mappers';\r\nexport * from './query';\r\nexport * from './models';\r\nexport * from './images';\r\nexport * from './utilities';\r\n\r\n","import { enumHelper } from '@kontent-ai/core-sdk';\r\nimport { deliveryUrlHelper } from '../utilities';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { Contracts } from '../contracts';\r\nimport { ElementModels, Elements, ElementType } from '../elements';\r\nimport {\r\n    IContentItem,\r\n    IContentItemsContainer,\r\n    IMapElementsResult,\r\n    ILink,\r\n    IRichTextImage,\r\n    IContentItemWithRawDataContainer,\r\n    IContentItemWithRawElements\r\n} from '../models';\r\n\r\ninterface IRichTextImageUrlRecord {\r\n    originalUrl: string;\r\n    newUrl: string;\r\n}\r\n\r\nexport class ElementMapper {\r\n    constructor(private readonly config: IDeliveryClientConfig) {}\r\n\r\n    mapElements<TContentItem extends IContentItem = IContentItem>(data: {\r\n        dataToMap: IContentItemWithRawElements;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemWithRawDataContainer;\r\n    }): IMapElementsResult<TContentItem> | undefined {\r\n        // return processed item to avoid infinite recursion\r\n        const processedItem = data.processedItems[data.dataToMap.item.system.codename] as TContentItem | undefined;\r\n        if (processedItem) {\r\n            // item was already resolved\r\n            return {\r\n                item: processedItem,\r\n                processedItems: data.processedItems,\r\n                preparedItems: data.preparedItems,\r\n                processingStartedForCodenames: data.processingStartedForCodenames\r\n            };\r\n        }\r\n\r\n        const preparedItem = data.preparedItems[data.dataToMap.item.system.codename];\r\n        const itemInstance = preparedItem?.item as TContentItem;\r\n\r\n        if (!itemInstance) {\r\n            // item is not present in response\r\n            return undefined;\r\n        }\r\n\r\n        // mapp elements\r\n        const elementCodenames = Object.getOwnPropertyNames(data.dataToMap.rawItem.elements);\r\n\r\n        for (const elementCodename of elementCodenames) {\r\n            const elementMap = this.resolveElementMap(itemInstance, elementCodename);\r\n            const elementWrapper: ElementModels.IElementWrapper = {\r\n                system: data.dataToMap.item.system,\r\n                rawElement: data.dataToMap.rawItem.elements[elementCodename],\r\n                element: elementMap.resolvedName\r\n            };\r\n            if (elementMap.shouldMapElement) {\r\n                const mappedElement = this.mapElement({\r\n                    elementWrapper: elementWrapper,\r\n                    item: itemInstance,\r\n                    preparedItems: data.preparedItems,\r\n                    processingStartedForCodenames: data.processingStartedForCodenames,\r\n                    processedItems: data.processedItems\r\n                });\r\n\r\n                // set mapped elements\r\n                itemInstance.elements[elementMap.resolvedName] = mappedElement;\r\n            }\r\n        }\r\n\r\n        return {\r\n            item: itemInstance,\r\n            processedItems: data.processedItems,\r\n            preparedItems: data.preparedItems,\r\n            processingStartedForCodenames: data.processingStartedForCodenames\r\n        };\r\n    }\r\n\r\n    private mapElement(data: {\r\n        elementWrapper: ElementModels.IElementWrapper;\r\n        item: IContentItem;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemWithRawDataContainer;\r\n    }): ElementModels.IElement<any> {\r\n        const elementType = enumHelper.getEnumFromValue<ElementType>(ElementType, data.elementWrapper.rawElement.type);\r\n        if (elementType) {\r\n            if (elementType === ElementType.ModularContent) {\r\n                return this.mapLinkedItemsElement({\r\n                    elementWrapper: data.elementWrapper,\r\n                    preparedItems: data.preparedItems,\r\n                    processingStartedForCodenames: data.processingStartedForCodenames,\r\n                    processedItems: data.processedItems\r\n                });\r\n            }\r\n\r\n            if (elementType === ElementType.Text) {\r\n                return this.mapTextElement(data.elementWrapper);\r\n            }\r\n            if (elementType === ElementType.Asset) {\r\n                return this.mapAssetsElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.Number) {\r\n                return this.mapNumberElement(data.elementWrapper);\r\n            }\r\n            if (elementType === ElementType.MultipleChoice) {\r\n                return this.mapMultipleChoiceElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.DateTime) {\r\n                return this.mapDateTimeElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.RichText) {\r\n                // add to parent items\r\n                return this.mapRichTextElement(\r\n                    data.elementWrapper,\r\n                    data.processedItems,\r\n                    data.processingStartedForCodenames,\r\n                    data.preparedItems\r\n                );\r\n            }\r\n\r\n            if (elementType === ElementType.UrlSlug) {\r\n                return this.mapUrlSlugElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.Taxonomy) {\r\n                return this.mapTaxonomyElement(data.elementWrapper);\r\n            }\r\n\r\n            if (elementType === ElementType.Custom) {\r\n                return this.mapCustomElement(data.elementWrapper);\r\n            }\r\n        }\r\n        console.warn(\r\n            `Could not map element '${data.elementWrapper.rawElement.name}' of type '${data.elementWrapper.rawElement.type}'. Returning unknown element instead.`\r\n        );\r\n        return this.mapUnknowElement(data.elementWrapper);\r\n    }\r\n\r\n    private mapRichTextElement(\r\n        elementWrapper: ElementModels.IElementWrapper,\r\n        processedItems: IContentItemsContainer,\r\n        processingStartedForCodenames: string[],\r\n        preparedItems: IContentItemWithRawDataContainer\r\n    ): Elements.RichTextElement {\r\n        const rawElement = elementWrapper.rawElement as Contracts.IRichTextElementContract;\r\n\r\n        // get all linked items and linked items codenames nested in rich text\r\n        const richTextLinkedItems: IContentItem[] = [];\r\n        const richTextLinkedItemsCodenames: string[] = [];\r\n\r\n        // The Kontent Delivery API is not guaranteed to return rich-text modular_content array items in the same order in which they appear inside the `value` property.\r\n        // We extract the modular_content codenames in the rich-text value and sort the raw modular_content based on that order instead.\r\n        const rawModularContentCodenamesMatches = (rawElement.value as string).matchAll(\r\n            /<object[^>]+data-codename=\\\"(?<codename>[a-z0-9_]*)\\\".*?>/g\r\n        );\r\n        const rawModularContentCodenamesSorted = Array.from(rawModularContentCodenamesMatches).reduce<string[]>(\r\n            (acc, match) => {\r\n                if (match.groups && match.groups.codename) {\r\n                    acc.push(match.groups.codename);\r\n                }\r\n                return acc;\r\n            },\r\n            [] as string[]\r\n        );\r\n        const rawModularContentCodenames = [...rawElement.modular_content].sort(function (a, b) {\r\n            return rawModularContentCodenamesSorted.indexOf(a) - rawModularContentCodenamesSorted.indexOf(b);\r\n        });\r\n\r\n        for (const codename of rawModularContentCodenames) {\r\n            richTextLinkedItemsCodenames.push(codename);\r\n            // get linked item and check if it exists (it might not be included in response due to 'Depth' parameter)\r\n            const preparedData = preparedItems[codename];\r\n\r\n            // first try to get existing item\r\n            if (this.canMapLinkedItems()) {\r\n                const existingLinkedItem = this.getOrSaveLinkedItemForElement(\r\n                    codename,\r\n                    rawElement,\r\n                    processedItems,\r\n                    processingStartedForCodenames,\r\n                    preparedItems\r\n                );\r\n\r\n                if (existingLinkedItem) {\r\n                    // item was found, add it to linked items\r\n                    richTextLinkedItems.push(existingLinkedItem);\r\n                } else {\r\n                    // item was not found or not yet resolved\r\n                    if (preparedData) {\r\n                        const mappedLinkedItemResult = this.mapElements({\r\n                            dataToMap: preparedData,\r\n                            preparedItems: preparedItems,\r\n                            processingStartedForCodenames: processingStartedForCodenames,\r\n                            processedItems: processedItems\r\n                        });\r\n\r\n                        // add mapped linked item to result\r\n                        if (mappedLinkedItemResult) {\r\n                            richTextLinkedItems.push(mappedLinkedItemResult.item);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // get rich text images\r\n        const richTextImagesResult = this.getRichTextImages(rawElement.images);\r\n\r\n        // extract and map links & images\r\n        const links: ILink[] = this.mapRichTextLinks(rawElement.links);\r\n        const images: IRichTextImage[] = richTextImagesResult.richTextImages;\r\n\r\n        // replace asset urls in html\r\n        const richTextHtml: string = this.getRichTextHtml(rawElement.value, richTextImagesResult.imageUrlRecords);\r\n\r\n        return {\r\n            images: images,\r\n            linkedItemCodenames: richTextLinkedItemsCodenames,\r\n            linkedItems: richTextLinkedItems,\r\n            links: links,\r\n            name: rawElement.name,\r\n            type: ElementType.RichText,\r\n            value: richTextHtml\r\n        };\r\n    }\r\n\r\n    private mapDateTimeElement(elementWrapper: ElementModels.IElementWrapper): Elements.DateTimeElement {\r\n        const rawElement = elementWrapper.rawElement as Contracts.IDateTimeElementContract;\r\n        return {\r\n            ...this.buildElement(elementWrapper, ElementType.DateTime, () => rawElement.value),\r\n            displayTimeZone: rawElement.display_timezone ?? null\r\n        };\r\n    }\r\n\r\n    private mapMultipleChoiceElement(elementWrapper: ElementModels.IElementWrapper): Elements.MultipleChoiceElement {\r\n        return this.buildElement(elementWrapper, ElementType.MultipleChoice, () => elementWrapper.rawElement.value);\r\n    }\r\n\r\n    private mapNumberElement(elementWrapper: ElementModels.IElementWrapper): Elements.NumberElement {\r\n        return this.buildElement(elementWrapper, ElementType.Number, () => {\r\n            if (elementWrapper.rawElement.value === 0) {\r\n                return 0;\r\n            } else if (elementWrapper.rawElement.value) {\r\n                return +elementWrapper.rawElement.value;\r\n            }\r\n            return null;\r\n        });\r\n    }\r\n\r\n    private mapTextElement(elementWrapper: ElementModels.IElementWrapper): Elements.TextElement {\r\n        return this.buildElement(elementWrapper, ElementType.Text, () => elementWrapper.rawElement.value);\r\n    }\r\n\r\n    private mapAssetsElement(elementWrapper: ElementModels.IElementWrapper): Elements.AssetsElement {\r\n        return this.buildElement(elementWrapper, ElementType.Asset, () => {\r\n            const assetContracts = elementWrapper.rawElement.value as Contracts.IAssetContract[];\r\n\r\n            const assets: ElementModels.AssetModel[] = [];\r\n\r\n            for (const assetContract of assetContracts) {\r\n                let renditions: { [renditionPresetCodename: string]: ElementModels.Rendition } | null = null;\r\n\r\n                // get asset url (custom domain may be configured)\r\n                const assetUrl: string = this.config.assetsDomain\r\n                    ? deliveryUrlHelper.replaceAssetDomain(assetContract.url, this.config.assetsDomain)\r\n                    : assetContract.url;\r\n\r\n                if (assetContract.renditions) {\r\n                    renditions = {};\r\n\r\n                    for (const renditionPresetKey of Object.keys(assetContract.renditions)) {\r\n                        const rendition = assetContract.renditions[renditionPresetKey];\r\n\r\n                        renditions[renditionPresetKey] = {\r\n                            ...rendition,\r\n                            url: `${assetUrl}?${rendition.query}` // enhance rendition with absolute url\r\n                        };\r\n                    }\r\n                }\r\n\r\n                const renditionToBeApplied: ElementModels.Rendition | null =\r\n                    (this.config.defaultRenditionPreset && renditions?.[this.config.defaultRenditionPreset]) || null;\r\n\r\n                const finalUrl = renditionToBeApplied?.url ?? assetUrl;\r\n\r\n                const asset: ElementModels.AssetModel = {\r\n                    ...assetContract,\r\n                    url: finalUrl, // use custom url of asset which may contain custom domain and applied rendition\r\n                    renditions\r\n                };\r\n\r\n                assets.push(asset);\r\n            }\r\n\r\n            return assets;\r\n        });\r\n    }\r\n\r\n    private mapTaxonomyElement(elementWrapper: ElementModels.IElementWrapper): Elements.TaxonomyElement {\r\n        return {\r\n            ...this.buildElement(elementWrapper, ElementType.Taxonomy, () => elementWrapper.rawElement.value),\r\n            taxonomyGroup: elementWrapper.rawElement.taxonomy_group ?? null\r\n        };\r\n    }\r\n\r\n    private mapUnknowElement(elementWrapper: ElementModels.IElementWrapper): Elements.UnknownElement {\r\n        return this.buildElement(elementWrapper, ElementType.Unknown, () => elementWrapper.rawElement.value);\r\n    }\r\n\r\n    private mapCustomElement(\r\n        elementWrapper: ElementModels.IElementWrapper\r\n    ): Elements.CustomElement | ElementModels.IElement<string> {\r\n        // try to find element resolver\r\n        if (this.config.elementResolver) {\r\n            const elementResolverValue = this.config.elementResolver(elementWrapper);\r\n\r\n            if (elementResolverValue) {\r\n                return this.buildElement(elementWrapper, ElementType.Custom, () => elementResolverValue);\r\n            }\r\n        }\r\n\r\n        return this.buildElement(elementWrapper, ElementType.Custom, () => elementWrapper.rawElement.value);\r\n    }\r\n\r\n    private mapUrlSlugElement(elementWrapper: ElementModels.IElementWrapper): Elements.UrlSlugElement {\r\n        return this.buildElement(elementWrapper, ElementType.UrlSlug, () => elementWrapper.rawElement.value);\r\n    }\r\n\r\n    private mapLinkedItemsElement(data: {\r\n        elementWrapper: ElementModels.IElementWrapper;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemWithRawDataContainer;\r\n    }): Elements.LinkedItemsElement<any> {\r\n        // prepare linked items\r\n        const linkedItems: IContentItem[] = [];\r\n\r\n        // value = array of item codenames\r\n        const linkedItemCodenames = data.elementWrapper.rawElement.value as string[];\r\n\r\n        for (const codename of linkedItemCodenames) {\r\n            if (this.canMapLinkedItems()) {\r\n                const linkedItem = this.getOrSaveLinkedItemForElement(\r\n                    codename,\r\n                    data.elementWrapper.rawElement,\r\n                    data.processedItems,\r\n                    data.processingStartedForCodenames,\r\n                    data.preparedItems\r\n                );\r\n                if (linkedItem) {\r\n                    // add item to result\r\n                    linkedItems.push(linkedItem);\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...this.buildElement(data.elementWrapper, ElementType.ModularContent, () => linkedItemCodenames),\r\n            linkedItems: linkedItems\r\n        };\r\n    }\r\n\r\n    private getOrSaveLinkedItemForElement(\r\n        codename: string,\r\n        element: Contracts.IElementContract,\r\n        processedItems: IContentItemsContainer,\r\n        mappingStartedForCodenames: string[],\r\n        preparedItems: IContentItemWithRawDataContainer\r\n    ): IContentItem | undefined {\r\n        // first check if item was already resolved and return it if it was\r\n        const processedItem = processedItems[codename];\r\n\r\n        if (processedItem) {\r\n            // item was already resolved\r\n            return processedItem;\r\n        }\r\n\r\n        const preparedItem = preparedItems[codename];\r\n\r\n        if (mappingStartedForCodenames.includes(codename)) {\r\n            return preparedItem?.item;\r\n        }\r\n\r\n        mappingStartedForCodenames.push(codename);\r\n\r\n        // throw error if item is not in response and errors are not skipped\r\n        if (!preparedItem) {\r\n            return undefined;\r\n        }\r\n\r\n        let mappedLinkedItem: IContentItem | undefined;\r\n\r\n        // original resolving if item is still undefined\r\n        const mappedLinkedItemResult = this.mapElements({\r\n            dataToMap: preparedItem,\r\n            preparedItems: preparedItems,\r\n            processingStartedForCodenames: mappingStartedForCodenames,\r\n            processedItems: processedItems\r\n        });\r\n\r\n        if (mappedLinkedItemResult) {\r\n            mappedLinkedItem = mappedLinkedItemResult.item;\r\n\r\n            // add to processed items\r\n            processedItems[codename] = mappedLinkedItem;\r\n        }\r\n\r\n        return mappedLinkedItem;\r\n    }\r\n\r\n    private mapRichTextLinks(linksJson: Contracts.IRichTextElementLinkWrapperContract): ILink[] {\r\n        const links: ILink[] = [];\r\n\r\n        for (const linkId of Object.keys(linksJson)) {\r\n            const linkRaw = linksJson[linkId];\r\n            links.push({\r\n                codename: linkRaw.codename,\r\n                linkId: linkId,\r\n                urlSlug: linkRaw.url_slug,\r\n                type: linkRaw.type\r\n            });\r\n        }\r\n\r\n        return links;\r\n    }\r\n\r\n    private getRichTextHtml(richTextHtml: string, richTextImageRecords: IRichTextImageUrlRecord[]): string {\r\n        for (const richTextImageRecord of richTextImageRecords) {\r\n            // replace rich text image url if it differs\r\n            if (richTextImageRecord.newUrl !== richTextImageRecord.originalUrl) {\r\n                richTextHtml = richTextHtml.replace(\r\n                    new RegExp(richTextImageRecord.originalUrl, 'g'),\r\n                    richTextImageRecord.newUrl\r\n                );\r\n            }\r\n        }\r\n\r\n        return richTextHtml;\r\n    }\r\n\r\n    private getRichTextImages(imagesJson: Contracts.IRichTextElementImageWrapperContract): {\r\n        richTextImages: IRichTextImage[];\r\n        imageUrlRecords: IRichTextImageUrlRecord[];\r\n    } {\r\n        const images: IRichTextImage[] = [];\r\n        const imageUrlRecords: IRichTextImageUrlRecord[] = [];\r\n\r\n        for (const imageId of Object.keys(imagesJson)) {\r\n            const imageRaw = imagesJson[imageId];\r\n\r\n            // image may contain custom asset domain\r\n            const imageUrl: string = this.config.assetsDomain\r\n                ? deliveryUrlHelper.replaceAssetDomain(imageRaw.url, this.config.assetsDomain)\r\n                : imageRaw.url;\r\n\r\n            images.push({\r\n                description: imageRaw.description ?? null,\r\n                imageId: imageRaw.image_id,\r\n                url: imageUrl,\r\n                height: imageRaw.height ?? null,\r\n                width: imageRaw.width ?? null\r\n            });\r\n\r\n            imageUrlRecords.push({\r\n                originalUrl: imageRaw.url,\r\n                newUrl: imageUrl\r\n            });\r\n        }\r\n\r\n        return {\r\n            imageUrlRecords: imageUrlRecords,\r\n            richTextImages: images\r\n        };\r\n    }\r\n\r\n    private resolveElementMap(\r\n        item: IContentItem,\r\n        originalElementCodename: string\r\n    ): {\r\n        shouldMapElement: boolean;\r\n        resolvedName: string;\r\n    } {\r\n        let resolvedElementPropertyName: string | undefined = undefined;\r\n\r\n        if (this.config.propertyNameResolver) {\r\n            resolvedElementPropertyName = this.config.propertyNameResolver(item.system.type, originalElementCodename);\r\n        }\r\n\r\n        if (!resolvedElementPropertyName) {\r\n            // use original element codename\r\n            resolvedElementPropertyName = originalElementCodename;\r\n        }\r\n\r\n        return {\r\n            resolvedName: resolvedElementPropertyName,\r\n            shouldMapElement: true\r\n        };\r\n    }\r\n\r\n    private buildElement<TValue>(\r\n        elementWrapper: ElementModels.IElementWrapper,\r\n        type: ElementType,\r\n        valueFactory: () => TValue\r\n    ): ElementModels.IElement<TValue> {\r\n        return {\r\n            name: elementWrapper.rawElement.name,\r\n            type: type,\r\n            value: valueFactory()\r\n        };\r\n    }\r\n\r\n    private canMapLinkedItems(): boolean {\r\n        if (!this.config.linkedItemsReferenceHandler) {\r\n            return true;\r\n        }\r\n        return this.config.linkedItemsReferenceHandler === 'map';\r\n    }\r\n}\r\n","import { Contracts } from '../contracts';\r\nimport { IGenericElement } from '../models';\r\n\r\nexport class GenericElementMapper {\r\n    mapElement(response: Contracts.IViewContentTypeElementContract): IGenericElement {\r\n        if (!response) {\r\n            throw Error(`Invalid response for mapping element`);\r\n        }\r\n\r\n        const element = response.element;\r\n\r\n        return {\r\n            codename: element.codename,\r\n            name: element.name,\r\n            type: element.type,\r\n            options: element.options ? element.options : [],\r\n            taxonomyGroup: element.taxonomy_group\r\n        };\r\n    }\r\n}\r\n","export * from './element.mapper';\r\nexport * from './item.mapper';\r\nexport * from './taxonomy.mapper';\r\nexport * from './type.mapper';\r\nexport * from './generic-element.mapper';\r\nexport * from './language.mapper';\r\nexport * from './sync.mapper';\r\n","import { IDeliveryClientConfig } from '../config';\r\nimport { Contracts } from '../contracts';\r\nimport { IContentItem, IContentItemsContainer, IContentItemWithRawDataContainer, IContentItemWithRawElements } from '../models';\r\nimport { ElementMapper } from './element.mapper';\r\n\r\nexport interface IMapItemResult<TContentItem extends IContentItem = IContentItem> {\r\n    item: TContentItem;\r\n    processedItems: IContentItemsContainer;\r\n    preparedItems: IContentItemWithRawDataContainer;\r\n    processingStartedForCodenames: string[];\r\n}\r\n\r\nexport interface IMultipleItemsMapResult<TContentItem extends IContentItem = IContentItem> {\r\n    items: TContentItem[];\r\n    linkedItems: IContentItemsContainer;\r\n}\r\n\r\nexport interface ISingleItemMapResult<TContentItem extends IContentItem = IContentItem> {\r\n    item: TContentItem;\r\n    linkedItems: IContentItemsContainer;\r\n}\r\n\r\nexport class ItemMapper {\r\n    private readonly elementMapper: ElementMapper;\r\n\r\n    constructor(readonly config: IDeliveryClientConfig) {\r\n        this.elementMapper = new ElementMapper(config);\r\n    }\r\n\r\n    /**\r\n     * Maps single item to its proper strongly typed model from the given response\r\n     * @param response Response used to map the item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    mapSingleItemFromResponse<TContentItem extends IContentItem = IContentItem>(\r\n        response: Contracts.IViewContentItemContract\r\n    ): ISingleItemMapResult<TContentItem> {\r\n        const mapResult = this.mapItems<TContentItem>({\r\n            mainItems: [response.item],\r\n            linkedItems: Object.values(response.modular_content),\r\n        });\r\n\r\n        return {\r\n            item: mapResult.items[0],\r\n            linkedItems: mapResult.linkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maps multiple items to their strongly typed model from the given  response\r\n     * @param response Response used to map the item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    mapMultipleItemsFromResponse<TContentItem extends IContentItem = IContentItem>(\r\n        response: Contracts.IItemsWithModularContentContract,\r\n    ): IMultipleItemsMapResult<TContentItem> {\r\n        const mapResult = this.mapItems<TContentItem>({\r\n            mainItems: response.items,\r\n            linkedItems: Object.values(response.modular_content)\r\n        });\r\n\r\n        return mapResult;\r\n    }\r\n\r\n    /**\r\n     * Maps item contracts to full models\r\n     */\r\n    mapItems<TContentItem extends IContentItem = IContentItem>(data: {\r\n        mainItems: Contracts.IContentItemContract[];\r\n        linkedItems: Contracts.IContentItemContract[];\r\n    }): IMultipleItemsMapResult<TContentItem> {\r\n        const that = this;\r\n        const processedItems: IContentItemsContainer = {};\r\n        const preparedItems: IContentItemWithRawDataContainer = {};\r\n        const processingStartedForCodenames: string[] = [];\r\n        const mappedMainItems: TContentItem[] = [];\r\n        const mappedLinkedItems: IContentItemsContainer = {};\r\n        const itemsToResolve: Contracts.IContentItemContract[] = [...data.mainItems, ...data.linkedItems];\r\n\r\n        // first prepare reference for all items\r\n        for (const item of itemsToResolve) {\r\n            preparedItems[item.system.codename] = {\r\n                item: this.createContentItem(item),\r\n                rawItem: item\r\n            };\r\n        }\r\n\r\n        // then resolve items\r\n        for (const item of data.mainItems) {\r\n            const itemResult = that.mapItem<TContentItem>({\r\n                item: preparedItems[item.system.codename],\r\n                processedItems: processedItems,\r\n                preparedItems: preparedItems,\r\n                processingStartedForCodenames: processingStartedForCodenames\r\n            });\r\n            mappedMainItems.push(itemResult.item);\r\n        }\r\n\r\n        for (const item of data.linkedItems) {\r\n            const itemResult = that.mapItem<TContentItem>({\r\n                item: preparedItems[item.system.codename],\r\n                processedItems: processedItems,\r\n                preparedItems: preparedItems,\r\n                processingStartedForCodenames: processingStartedForCodenames\r\n            });\r\n\r\n            mappedLinkedItems[item.system.codename] = itemResult.item;\r\n        }\r\n\r\n        return {\r\n            items: mappedMainItems,\r\n            linkedItems: mappedLinkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maps item contract to full model\r\n     */\r\n    private mapItem<TContentItem extends IContentItem = IContentItem>(data: {\r\n        item: IContentItemWithRawElements;\r\n        processedItems: IContentItemsContainer;\r\n        processingStartedForCodenames: string[];\r\n        preparedItems: IContentItemWithRawDataContainer;\r\n    }): IMapItemResult<TContentItem> {\r\n        if (!data.item) {\r\n            throw Error(`Could not map item because its undefined`);\r\n        }\r\n\r\n        const result = this.elementMapper.mapElements<TContentItem>({\r\n            dataToMap: data.item,\r\n            preparedItems: data.preparedItems,\r\n            processingStartedForCodenames: [],\r\n            processedItems: data.processedItems,\r\n        });\r\n\r\n        if (!result) {\r\n            throw Error(`Mapping of content item '${data.item.item.system.codename}' failed`);\r\n        }\r\n        return {\r\n            item: result.item,\r\n            processedItems: result.processedItems,\r\n            preparedItems: result.preparedItems,\r\n            processingStartedForCodenames: result.processingStartedForCodenames\r\n        };\r\n    }\r\n\r\n    private createContentItem(item: Contracts.IContentItemContract): IContentItem {\r\n        const contentItem: IContentItem = {\r\n            elements: {},\r\n            system: {\r\n                codename: item.system.codename,\r\n                collection: item.system.collection,\r\n                id: item.system.id,\r\n                language: item.system.language,\r\n                lastModified: item.system.last_modified,\r\n                name: item.system.name,\r\n                sitemapLocations: item.system.sitemap_locations,\r\n                type: item.system.type,\r\n                workflowStep: item.system.workflow_step ?? null\r\n            }\r\n        };\r\n        return contentItem;\r\n    }\r\n}\r\n","import { Contracts } from '../contracts';\r\nimport { ILanguage } from '../models';\r\n\r\nexport class LanguageMapper {\r\n    mapMultipleLanguages(response: Contracts.IListLanguagesContract): ILanguage[] {\r\n        return response.languages.map((language) => {\r\n            return this.mapLanguage(language);\r\n        });\r\n    }\r\n\r\n    private mapLanguage(language: Contracts.ILanguageContract): ILanguage {\r\n        if (!language) {\r\n            throw Error(`Cannot map language`);\r\n        }\r\n\r\n        return {\r\n            system: language.system\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../contracts';\r\nimport { IContentItemDelta } from '../models';\r\n\r\nexport class SyncMapper {\r\n    mapContentItemDelta(itemDeltaContract: Contracts.IContentItemDeltaContract): IContentItemDelta {\r\n        return {\r\n            changeType: itemDeltaContract.change_type,\r\n            codename: itemDeltaContract.codename,\r\n            collection: itemDeltaContract.collection,\r\n            id: itemDeltaContract.id,\r\n            language: itemDeltaContract.language,\r\n            timestamp: itemDeltaContract.timestamp,\r\n            type: itemDeltaContract.type\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../contracts';\r\nimport { ITaxonomyGroup, ITaxonomySystemAttributes, ITaxonomyTerms } from '../models';\r\n\r\nexport class TaxonomyMapper {\r\n    mapTaxonomy(\r\n        taxonomySystem: Contracts.ITaxonomySystemAttributesContract,\r\n        taxonomyTerms: Contracts.ITaxonomyTermsContract[]\r\n    ): ITaxonomyGroup {\r\n        if (!taxonomySystem) {\r\n            throw Error(`Cannot map taxonomy due to missing 'system' property`);\r\n        }\r\n\r\n        if (!taxonomyTerms) {\r\n            throw Error(`Cannot map taxonomy due to missing 'terms' property`);\r\n        }\r\n\r\n        if (!Array.isArray(taxonomyTerms)) {\r\n            throw Error(`Cannot map terms because no terms array was provided`);\r\n        }\r\n\r\n        const mappedSystemAttributes: ITaxonomySystemAttributes = {\r\n            name: taxonomySystem.name,\r\n            codename: taxonomySystem.codename,\r\n            id: taxonomySystem.id,\r\n            lastModified: taxonomySystem.last_modified\r\n        };\r\n\r\n        const mappedTerms: ITaxonomyTerms[] = this.mapTaxonomyTerms(taxonomyTerms);\r\n\r\n        return {\r\n            system: mappedSystemAttributes,\r\n            terms: mappedTerms\r\n        };\r\n    }\r\n\r\n    mapTaxonomies(taxonomies: Contracts.ITaxonomyGroupContract[]): ITaxonomyGroup[] {\r\n        if (!taxonomies) {\r\n            throw Error(`Cannot map taxonomy due to missing 'taxonomies' property`);\r\n        }\r\n\r\n        if (!Array.isArray(taxonomies)) {\r\n            throw Error(`Cannot map taxonomies because the 'taxonomies' property is not an array `);\r\n        }\r\n\r\n        const mappedTaxonomies: ITaxonomyGroup[] = [];\r\n\r\n        taxonomies.forEach((taxonomy) => {\r\n            mappedTaxonomies.push(this.mapTaxonomy(taxonomy.system, taxonomy.terms));\r\n        });\r\n\r\n        return mappedTaxonomies;\r\n    }\r\n\r\n    /**\r\n     * Recursively map array of taxonomy terms\r\n     * @param termsArray Terms array to map\r\n     */\r\n    private mapTaxonomyTerms(termsArray: Contracts.ITaxonomyTermsContract[]): ITaxonomyTerms[] {\r\n        if (termsArray.length === 0) {\r\n            return [];\r\n        }\r\n\r\n        const mappedTermsArray: ITaxonomyTerms[] = [];\r\n\r\n        termsArray.forEach((terms) => {\r\n            const mappedTerms: ITaxonomyTerms = {\r\n                codename: terms.codename,\r\n                name: terms.name,\r\n                terms: this.mapTaxonomyTerms(terms.terms)\r\n            };\r\n\r\n            mappedTermsArray.push(mappedTerms);\r\n        });\r\n\r\n        return mappedTermsArray;\r\n    }\r\n}\r\n","import { Contracts } from '../contracts';\r\nimport { IContentType, IContentTypeSystemAttributes, IGenericElement } from '../models';\r\n\r\nexport class TypeMapper {\r\n    mapSingleType(response: Contracts.IViewContentTypeContract): IContentType {\r\n        return this.mapType(response);\r\n    }\r\n\r\n    mapMultipleTypes(response: Contracts.IListContentTypeContract): IContentType[] {\r\n        const that = this;\r\n        return response.types.map(function (type) {\r\n            return that.mapType(type);\r\n        });\r\n    }\r\n\r\n    private mapType(type: Contracts.IContentTypeContract): IContentType {\r\n        if (!type) {\r\n            throw Error(`Cannot map type`);\r\n        }\r\n\r\n        if (!type.elements) {\r\n            throw Error(`Cannot map type elements`);\r\n        }\r\n\r\n        const system: IContentTypeSystemAttributes = {\r\n            codename: type.system.codename,\r\n            id: type.system.id,\r\n            name: type.system.name,\r\n            lastModified: type.system.last_modified\r\n        };\r\n\r\n        const elements: IGenericElement[] = [];\r\n\r\n        const elementNames = Object.getOwnPropertyNames(type.elements);\r\n        elementNames.forEach((elementName: string) => {\r\n            const typeElement = type.elements[elementName];\r\n\r\n            if (!typeElement) {\r\n                throw Error(`Cannot find element '${elementName}' on type '${type}'`);\r\n            }\r\n\r\n            // use json property as a codename of the type element\r\n            const elementCodename = elementName;\r\n\r\n            // extra properties for certain element types\r\n            const taxonomyGroup: string | undefined = typeElement.taxonomy_group;\r\n            const options: Contracts.IElementOptionContract[] = [];\r\n\r\n            // some elements can contain options\r\n            const rawOptions = typeElement.options;\r\n            if (rawOptions) {\r\n                if (!Array.isArray(rawOptions)) {\r\n                    throw Error(`Content type 'options' property has to be an array`);\r\n                }\r\n\r\n                rawOptions.forEach((rawOption) => {\r\n                    options.push({\r\n                        codename: rawOption.codename,\r\n                        name: rawOption.name\r\n                    });\r\n                });\r\n            }\r\n\r\n            elements.push({\r\n                codename: elementCodename,\r\n                taxonomyGroup: taxonomyGroup,\r\n                options: options,\r\n                name: typeElement.name,\r\n                type: typeElement.type\r\n            });\r\n        });\r\n\r\n        return {\r\n            elements: elements,\r\n            system: system\r\n        };\r\n    }\r\n}\r\n","import { IHeader, IHttpCancelRequestToken, IQueryParameter } from '@kontent-ai/core-sdk';\r\nimport { IDeliveryNetworkResponse } from './base-responses';\r\nimport { IPagination } from './pagination.class';\r\n\r\nexport type LinkedItemsReferenceHandler = 'map' | 'ignore';\r\n\r\nexport interface IProxyUrlData {\r\n    action: string;\r\n    domain: string;\r\n    queryParameters: IQueryParameter[];\r\n    queryString: string;\r\n    queryConfig: IQueryConfig;\r\n    projectId: string;\r\n}\r\n\r\nexport interface ISDKInfo {\r\n    /**\r\n     * Name of SDK\r\n     */\r\n    name: string;\r\n    /**\r\n     * Version SDK\r\n     */\r\n    version: string;\r\n    /**\r\n     * Host of SDK\r\n     */\r\n    host: string;\r\n}\r\n\r\nexport interface IKontentResponse {}\r\n\r\nexport interface IKontentListWithHeaderResponse extends IKontentResponse {\r\n    items: any[];\r\n}\r\n\r\nexport interface IKontentListResponse extends IKontentResponse {\r\n    pagination?: IPagination;\r\n    items: any[];\r\n}\r\n\r\nexport interface IKontentListAllResponse extends IKontentResponse {\r\n    responses: any[];\r\n    items: any[];\r\n}\r\n\r\nexport interface IListAllQueryConfig<TResponse extends IKontentListResponse, TContract> {\r\n    /**\r\n     * Number of pages to get. If not set, all available pages are fetched.\r\n     */\r\n    pages?: number;\r\n\r\n    /**\r\n     * Delay between each HTTP requests\r\n     */\r\n    delayBetweenRequests?: number;\r\n\r\n    /**\r\n     * Executed when a list response is loaded\r\n     */\r\n    responseFetched?: (\r\n        response: IDeliveryNetworkResponse<TResponse, TContract>,\r\n        nextPageUrl?: string,\r\n        continuationToken?: string\r\n    ) => void;\r\n}\r\n\r\nexport interface IQueryConfig {\r\n    /**\r\n     * Indicates if query should use preview mode. Overrides default configuration\r\n     */\r\n    usePreviewMode?: boolean;\r\n\r\n    /**\r\n     * Indicates if query should use secured delivery API mode.  Overrides default configuration\r\n     */\r\n    useSecuredMode?: boolean;\r\n\r\n    /**\r\n     * If the requested content has changed since the last request, the header determines whether\r\n     * to wait while fetching content. This can be useful when retrieving changed content\r\n     * in reaction to a webhook call. By default, when the header is not set, the API\r\n     * serves old content (if cached by the CDN) while it's fetching the new content\r\n     * to minimize wait time.\r\n     */\r\n    waitForLoadingNewContent?: boolean;\r\n\r\n    /**\r\n     * Extra headers added to request\r\n     */\r\n    customHeaders?: IHeader[];\r\n\r\n    /**\r\n     * Cancel token\r\n     */\r\n    cancelToken?: IHttpCancelRequestToken<any>;\r\n}\r\n\r\nexport interface IDeliveryErrorRaw {\r\n    message: string;\r\n    request_id: string | null;\r\n    error_code: number;\r\n    specific_code: number;\r\n}\r\n\r\nexport class DeliveryError {\r\n    public message: string;\r\n    public requestId: string | null;\r\n    public errorCode: number;\r\n    public specificCode: number;\r\n\r\n    constructor(data: { message: string; requestId: string | null; errorCode: number; specificCode: number }) {\r\n        this.message = data.message;\r\n        this.requestId = data.requestId;\r\n        this.errorCode = data.errorCode;\r\n        this.specificCode = data.specificCode;\r\n    }\r\n}\r\n","import { IQueryParameter } from '@kontent-ai/core-sdk';\r\n\r\nexport namespace Filters {\r\n    const valueSeparator: string = ',';\r\n    const defaultValue: string = '';\r\n\r\n    const getParamValueForSystemFilter = (param: string | string[]): string | undefined => {\r\n        if (!param) {\r\n            return defaultValue;\r\n        }\r\n\r\n        if (Array.isArray(param)) {\r\n            let value = '';\r\n            // use [in] filter\r\n            for (let i = 0; i < param.length; i++) {\r\n                value = value + param[i].toString();\r\n\r\n                if (i !== param.length - 1) {\r\n                    // append separator if its not last item\r\n                    value = value + valueSeparator;\r\n                }\r\n            }\r\n\r\n            return value;\r\n        }\r\n\r\n        // single param was given\r\n        return param.toString();\r\n    };\r\n\r\n    export class TypeFilter implements IQueryParameter {\r\n        constructor(public type: string | string[]) {}\r\n\r\n        getParam(): string {\r\n            if (Array.isArray(this.type)) {\r\n                // multiple types\r\n                return `system.type[in]=${getParamValueForSystemFilter(this.type)}`;\r\n            }\r\n\r\n            // single type\r\n            return `system.type=${getParamValueForSystemFilter(this.type)}`;\r\n        }\r\n    }\r\n\r\n    export class CollectionFilter implements IQueryParameter {\r\n        constructor(public collection: string | string[]) {}\r\n\r\n        getParam(): string {\r\n            if (Array.isArray(this.collection)) {\r\n                // multiple collections\r\n                return `system.collection[in]=${getParamValueForSystemFilter(this.collection)}`;\r\n            }\r\n\r\n            // single collection\r\n            return `system.collection=${getParamValueForSystemFilter(this.collection)}`;\r\n        }\r\n    }\r\n\r\n    export class EmptyFilter implements IQueryParameter {\r\n        constructor(public element: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[empty]`;\r\n        }\r\n    }\r\n\r\n    export class NotEmptyFilter implements IQueryParameter {\r\n        constructor(public element: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[nempty]`;\r\n        }\r\n    }\r\n\r\n    export class EqualsFilter implements IQueryParameter {\r\n        constructor(public element: string, public value: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[eq]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class NotEqualsFilter implements IQueryParameter {\r\n        constructor(public element: string, public value: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[neq]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class AllFilter implements IQueryParameter {\r\n        constructor(public element: string, public values: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[all]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map((m) => m.trim()).join(',');\r\n        }\r\n    }\r\n\r\n    export class AnyFilter implements IQueryParameter {\r\n        constructor(public element: string, public values: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[any]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map((m) => m.trim()).join(',');\r\n        }\r\n    }\r\n\r\n    export class ContainsFilter implements IQueryParameter {\r\n        constructor(public element: string, public values: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[contains]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values.map((m) => m.trim()).join(',');\r\n        }\r\n    }\r\n\r\n    export class GreaterThanFilter implements IQueryParameter {\r\n        constructor(public element: string, public value: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[gt]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class GreaterThanOrEqualFilter implements IQueryParameter {\r\n        constructor(public element: string, public value: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[gte]=${this.getParamValue()}`;\r\n        }\r\n\r\n        getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class InFilter implements IQueryParameter {\r\n        constructor(public element: string, public values: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[in]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values\r\n                .map((m) => {\r\n                    return m.trim();\r\n                })\r\n                .join(',');\r\n        }\r\n    }\r\n\r\n    export class NotInFilter implements IQueryParameter {\r\n        constructor(public element: string, public values: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[nin]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.values || !Array.isArray(this.values)) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.values\r\n                .map((m) => {\r\n                    return m.trim();\r\n                })\r\n                .join(',');\r\n        }\r\n    }\r\n\r\n    export class LessThanFilter implements IQueryParameter {\r\n        constructor(public element: string, public value: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[lt]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class LessThanOrEqualFilter implements IQueryParameter {\r\n        constructor(public element: string, public value: string) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[lte]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.value) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.value;\r\n        }\r\n    }\r\n\r\n    export class RangeFilter implements IQueryParameter {\r\n        constructor(public element: string, public lowerValue: number, public higherValue: number) {}\r\n\r\n        getParam(): string {\r\n            return `${this.element.trim()}[range]=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            let lowerVal = defaultValue;\r\n            let higherVal = defaultValue;\r\n\r\n            if (this.lowerValue) {\r\n                lowerVal = this.lowerValue.toString();\r\n            }\r\n\r\n            if (this.higherValue) {\r\n                higherVal = this.higherValue.toString();\r\n            }\r\n\r\n            return `${lowerVal},${higherVal}`;\r\n        }\r\n    }\r\n}\r\n","export const continuationTokenHeaderName: string = 'X-Continuation';\r\nexport const waitForLoadingNewContentHeader: string = 'X-KC-Wait-For-Loading-New-Content';\r\nexport const sdkVersionHeader: string = 'X-KC-SDKID';\r\nexport const staleContentHeaderName: string = 'X-Stale-Content';\r\n\r\n","export * from './filters';\r\nexport * from './pagination.class';\r\nexport * from './parameters';\r\nexport * from './sort-order';\r\nexport * from './common-models';\r\nexport * from './base-responses';\r\nexport * from './headers';\r\n","import { IQueryParameter } from '@kontent-ai/core-sdk';\r\n\r\nimport { SortOrder } from './sort-order';\r\n\r\nexport namespace Parameters {\r\n    const defaultValue: string = '';\r\n\r\n    export class QueryParameter implements IQueryParameter {\r\n        /**\r\n         * Parameter\r\n         * @constructor\r\n         * @param {string} name - Name of the parameter\r\n         * @param {string} value - Value of the parameter\r\n         */\r\n        constructor(public name: string, public value: string) {\r\n            if (!name) {\r\n                throw Error(`Name of the parameter is not specified`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `${this.name}=${this.value}`;\r\n        }\r\n    }\r\n\r\n    export class ElementsParameter implements IQueryParameter {\r\n        /**\r\n         * Sets elements (projection) so that only certain elements from a content item are returned\r\n         * @constructor\r\n         * @param {string[]} elementCodenames - Array of element codenames to include in response.\r\n         */\r\n        constructor(public elementCodenames: string[]) {}\r\n\r\n        getParam(): string {\r\n            return `elements=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            if (!this.elementCodenames) {\r\n                return defaultValue;\r\n            }\r\n\r\n            return this.elementCodenames\r\n                .map((m) => {\r\n                    if (!m) {\r\n                        throw Error(`Codename of 'ElementsParameter' cannot be null or empty`);\r\n                    }\r\n                    return m.trim();\r\n                })\r\n                .join(',');\r\n        }\r\n    }\r\n\r\n    export class LimitParameter implements IQueryParameter {\r\n        /**\r\n         * Limits the number of items that are returned from response\r\n         * @constructor\r\n         * @param {number} limit - Number of elements that will be returned\r\n         */\r\n        constructor(public limit: number) {\r\n            if (limit <= 0) {\r\n                throw Error(`'LimitParameter' must specify a positive integer`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `limit=${this.limit}`;\r\n        }\r\n\r\n    }\r\n\r\n    export class IncludeTotalCountParameter implements IQueryParameter {\r\n        /**\r\n         * Adds 'includeTotalCount' query parameter to query\r\n         * @constructor\r\n         */\r\n        constructor() {}\r\n\r\n        getParam(): string {\r\n            return `includeTotalCount=true`;\r\n        }\r\n    }\r\n\r\n    export class SkipParameter implements IQueryParameter {\r\n        /**\r\n         * Configures response to skip certain number of items\r\n         * @constructor\r\n         * @param {number} skip - Number of content items that will be skipped\r\n         */\r\n        constructor(public skip: number) {\r\n            if (skip < 0) {\r\n                throw Error(`'SkipParameter' must specify a positive integer number or zero.\"`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `skip=${this.skip}`;\r\n        }\r\n    }\r\n\r\n    export class OrderParameter implements IQueryParameter {\r\n        /**\r\n         * Sorts the response based on given element.\r\n         * @constructor\r\n         * @param {string} element - Element that will be used for sorting (can be both elements.<elementname> or system.<elementname>)\r\n         * @param {SortOrder} sortOrder - Order type (desc/asc). Defaults to 'asc' if SortOrder is null or invalid.\r\n         */\r\n        constructor(public element: string, public sortOrder: SortOrder) {\r\n            if (!element) {\r\n                throw Error(`Element specified in 'OrderParameter' is null or empty`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `order=${this.getParamValue()}`;\r\n        }\r\n\r\n        private getParamValue(): string | undefined {\r\n            return `${this.element.trim()}[${this.sortOrder}]`;\r\n        }\r\n    }\r\n\r\n    export class CustomParameter implements IQueryParameter {\r\n        constructor(public param: string) {}\r\n\r\n        getParam(): string {\r\n            return this.param;\r\n        }\r\n    }\r\n\r\n    export class DepthParameter implements IQueryParameter {\r\n        /**\r\n         * Configures the depth of the response. Content items might reference another 'linked items' using the Linked items element.\r\n         * Recursively, these linked items can reference another linked items.\r\n         * By default, only one level of linked content is returned.\r\n         * @constructor\r\n         * @param {number} depth - Depth fo the response\r\n         */\r\n        constructor(public depth: number) {\r\n            if (depth < 0) {\r\n                throw Error(`'DepthParameter' must specify a positive integer or zero`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `depth=${this.depth}`;\r\n        }\r\n    }\r\n\r\n    export class LanguageParameter implements IQueryParameter {\r\n        /**\r\n         * Specifies language version to fetch\r\n         * @constructor\r\n         * @param {string} languageCodename - Codename of the language\r\n         */\r\n        constructor(public languageCodename: string) {\r\n            if (!languageCodename) {\r\n                throw Error(`'LanguageParameter' must specify codename of the language`);\r\n            }\r\n        }\r\n\r\n        getParam(): string {\r\n            return `language=${this.languageCodename}`;\r\n        }\r\n    }\r\n}\r\n","export * from './common';\r\nexport * from './element-models';\r\nexport * from './item-models';\r\nexport * from './taxonomy-models';\r\nexport * from './content-type-models';\r\nexport * from './language-models';\r\nexport * from './responses';\r\nexport * from './sync-models';\r\n\r\n","import {\r\n    IParsedObjects,\r\n    IImageObject,\r\n    ILinkedItemContentObject,\r\n    ILinkObject,\r\n    ParsedItemIndexReferenceWrapper,\r\n    IParserResult,\r\n    IAsyncParser,\r\n    IAsyncParseResolvers\r\n} from '../parse-models';\r\nimport { parserConfiguration } from '../parser-configuration';\r\nimport { ContentItemType, IContentItem } from '../../models';\r\nimport { parserHelper } from '../parser.helper';\r\nimport { Elements } from '../../elements';\r\n\r\nexport class AsyncBrowserParser implements IAsyncParser<string> {\r\n    async parseAsync(\r\n        html: string,\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IAsyncParseResolvers,\r\n        linkedItems: IContentItem[]\r\n    ): Promise<IParserResult<string>> {\r\n        return await this.parseInternalAsync(\r\n            mainRichTextElement,\r\n            resolvers,\r\n            html,\r\n            linkedItems,\r\n            new ParsedItemIndexReferenceWrapper(0),\r\n            null\r\n        );\r\n    }\r\n\r\n    private async parseInternalAsync(\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IAsyncParseResolvers,\r\n        html: string,\r\n        linkedItems: IContentItem[],\r\n        linkedItemIndex: ParsedItemIndexReferenceWrapper,\r\n        parentElement: Element | null\r\n    ): Promise<IParserResult<string>> {\r\n        const rootElement = this.createWrapperElement(html);\r\n\r\n        // get all linked items\r\n        const result = await this.processRichTextElementAsync(\r\n            mainRichTextElement,\r\n            resolvers,\r\n            rootElement.children,\r\n            {\r\n                links: [],\r\n                linkedItems: [],\r\n                images: []\r\n            },\r\n            linkedItems,\r\n            linkedItemIndex,\r\n            parentElement\r\n        );\r\n\r\n        return {\r\n            componentCodenames: result.linkedItems.filter((m) => m.itemType === 'component').map((m) => m.dataCodename),\r\n            linkedItemCodenames: result.linkedItems\r\n                .filter((m) => m.itemType === 'linkedItem')\r\n                .map((m) => m.dataCodename),\r\n            result: rootElement.innerHTML\r\n        };\r\n    }\r\n\r\n    private async processRichTextElementAsync(\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IAsyncParseResolvers,\r\n        htmlCollection: HTMLCollection,\r\n        result: IParsedObjects,\r\n        linkedItems: IContentItem[],\r\n        linkedItemIndex: ParsedItemIndexReferenceWrapper,\r\n        parentElement: Element | null\r\n    ): Promise<IParsedObjects> {\r\n        if (!htmlCollection || htmlCollection.length === 0) {\r\n            // there are no more nodes\r\n        } else {\r\n            // extract objects\r\n            for (let i = 0; i < htmlCollection.length; i++) {\r\n                const element = htmlCollection[i];\r\n\r\n                resolvers.elementResolverAsync(parserHelper.convertToParserElement(element));\r\n\r\n                const typeAttribute = element.attributes ? element.attributes.getNamedItem('type') : undefined;\r\n\r\n                // process linked items (modular items)\r\n                if (\r\n                    element.attributes &&\r\n                    typeAttribute &&\r\n                    typeAttribute.value &&\r\n                    typeAttribute.value.toLowerCase() ===\r\n                        parserConfiguration.modularContentElementData.type.toLowerCase()\r\n                ) {\r\n                    const dataCodenameAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.dataCodename\r\n                    );\r\n                    const dataTypeAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.dataType\r\n                    );\r\n\r\n                    if (!dataTypeAttribute) {\r\n                        throw Error('Missing data type attribute. This is likely an error caused by invalid response.');\r\n                    }\r\n\r\n                    const relAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.relAttribute\r\n                    );\r\n\r\n                    let itemType: ContentItemType = 'linkedItem';\r\n\r\n                    if (\r\n                        relAttribute &&\r\n                        relAttribute.value === parserConfiguration.modularContentElementData.componentRel\r\n                    ) {\r\n                        itemType = 'component';\r\n                    }\r\n\r\n                    // prepare link item object\r\n                    const linkItemContentObject: ILinkedItemContentObject = {\r\n                        dataCodename: dataCodenameAttribute ? dataCodenameAttribute.value : '',\r\n                        dataType: dataTypeAttribute ? dataTypeAttribute.value : '',\r\n                        itemType: itemType\r\n                    };\r\n\r\n                    // replace html\r\n                    const elementParent = element.parentElement;\r\n\r\n                    if (!elementParent) {\r\n                        console.warn(\r\n                            `Could not replace linked item '${linkItemContentObject.dataCodename}' of '${linkItemContentObject.dataType}' because parent node is undefined. Please report this error if you are seeing this.`\r\n                        );\r\n                    } else {\r\n                        if (dataTypeAttribute.value === 'item') {\r\n                            // add to result\r\n                            result.linkedItems.push(linkItemContentObject);\r\n\r\n                            // resolve linked item\r\n                            await resolvers.contentItemResolverAsync(\r\n                                parserHelper.convertToParserElement(element),\r\n                                linkItemContentObject.dataCodename,\r\n                                linkedItemIndex.index,\r\n                                parserHelper.getLinkedItem(linkedItems, linkItemContentObject.dataCodename)\r\n                            );\r\n\r\n                            // increment index\r\n                            linkedItemIndex.increment();\r\n                        } else {\r\n                            console.warn(\r\n                                `Rich text element contains object with unsupported data type '${dataTypeAttribute.value}'`\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n                // process links\r\n                else if (\r\n                    element.nodeName.toLowerCase() === parserConfiguration.linkElementData.nodeName.toLowerCase()\r\n                ) {\r\n                    const dataItemIdAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.linkElementData.dataItemId\r\n                    );\r\n\r\n                    if (dataItemIdAttribute) {\r\n                        const linkObject: ILinkObject = {\r\n                            dataItemId: dataItemIdAttribute ? dataItemIdAttribute.value : ''\r\n                        };\r\n\r\n                        // add to result\r\n                        result.links.push(linkObject);\r\n\r\n                        // get original link text (the one inside <a> tag)\r\n                        const linkText = element.innerHTML;\r\n\r\n                        await resolvers.urlResolverAsync(\r\n                            parserHelper.convertToParserElement(element),\r\n                            linkObject.dataItemId,\r\n                            linkText,\r\n                            parserHelper.tryGetLink(mainRichTextElement, linkedItems, linkObject.dataItemId)\r\n                        );\r\n                    }\r\n                }\r\n                // process images\r\n                else if (\r\n                    element.nodeName.toLowerCase() === parserConfiguration.imageElementData.nodeName.toLowerCase()\r\n                ) {\r\n                    const dataImageIdAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.imageElementData.dataImageId\r\n                    );\r\n\r\n                    // continue only if data image id is present. There could be regular img tags included\r\n                    if (dataImageIdAttribute) {\r\n                        const imageObj: IImageObject = {\r\n                            imageId: dataImageIdAttribute.value\r\n                        };\r\n\r\n                        result.images.push(imageObj);\r\n\r\n                        // resolve image\r\n                        await resolvers.imageResolverAsync(\r\n                            parserHelper.convertToParserElement(element),\r\n                            imageObj.imageId,\r\n                            parserHelper.tryGetImage(mainRichTextElement, linkedItems, imageObj.imageId)\r\n                        );\r\n                    }\r\n                } else {\r\n                    // process generic elements\r\n                    await resolvers.genericElementResolverAsync(parserHelper.convertToParserElement(element));\r\n                }\r\n\r\n                // recursively process child nodes\r\n                if (element.children && element.children.length > 0) {\r\n                    await this.processRichTextElementAsync(\r\n                        mainRichTextElement,\r\n                        resolvers,\r\n                        element.children,\r\n                        result,\r\n                        linkedItems,\r\n                        linkedItemIndex,\r\n                        parentElement\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private createWrapperElement(html: string): HTMLElement {\r\n        const element = document.createElement(parserConfiguration.linkedItemWrapperElem);\r\n        element.innerHTML = html;\r\n\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const asyncBrowserParser = new AsyncBrowserParser();\r\n","import {\r\n    IParsedObjects,\r\n    IImageObject,\r\n    ILinkedItemContentObject,\r\n    ILinkObject,\r\n    ParsedItemIndexReferenceWrapper,\r\n    IParser,\r\n    IParseResolvers,\r\n    IParserResult\r\n} from '../parse-models';\r\nimport { parserConfiguration } from '../parser-configuration';\r\nimport { ContentItemType, IContentItem } from '../../models';\r\nimport { parserHelper } from '../parser.helper';\r\nimport { Elements } from '../../elements';\r\n\r\nexport class BrowserParser implements IParser<string> {\r\n    parse(\r\n        html: string,\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IParseResolvers,\r\n        linkedItems: IContentItem[]\r\n    ): IParserResult<string> {\r\n        return this.parseInternal(\r\n            mainRichTextElement,\r\n            resolvers,\r\n            html,\r\n            linkedItems,\r\n            new ParsedItemIndexReferenceWrapper(0),\r\n            null\r\n        );\r\n    }\r\n\r\n    private parseInternal(\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IParseResolvers,\r\n        html: string,\r\n        linkedItems: IContentItem[],\r\n        linkedItemIndex: ParsedItemIndexReferenceWrapper,\r\n        parentElement: Element | null\r\n    ): IParserResult<string> {\r\n        const rootElement = this.createWrapperElement(html);\r\n\r\n        // get all linked items\r\n        const result = this.processRichTextElement(\r\n            mainRichTextElement,\r\n            resolvers,\r\n            rootElement.children,\r\n            {\r\n                links: [],\r\n                linkedItems: [],\r\n                images: []\r\n            },\r\n            linkedItems,\r\n            linkedItemIndex,\r\n            parentElement\r\n        );\r\n\r\n        return {\r\n            componentCodenames: result.linkedItems.filter((m) => m.itemType === 'component').map((m) => m.dataCodename),\r\n            linkedItemCodenames: result.linkedItems\r\n                .filter((m) => m.itemType === 'linkedItem')\r\n                .map((m) => m.dataCodename),\r\n            result: rootElement.innerHTML\r\n        };\r\n    }\r\n\r\n    private processRichTextElement(\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IParseResolvers,\r\n        htmlCollection: HTMLCollection,\r\n        result: IParsedObjects,\r\n        linkedItems: IContentItem[],\r\n        linkedItemIndex: ParsedItemIndexReferenceWrapper,\r\n        parentElement: Element | null\r\n    ): IParsedObjects {\r\n        if (!htmlCollection || htmlCollection.length === 0) {\r\n            // there are no more nodes\r\n        } else {\r\n            // extract objects\r\n            for (let i = 0; i < htmlCollection.length; i++) {\r\n                const element = htmlCollection[i];\r\n\r\n                resolvers.elementResolver(parserHelper.convertToParserElement(element));\r\n\r\n                const typeAttribute = element.attributes ? element.attributes.getNamedItem('type') : undefined;\r\n\r\n                // process linked items (modular items)\r\n                if (\r\n                    element.attributes &&\r\n                    typeAttribute &&\r\n                    typeAttribute.value &&\r\n                    typeAttribute.value.toLowerCase() ===\r\n                        parserConfiguration.modularContentElementData.type.toLowerCase()\r\n                ) {\r\n                    const dataCodenameAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.dataCodename\r\n                    );\r\n                    const dataTypeAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.dataType\r\n                    );\r\n\r\n                    if (!dataTypeAttribute) {\r\n                        throw Error('Missing data type attribute. This is likely an error caused by invalid response.');\r\n                    }\r\n\r\n                    const relAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.modularContentElementData.relAttribute\r\n                    );\r\n\r\n                    let itemType: ContentItemType = 'linkedItem';\r\n\r\n                    if (\r\n                        relAttribute &&\r\n                        relAttribute.value === parserConfiguration.modularContentElementData.componentRel\r\n                    ) {\r\n                        itemType = 'component';\r\n                    }\r\n\r\n                    // prepare link item object\r\n                    const linkItemContentObject: ILinkedItemContentObject = {\r\n                        dataCodename: dataCodenameAttribute ? dataCodenameAttribute.value : '',\r\n                        dataType: dataTypeAttribute ? dataTypeAttribute.value : '',\r\n                        itemType: itemType\r\n                    };\r\n\r\n                    const elementParent = element.parentElement;\r\n\r\n                    if (!elementParent) {\r\n                        console.warn(\r\n                            `Could not replace linked item '${linkItemContentObject.dataCodename}' of '${linkItemContentObject.dataType}' because parent node is undefined. Please report this error if you are seeing this.`\r\n                        );\r\n                    } else {\r\n                        if (dataTypeAttribute.value === 'item') {\r\n                            // add to result\r\n                            result.linkedItems.push(linkItemContentObject);\r\n\r\n                            // resolve linked item\r\n                            resolvers.contentItemResolver(\r\n                                parserHelper.convertToParserElement(element),\r\n                                linkItemContentObject.dataCodename,\r\n                                linkedItemIndex.index,\r\n                                parserHelper.getLinkedItem(linkedItems, linkItemContentObject.dataCodename)\r\n                            );\r\n\r\n                            // increment index\r\n                            linkedItemIndex.increment();\r\n                        } else {\r\n                            console.warn(\r\n                                `Rich text element contains object with unsupported data type '${dataTypeAttribute.value}'`\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n                // process links\r\n                else if (\r\n                    element.nodeName.toLowerCase() === parserConfiguration.linkElementData.nodeName.toLowerCase()\r\n                ) {\r\n                    const dataItemIdAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.linkElementData.dataItemId\r\n                    );\r\n\r\n                    if (dataItemIdAttribute) {\r\n                        const linkObject: ILinkObject = {\r\n                            dataItemId: dataItemIdAttribute ? dataItemIdAttribute.value : ''\r\n                        };\r\n\r\n                        // add to result\r\n                        result.links.push(linkObject);\r\n\r\n                        // get original link text (the one inside <a> tag)\r\n                        const linkText = element.innerHTML;\r\n\r\n                        resolvers.urlResolver(\r\n                            parserHelper.convertToParserElement(element),\r\n                            linkObject.dataItemId,\r\n                            linkText,\r\n                            parserHelper.tryGetLink(mainRichTextElement, linkedItems, linkObject.dataItemId)\r\n                        );\r\n                    }\r\n                }\r\n                // process images\r\n                else if (\r\n                    element.nodeName.toLowerCase() === parserConfiguration.imageElementData.nodeName.toLowerCase()\r\n                ) {\r\n                    const dataImageIdAttribute = element.attributes.getNamedItem(\r\n                        parserConfiguration.imageElementData.dataImageId\r\n                    );\r\n\r\n                    // continue only if data image id is present. There could be regular img tags included\r\n                    if (dataImageIdAttribute) {\r\n                        const imageObj: IImageObject = {\r\n                            imageId: dataImageIdAttribute.value\r\n                        };\r\n\r\n                        result.images.push(imageObj);\r\n\r\n                        // resolve image\r\n                        resolvers.imageResolver(\r\n                            parserHelper.convertToParserElement(element),\r\n                            imageObj.imageId,\r\n                            parserHelper.tryGetImage(mainRichTextElement, linkedItems, imageObj.imageId)\r\n                        );\r\n                    }\r\n                } else {\r\n                    // process generic elements\r\n                    resolvers.genericElementResolver(parserHelper.convertToParserElement(element));\r\n                }\r\n\r\n                // recursively process child nodes\r\n                if (element.children && element.children.length > 0) {\r\n                    this.processRichTextElement(\r\n                        mainRichTextElement,\r\n                        resolvers,\r\n                        element.children,\r\n                        result,\r\n                        linkedItems,\r\n                        linkedItemIndex,\r\n                        parentElement\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private createWrapperElement(html: string): HTMLElement {\r\n        const element = document.createElement(parserConfiguration.linkedItemWrapperElem);\r\n        element.innerHTML = html;\r\n\r\n        return element;\r\n    }\r\n}\r\n\r\nexport const browserParser = new BrowserParser();\r\n","export * from './parse-models';\r\nexport * from './parser-configuration';\r\nexport * from './parser.helper';\r\nexport * from './implementation/async-browser-parser.class';\r\nexport * from './implementation/browser-parser.class';\r\n","import { Elements } from '../elements/elements';\r\nimport { ContentItemType, IContentItem, ILink, IRichTextImage } from '../models';\r\n\r\n/**\r\n * This class as a wrapper is required so we can pass\r\n * index as a reference and not a value\r\n */\r\n export class ParsedItemIndexReferenceWrapper {\r\n    constructor(public index: number) {}\r\n\r\n    increment(): void {\r\n        this.index++;\r\n    }\r\n}\r\n\r\nexport interface IParsedObjects {\r\n    links: ILinkObject[];\r\n    linkedItems: ILinkedItemContentObject[];\r\n    images: IImageObject[];\r\n}\r\n\r\n\r\nexport interface ILinkedItemContentObject {\r\n    dataType: string;\r\n    dataCodename: string;\r\n    itemType: ContentItemType;\r\n}\r\n\r\nexport interface ILinkObject {\r\n    dataItemId: string;\r\n}\r\n\r\nexport interface IImageObject {\r\n    imageId: string;\r\n}\r\n\r\nexport interface IParserElementAttribute {\r\n    name: string;\r\n    value: string;\r\n}\r\n\r\n\r\nexport interface IParserElement {\r\n    attributes: IParserElementAttribute[];\r\n    html?: string;\r\n    text?: string;\r\n    parentElement?: IParserElement;\r\n    tag: string;\r\n    setOuterHtml: (newHtml: string) => void;\r\n    setInnerHtml: (newHtml: string) => void;\r\n    setAttribute: (attributeName: string, attributeValue?: string) => void;\r\n    sourceElement: any;\r\n}\r\n\r\nexport interface IParseResolvers {\r\n    elementResolver: (element: IParserElement) => void;\r\n    genericElementResolver: (element: IParserElement) => void;\r\n    urlResolver: (element: IParserElement, linkId: string, linkText: string, link?: ILink) => void;\r\n    imageResolver: (element: IParserElement, imageId: string, image?: IRichTextImage) => void;\r\n    contentItemResolver: (element: IParserElement, linkedItemCodename: string, linkedItemIndex: number, linkedItem?: IContentItem) => void;\r\n}\r\n\r\nexport interface IAsyncParseResolvers {\r\n    elementResolverAsync: (element: IParserElement) => Promise<void>;\r\n    genericElementResolverAsync: (element: IParserElement) => Promise<void>;\r\n    urlResolverAsync: (element: IParserElement, linkId: string, linkText: string, link?: ILink) => Promise<void>;\r\n    imageResolverAsync: (element: IParserElement, imageId: string, image?: IRichTextImage) => Promise<void>;\r\n    contentItemResolverAsync: (element: IParserElement, linkedItemCodename: string, linkedItemIndex: number, linkedItem?: IContentItem) => Promise<void>;\r\n}\r\n\r\nexport interface IParserResult<TParserOutput> {\r\n    result: TParserOutput;\r\n    linkedItemCodenames: string[];\r\n    componentCodenames: string[];\r\n}\r\n\r\nexport interface IParser<TParserOutput> {\r\n    parse(\r\n        html: string,\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IParseResolvers,\r\n        linkedItems: IContentItem[]\r\n    ): IParserResult<TParserOutput>;\r\n}\r\n\r\nexport interface IAsyncParser<TParserOutput> {\r\n    parseAsync(\r\n        html: string,\r\n        mainRichTextElement: Elements.RichTextElement,\r\n        resolvers: IAsyncParseResolvers,\r\n        linkedItems: IContentItem[]\r\n    ): Promise<IParserResult<TParserOutput>>;\r\n}\r\n","\r\nexport const parserConfiguration = {\r\n    linkedItemWrapperElem: 'div',\r\n    modularContentElementData: {\r\n        type: 'application/kenticocloud',\r\n        dataType: 'data-type',\r\n        dataCodename: 'data-codename',\r\n        relAttribute: 'data-rel',\r\n        componentRel: 'component'\r\n    },\r\n    linkElementData: {\r\n        nodeName: 'a',\r\n        dataItemId: 'data-item-id',\r\n    },\r\n    imageElementData: {\r\n        nodeName: 'img',\r\n        dataImageId: 'data-image-id',\r\n        srcAttribute: 'src'\r\n    },\r\n    resolvedLinkedItemIndexAttribute: 'data-sdk-item-index',\r\n    resolvedAttribute: 'data-sdk-resolved'\r\n\r\n};\r\n","import { Elements, ElementType } from '../elements';\r\nimport { IContentItem, ILink, IRichTextImage } from '../models';\r\nimport { IParserElement, IParserElementAttribute } from './parse-models';\r\n\r\nexport class ParserHelper {\r\n\r\n    public readonly sdkResolvedAttributeName: string = 'data-sdk-resolved';\r\n\r\n    getLinkedItem(linkedItems: IContentItem[], itemCodename: string): IContentItem | undefined {\r\n        if (!linkedItems) {\r\n            return undefined;\r\n        }\r\n        return linkedItems.find((m) => m.system.codename === itemCodename);\r\n    }\r\n\r\n    tryGetImage(\r\n        inputElement: Elements.RichTextElement,\r\n        linkedItems: IContentItem[],\r\n        imageId: string\r\n    ): IRichTextImage | undefined {\r\n        const elementImage = inputElement.images.find((m) => m.imageId === imageId);\r\n        if (elementImage) {\r\n            return elementImage;\r\n        }\r\n\r\n        // try to find image in all linked items\r\n        if (linkedItems) {\r\n            for (const linkedItem of linkedItems) {\r\n                for (const elementKey of Object.keys(linkedItem.elements)) {\r\n                    const element = linkedItem.elements[elementKey];\r\n                    if (element.type === ElementType.RichText) {\r\n                        const richTextElement = element as Elements.RichTextElement;\r\n                        const richTextElementImage = richTextElement.images.find((m) => m.imageId === imageId);\r\n                        if (richTextElementImage) {\r\n                            return richTextElementImage;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    tryGetLink(inputElement: Elements.RichTextElement, linkedItems: IContentItem[], linkId: string): ILink | undefined {\r\n        const elementLink = inputElement.links.find((m) => m.linkId === linkId);\r\n        if (elementLink) {\r\n            return elementLink;\r\n        }\r\n\r\n        // try to find link in all linked items\r\n        if (linkedItems) {\r\n            for (const linkedItem of linkedItems) {\r\n                for (const elementKey of Object.keys(linkedItem.elements)) {\r\n                    const element = linkedItem.elements[elementKey];\r\n                    if (element.type === ElementType.RichText) {\r\n                        const richTextElement = element as Elements.RichTextElement;\r\n                        const richTextElementLink = richTextElement.links.find((m) => m.linkId === linkId);\r\n                        if (richTextElementLink) {\r\n                            return richTextElementLink;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    convertToParserElement(element: Element): IParserElement {\r\n        const attributes: IParserElementAttribute[] = [];\r\n\r\n        for (let i = 0; i < element.attributes.length; i++) {\r\n            const attribute = element.attributes[i];\r\n\r\n            attributes.push({\r\n                name: attribute.name,\r\n                value: attribute.value\r\n            });\r\n        }\r\n\r\n        return {\r\n            tag: element.tagName,\r\n            setAttribute: (attributeName, attributeValue) => {\r\n                const attribute = element.attributes.getNamedItem(attributeName);\r\n                if (attribute) {\r\n                    attribute.value = attributeValue ?? '';\r\n                } else {\r\n                    element.setAttribute(attributeName, attributeValue ?? '');\r\n                }\r\n            },\r\n            setInnerHtml: (newHtml) => (element.innerHTML = newHtml),\r\n            setOuterHtml: (newHtml) => (element.outerHTML = newHtml),\r\n            html: element.innerHTML,\r\n            text: element.textContent ? element.textContent : undefined,\r\n            attributes: attributes,\r\n            parentElement: element.parentElement ? this.convertToParserElement(element.parentElement) : undefined,\r\n            sourceElement: element\r\n        };\r\n    }\r\n}\r\n\r\nexport const parserHelper = new ParserHelper();\r\n","import { IDeliveryClientConfig } from '../../config';\r\nimport {\r\n    Filters,\r\n    IKontentListAllResponse,\r\n    IKontentListResponse,\r\n    IQueryConfig,\r\n    Parameters,\r\n    SortOrder\r\n} from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseListingQuery } from './base-listing-query.class';\r\n\r\nexport abstract class BaseItemListingQuery<\r\n    TResponse extends IKontentListResponse,\r\n    TAllResponse extends IKontentListAllResponse,\r\n    TQueryConfig extends IQueryConfig,\r\n    TContract\r\n> extends BaseListingQuery<TResponse, TAllResponse, TQueryConfig, TContract> {\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Empty filter condition\r\n     * @param element Element with empty value\r\n     */\r\n    emptyFilter(element: string): this {\r\n        this.parameters.push(new Filters.EmptyFilter(element));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Not empty filter condition\r\n     * @param element Element with non-empty value\r\n     */\r\n    notEmptyFilter(element: string): this {\r\n        this.parameters.push(new Filters.NotEmptyFilter(element));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Equals filter condition\r\n     * @param element Element to filter. Example: 'elements.movie'\r\n     * @param value Value to match. Example: 'Kingsman'\r\n     */\r\n    equalsFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.EqualsFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Not equals filter condition\r\n     * @param element Element to filter. Example: 'elements.movie'\r\n     * @param value Value to match. Example: 'Kingsman'\r\n     */\r\n    notEqualsFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.NotEqualsFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * All filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    allFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.AllFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Any filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    anyFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.AnyFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Contains filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    containsFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.ContainsFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Greater then filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    greaterThanFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.GreaterThanFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Greater then or equals filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    greaterThanOrEqualFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.GreaterThanOrEqualFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * In filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    inFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.InFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Not in filter\r\n     * @param element Element to filter.\r\n     * @param values Values\r\n     */\r\n    notInFilter(element: string, values: string[]): this {\r\n        this.parameters.push(new Filters.NotInFilter(element, values));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Less then filter\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    lessThanFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.LessThanFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param element Element to filter.\r\n     * @param value Value\r\n     */\r\n    lessThanOrEqualFilter(element: string, value: string): this {\r\n        this.parameters.push(new Filters.LessThanOrEqualFilter(element, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param element Element to filter.\r\n     * @param lowerValue Lower value of range (e.g. 2)\r\n     * @param higherValue Higher value of range (e.g. 10)\r\n     */\r\n    rangeFilter(element: string, lowerValue: number, higherValue: number): this {\r\n        this.parameters.push(new Filters.RangeFilter(element, lowerValue, higherValue));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Limits the number of items returned by query\r\n     * @param limit Number of items to load\r\n     */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Orders query based on given element and sort order\r\n     * @param element Element by which to order\r\n     * @param sortOrder Asc/Desc order type\r\n     */\r\n    orderParameter(element: string, sortOrder: SortOrder): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, sortOrder));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets descending order on given element\r\n     * @param element Element by which to order\r\n     */\r\n    orderByDescending(element: string): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, 'desc'));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets Ascending order on given element\r\n     * @param element Element by which to order\r\n     */\r\n    orderByAscending(element: string): this {\r\n        this.parameters.push(new Parameters.OrderParameter(element, 'asc'));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Skips the selected number of items\r\n     * @param skip Number of items to skip\r\n     */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n}\r\n","import { IDeliveryClientConfig } from '../../config';\r\nimport {\r\n    continuationTokenHeaderName,\r\n    IGroupedNetworkResponse,\r\n    IKontentListAllResponse,\r\n    IKontentListResponse,\r\n    IDeliveryNetworkResponse,\r\n    IListAllQueryConfig,\r\n    IQueryConfig\r\n} from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from './base-query.class';\r\n\r\nexport abstract class BaseListingQuery<\r\n    TResponse extends IKontentListResponse,\r\n    TAllResponse extends IKontentListAllResponse,\r\n    TQueryConfig extends IQueryConfig,\r\n    TContract\r\n> extends BaseQuery<TResponse, TQueryConfig, TContract> {\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Sets continuation token header\r\n     */\r\n    withContinuationToken(token: string): this {\r\n        // remove previous continuation token if there is any\r\n        let queryHeaders = this._queryConfig.customHeaders ?? [];\r\n        queryHeaders = queryHeaders.filter((m) => m.header !== continuationTokenHeaderName);\r\n\r\n        this._queryConfig.customHeaders = queryHeaders;\r\n\r\n        this.withHeaders([\r\n            {\r\n                header: continuationTokenHeaderName,\r\n                value: token\r\n            }\r\n        ]);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Query to get all items. Uses paging data and may execute multiple HTTP requests depending on number of items\r\n     */\r\n    toAllPromise(\r\n        queryAllConfig?: IListAllQueryConfig<TResponse, TContract>\r\n    ): Promise<IGroupedNetworkResponse<TAllResponse>> {\r\n        return this.queryService.getListAllResponse<TResponse, TAllResponse, TContract>({\r\n            page: 1,\r\n            listQueryConfig: queryAllConfig,\r\n            allResponseFactory: (items, responses) => {\r\n                const response = this.allResponseFactory(items, responses);\r\n                return {\r\n                    data: response,\r\n                    responses: responses\r\n                };\r\n            },\r\n            getResponse: (nextPageUrl, continuationToken) => {\r\n                let query = this;\r\n\r\n                if (nextPageUrl) {\r\n                    query = this.withCustomUrl(nextPageUrl);\r\n                }\r\n                if (continuationToken) {\r\n                    query = this.withContinuationToken(continuationToken);\r\n                }\r\n\r\n                return query.toPromise();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected abstract allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<TResponse, TContract>[]\r\n    ): TAllResponse;\r\n}\r\n","import { IHeader, IQueryParameter } from '@kontent-ai/core-sdk';\r\n\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IDeliveryNetworkResponse, IKontentResponse, IQueryConfig, Parameters } from '../../models';\r\nimport { QueryService } from '../../services';\r\n\r\nexport abstract class BaseQuery<TResponse extends IKontentResponse, TQueryConfig extends IQueryConfig, TContract> {\r\n    protected parameters: IQueryParameter[] = [];\r\n    protected customUrl?: string;\r\n    protected abstract _queryConfig: TQueryConfig;\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {}\r\n\r\n    /**\r\n     * Gets URL of the query\r\n     */\r\n    abstract getUrl(): string;\r\n\r\n    /**\r\n     * Gets promise for query execution\r\n     */\r\n    abstract toPromise(): Promise<IDeliveryNetworkResponse<TResponse, TContract>>;\r\n\r\n    /**\r\n     * Maps json data to response\r\n     */\r\n    abstract map(json: any): TResponse;\r\n\r\n    /**\r\n     * Adds custom parameter to query\r\n     * @param name Name of parameter\r\n     * @param value Value of parameter\r\n     */\r\n    withCustomParameter(name: string, value: string): this {\r\n        this.parameters.push(new Parameters.QueryParameter(name, value));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds parameter to query\r\n     * @param name Name of parameter\r\n     * @param value Value of parameter\r\n     */\r\n    withParameter(parameter: IQueryParameter): this {\r\n        this.parameters.push(parameter);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Adds parameters to query\r\n     * @param parameters Array of parameters\r\n     */\r\n    withParameters(parameters: IQueryParameter[]): this {\r\n        this.parameters.push(...parameters);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets headers used by this query\r\n     */\r\n    getHeaders(): IHeader[] {\r\n        return this.queryService.getHeaders(this._queryConfig, []);\r\n    }\r\n\r\n    /**\r\n     * Sets request headers\r\n     */\r\n    withHeaders(headers: IHeader[]): this {\r\n        const queryHeaders = this._queryConfig.customHeaders ?? [];\r\n        queryHeaders.push(...headers);\r\n        this._queryConfig.customHeaders = queryHeaders;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets request header\r\n     */\r\n    withHeader(header: IHeader): this {\r\n        const queryHeaders = this._queryConfig.customHeaders ?? [];\r\n        queryHeaders.push(header);\r\n        this._queryConfig.customHeaders = queryHeaders;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Sets custom URL of request (overrides default URL of the query)\r\n     */\r\n    withCustomUrl(url: string): this {\r\n        this.customUrl = url;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets all query parameter currently applied to query\r\n     */\r\n    getParameters(): IQueryParameter[] {\r\n        return this.parameters;\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: TQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    protected resolveUrlInternal(action: string): string {\r\n        // use custom URL if user specified it\r\n        if (this.customUrl) {\r\n            return this.customUrl;\r\n        }\r\n\r\n        // use original url\r\n        return this.queryService.getUrl(action, this._queryConfig ?? {}, this.getParameters());\r\n    }\r\n\r\n    protected processDefaultLanguageParameter(): void {\r\n        // add default language if none is specified && default language is specified globally\r\n        if (this.config.defaultLanguage) {\r\n            const languageParameter = this.getParameters().find((m) => m.getParam() === 'language');\r\n            if (!languageParameter) {\r\n                // language parameter was not specified in query, use globally defined language\r\n                this.parameters.push(new Parameters.LanguageParameter(this.config.defaultLanguage));\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { Responses, IElementQueryConfig, IDeliveryNetworkResponse } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport class ElementQuery extends BaseQuery<\r\n    Responses.IViewContentTypeElementResponse,\r\n    IElementQueryConfig,\r\n    Contracts.IViewContentTypeElementContract\r\n> {\r\n\r\n    protected _queryConfig: IElementQueryConfig = {};\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private typeCodename: string,\r\n        private elementCodename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!typeCodename) {\r\n            throw Error(`Codename of the type has to be provided`);\r\n        }\r\n\r\n        if (!elementCodename) {\r\n            throw Error(`Codename of the element has to be provided`);\r\n        }\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<\r\n            Responses.IViewContentTypeElementResponse,\r\n            Contracts.IViewContentTypeElementContract\r\n        >\r\n    > {\r\n        return this.queryService.getElementAsync(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        return super.resolveUrlInternal(`/types/${this.typeCodename}/elements/${this.elementCodename}`);\r\n    }\r\n\r\n    map(json: any): Responses.IViewContentTypeElementResponse {\r\n        return this.queryService.mappingService.viewContentTypeElementResponse(json);\r\n    }\r\n}\r\n","export * from './common/base-query.class';\r\nexport * from './element/element-query.class';\r\nexport * from './item/multiple-items-query.class';\r\nexport * from './item/single-item-query.class';\r\nexport * from './taxonomy/taxonomies-query.class';\r\nexport * from './taxonomy/taxonomy-query.class';\r\nexport * from './type/multiple-type-query.class';\r\nexport * from './type/single-type-query.class';\r\nexport * from './items-feed/items-feed-query.class';\r\nexport * from './language/languages-query.class';\r\nexport * from './sync/initialize-sync-query.class';\r\nexport * from './sync/sync-changes-query.class';\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { Filters, IContentItem, IItemQueryConfig, IDeliveryNetworkResponse, Responses, Parameters } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemListingQuery } from '../common/base-item-listing-query.class';\r\n\r\nexport class MultipleItemsQuery<TContentItem extends IContentItem = IContentItem> extends BaseItemListingQuery<\r\n    Responses.IListContentItemsResponse<TContentItem>,\r\n    Responses.IListContentItemsAllResponse<TContentItem>,\r\n    IItemQueryConfig,\r\n    Contracts.IListContentItemsContract\r\n> {\r\n    protected _queryConfig: IItemQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Adds information about the total number of content items matching your query.\r\n     * When set to true, the pagination object returned in the API response contains\r\n     * an additional total_count property.\r\n     */\r\n    includeTotalCountParameter(): this {\r\n        this.parameters.push(new Parameters.IncludeTotalCountParameter());\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets only item of given type\r\n     * @param type Codename of type to get\r\n     */\r\n    type(type: string): this {\r\n        this.parameters.push(new Filters.TypeFilter(type));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items of given types (logical or)\r\n     * I.e. get items of either 'Actor' or 'Movie' type\r\n     * @param types Types to get\r\n     */\r\n    types(types: string[]): this {\r\n        this.parameters.push(new Filters.TypeFilter(types));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets only item from given collection\r\n     * @param collection Codename of collection to get\r\n     */\r\n    collection(collection: string): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collection));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items from given collections (logical or)\r\n     * I.e. get items of either 'default' or 'christmas-campaign' collection\r\n     * @param collections Collections to get\r\n     */\r\n    collections(collections: string[]): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collections));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Indicates depth of query that affects loading of nested linked items.\r\n     * @param depth Depth of the query (> 0)\r\n     */\r\n    depthParameter(depth: number): this {\r\n        this.parameters.push(new Parameters.DepthParameter(depth));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Language codename\r\n     * @param languageCodename Codename of the language\r\n     */\r\n    languageParameter(languageCodename: string): this {\r\n        this.parameters.push(new Parameters.LanguageParameter(languageCodename));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used to limit the number of elements returned by query.\r\n     * @param elementCodenames Array of element codenames to fetch\r\n     */\r\n    elementsParameter(elementCodenames: string[]): this {\r\n        this.parameters.push(new Parameters.ElementsParameter(elementCodenames));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IListContentItemsResponse<TContentItem>, Contracts.IListContentItemsContract>\r\n    > {\r\n        return this.queryService.getMultipleItems(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/items';\r\n\r\n        // add default language is necessry\r\n        this.processDefaultLanguageParameter();\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    map(json: any): Responses.IListContentItemsResponse<TContentItem> {\r\n        return this.queryService.mappingService.listContentItemsResponse(json);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<\r\n            Responses.IListContentItemsResponse<TContentItem>,\r\n            Contracts.IListContentItemsContract\r\n        >[]\r\n    ): Responses.IListContentItemsAllResponse<TContentItem> {\r\n        return {\r\n            items: items,\r\n            responses: responses\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IContentItem, IItemQueryConfig, IDeliveryNetworkResponse, Responses, Parameters } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport class SingleItemQuery<TContentItem extends IContentItem = IContentItem> extends BaseQuery<\r\n    Responses.IViewContentItemResponse<TContentItem>,\r\n    IItemQueryConfig,\r\n    Contracts.IViewContentItemContract\r\n> {\r\n    protected _queryConfig: IItemQueryConfig = {};\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private codename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!codename) {\r\n            throw Error(`'codename' has to be configured for 'SingleItemQuery' query`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Indicates depth of query that affects loading of nested linked items.\r\n     * @param depth Depth of the query (> 0)\r\n     */\r\n    depthParameter(depth: number): this {\r\n        this.parameters.push(new Parameters.DepthParameter(depth));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: IItemQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Language codename\r\n     * @param languageCodename Codename of the language\r\n     */\r\n    languageParameter(languageCodename: string): this {\r\n        this.parameters.push(new Parameters.LanguageParameter(languageCodename));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used to limit the number of elements returned by query.\r\n     * @param elementCodenames Array of element codenames to fetch\r\n     */\r\n    elementsParameter(elementCodenames: string[]): this {\r\n        this.parameters.push(new Parameters.ElementsParameter(elementCodenames));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IViewContentItemResponse<TContentItem>, Contracts.IViewContentItemContract>\r\n    > {\r\n        return this.queryService.getSingleItemAsync(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/items/' + this.codename;\r\n\r\n        // add default language is necessry\r\n        this.processDefaultLanguageParameter();\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    map(json: any): Responses.IViewContentItemResponse<TContentItem> {\r\n        return this.queryService.mappingService.viewContentItemResponse(json);\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { Filters, IContentItem, IItemQueryConfig, IDeliveryNetworkResponse, Parameters, Responses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseItemListingQuery } from '../common/base-item-listing-query.class';\r\n\r\nexport class ItemsFeedQuery<TContentItem extends IContentItem = IContentItem> extends BaseItemListingQuery<\r\n    Responses.IListItemsFeedResponse<TContentItem>,\r\n    Responses.IListItemsFeedAllResponse<TContentItem>,\r\n    IItemQueryConfig,\r\n    Contracts.IItemsFeedContract\r\n> {\r\n\r\n    protected _queryConfig: IItemQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets only item of given type\r\n     * @param type Codename of type to get\r\n     */\r\n    type(type: string): this {\r\n        this.parameters.push(new Filters.TypeFilter(type));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items of given types (logical or)\r\n     * I.e. get items of either 'Actor' or 'Movie' type\r\n     * @param types Types to get\r\n     */\r\n    types(types: string[]): this {\r\n        this.parameters.push(new Filters.TypeFilter(types));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets only item from given collection\r\n     * @param collection Codename of collection to get\r\n     */\r\n    collection(collection: string): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collection));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets items from given collections (logical or)\r\n     * I.e. get items of either 'default' or 'christmas-campaign' collection\r\n     * @param collections Collections to get\r\n     */\r\n    collections(collections: string[]): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collections));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Language codename\r\n     * @param languageCodename Codename of the language\r\n     */\r\n    languageParameter(languageCodename: string): this {\r\n        this.parameters.push(new Parameters.LanguageParameter(languageCodename));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Used to limit the number of elements returned by query.\r\n     * @param elementCodenames Array of element codenames to fetch\r\n     */\r\n    elementsParameter(elementCodenames: string[]): this {\r\n        this.parameters.push(new Parameters.ElementsParameter(elementCodenames));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IListItemsFeedResponse<TContentItem>, Contracts.IItemsFeedContract>\r\n    > {\r\n        return this.queryService.getItemsFeed(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/items-feed';\r\n\r\n        // add default language is necessary\r\n        this.processDefaultLanguageParameter();\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: IItemQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    map(json: any): Responses.IListItemsFeedResponse<TContentItem> {\r\n        return this.queryService.mappingService.itemsFeedResponse(json);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<Responses.IListItemsFeedResponse<TContentItem>, Contracts.IItemsFeedContract>[]\r\n    ): Responses.IListItemsFeedAllResponse<TContentItem> {\r\n        return {\r\n            items: items,\r\n            responses: responses\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport {\r\n    IDeliveryNetworkResponse,\r\n    ILanguagesQueryConfig,\r\n    Parameters,\r\n    Responses\r\n} from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseListingQuery } from '../common/base-listing-query.class';\r\n\r\nexport class LanguagesQuery extends BaseListingQuery<\r\n    Responses.IListLanguagesResponse,\r\n    Responses.IListLanguagesAllResponse,\r\n    ILanguagesQueryConfig,\r\n    Contracts.IListLanguagesContract\r\n> {\r\n    /**\r\n     * Endpoint\r\n     */\r\n    protected readonly endpoint: string = 'languages';\r\n\r\n    protected _queryConfig: ILanguagesQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Limits the number of taxonomies returned by query\r\n     * @param limit Number of taxonomies to load\r\n     */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Skips the selected number of taxonomies\r\n     * @param skip Number of taxonomies to skip\r\n     */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IListLanguagesResponse, Contracts.IListLanguagesContract>\r\n    > {\r\n        return this.queryService.getLanguages(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/' + this.endpoint;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: ILanguagesQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    map(json: any): Responses.IListLanguagesResponse {\r\n        return this.queryService.mappingService.listLanguagesResponse(json);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<Responses.IListLanguagesResponse, Contracts.IListLanguagesContract>[]\r\n    ): Responses.IListLanguagesAllResponse {\r\n        return {\r\n            items: items,\r\n            responses: responses\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport {\r\n    Filters,\r\n    IDeliveryNetworkResponse,\r\n    ILanguagesQueryConfig,\r\n    ISyncInitQueryConfig,\r\n    Parameters,\r\n    Responses\r\n} from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport class InitializeSyncQuery extends BaseQuery<\r\n    Responses.IInitializeSyncResponse,\r\n    ISyncInitQueryConfig,\r\n    Contracts.IInitializeSyncContract\r\n> {\r\n    protected readonly endpoint: string = 'sync/init';\r\n\r\n    protected _queryConfig: ILanguagesQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Gets only item of given type\r\n     * @param type Codename of type to get\r\n     */\r\n    type(type: string): this {\r\n        this.parameters.push(new Filters.TypeFilter(type));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets only item from given collection\r\n     * @param collection Codename of collection to get\r\n     */\r\n    collection(collection: string): this {\r\n        this.parameters.push(new Filters.CollectionFilter(collection));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Language codename\r\n     * @param languageCodename Codename of the language\r\n     */\r\n    languageParameter(languageCodename: string): this {\r\n        this.parameters.push(new Parameters.LanguageParameter(languageCodename));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IInitializeSyncResponse, Contracts.IInitializeSyncContract>\r\n    > {\r\n        return this.queryService.initializeSync(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/' + this.endpoint;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: ISyncInitQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    map(json: any): Responses.IInitializeSyncResponse {\r\n        return this.queryService.mappingService.initializeContentSync(json);\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IItemQueryConfig, IDeliveryNetworkResponse, Responses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseListingQuery } from '../common/base-listing-query.class';\r\n\r\nexport class SyncChangesQuery extends BaseListingQuery<\r\n    Responses.ISyncChangesResponse,\r\n    Responses.ISyncChangesAllResponse,\r\n    IItemQueryConfig,\r\n    Contracts.ISyncChangesContract\r\n> {\r\n    protected _queryConfig: IItemQueryConfig = {};\r\n\r\n    private readonly action: string = '/sync';\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    toPromise(): Promise<IDeliveryNetworkResponse<Responses.ISyncChangesResponse, Contracts.ISyncChangesContract>> {\r\n        return this.queryService.syncChanges(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        return super.resolveUrlInternal(this.action);\r\n    }\r\n\r\n    /**\r\n     * Used to configure query\r\n     * @param queryConfig Query configuration\r\n     */\r\n    queryConfig(queryConfig: IItemQueryConfig): this {\r\n        this._queryConfig = queryConfig;\r\n        return this;\r\n    }\r\n\r\n    map(json: any): Responses.ISyncChangesResponse {\r\n        return this.queryService.mappingService.syncChanges(json);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<Responses.ISyncChangesResponse, Contracts.ISyncChangesContract>[]\r\n    ): Responses.ISyncChangesAllResponse {\r\n        return {\r\n            items: items,\r\n            responses: responses\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport {\r\n    IDeliveryNetworkResponse,\r\n    ITaxonomyQueryConfig,\r\n    Parameters,\r\n    Responses\r\n} from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseListingQuery } from '../common/base-listing-query.class';\r\n\r\nexport class TaxonomiesQuery extends BaseListingQuery<\r\n    Responses.IListTaxonomiesResponse,\r\n    Responses.IListTaxonomiesAllResponse,\r\n    ITaxonomyQueryConfig,\r\n    Contracts.IListTaxonomyGroupsContract\r\n> {\r\n    /**\r\n     * Taxonomies endpoint URL action\r\n     */\r\n    protected readonly taxonomiesEndpoint: string = 'taxonomies';\r\n\r\n    protected _queryConfig: ITaxonomyQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Limits the number of taxonomies returned by query\r\n     * @param limit Number of taxonomies to load\r\n     */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Skips the selected number of taxonomies\r\n     * @param skip Number of taxonomies to skip\r\n     */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<\r\n            Responses.IListTaxonomiesResponse,\r\n            Contracts.IListTaxonomyGroupsContract\r\n        >\r\n    > {\r\n        return this.queryService.getTaxonomies(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/' + this.taxonomiesEndpoint;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    map(json: any): Responses.IListTaxonomiesResponse {\r\n        return this.queryService.mappingService.listTaxonomiesResponse(json);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<\r\n            Responses.IListTaxonomiesResponse,\r\n            Contracts.IListTaxonomyGroupsContract\r\n        >[]\r\n    ): Responses.IListTaxonomiesAllResponse {\r\n        return {\r\n            items: items,\r\n            responses: responses\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IDeliveryNetworkResponse, ITaxonomyQueryConfig, Responses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport class TaxonomyQuery extends BaseQuery<\r\n    Responses.IViewTaxonomyResponse,\r\n    ITaxonomyQueryConfig,\r\n    Contracts.IViewTaxonomyGroupContract\r\n> {\r\n    /**\r\n     * Taxonomies endpoint URL action\r\n     */\r\n    protected readonly taxonomiesEndpoint: string = 'taxonomies';\r\n\r\n    protected _queryConfig: ITaxonomyQueryConfig = {};\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private taxonomyCodename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!taxonomyCodename) {\r\n            throw Error(`Cannot create taxonomy query without codename of the taxonomy`);\r\n        }\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IViewTaxonomyResponse, Contracts.IViewTaxonomyGroupContract>\r\n    > {\r\n        return this.queryService.getTaxonomy(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/' + this.taxonomiesEndpoint + '/' + this.taxonomyCodename;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    map(json: any): Responses.IViewTaxonomyResponse {\r\n        return this.queryService.mappingService.viewTaxonomyResponse(json);\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IContentTypeQueryConfig, IDeliveryNetworkResponse, Parameters, Responses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseListingQuery } from '../common/base-listing-query.class';\r\n\r\nexport class MultipleTypeQuery extends BaseListingQuery<\r\n    Responses.IListContentTypesResponse,\r\n    Responses.IListContentTypesAllResponse,\r\n    IContentTypeQueryConfig,\r\n    Contracts.IListContentTypeContract\r\n> {\r\n    protected _queryConfig: IContentTypeQueryConfig = {};\r\n\r\n    constructor(protected config: IDeliveryClientConfig, protected queryService: QueryService) {\r\n        super(config, queryService);\r\n    }\r\n\r\n    /**\r\n     * Used to limit the number of elements returned by query.\r\n     * @param elementCodenames Array of element codenames to fetch\r\n     */\r\n    elementsParameter(elementCodenames: string[]): this {\r\n        this.parameters.push(new Parameters.ElementsParameter(elementCodenames));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Limits the number of taxonomies returned by query\r\n     * @param limit Number of taxonomies to load\r\n     */\r\n    limitParameter(limit: number): this {\r\n        this.parameters.push(new Parameters.LimitParameter(limit));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Skips the selected number of taxonomies\r\n     * @param skip Number of taxonomies to skip\r\n     */\r\n    skipParameter(skip: number): this {\r\n        this.parameters.push(new Parameters.SkipParameter(skip));\r\n        return this;\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IListContentTypesResponse, Contracts.IListContentTypeContract>\r\n    > {\r\n        return this.queryService.getMultipleTypes(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/types';\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    map(json: any): Responses.IListContentTypesResponse {\r\n        return this.queryService.mappingService.listContentTypesResponse(json);\r\n    }\r\n\r\n    protected allResponseFactory(\r\n        items: any[],\r\n        responses: IDeliveryNetworkResponse<Responses.IListContentTypesResponse, Contracts.IListContentTypeContract>[]\r\n    ): Responses.IListContentTypesAllResponse {\r\n        return {\r\n            items: items,\r\n            responses: responses\r\n        };\r\n    }\r\n}\r\n","import { Contracts } from '../../contracts';\r\nimport { IDeliveryClientConfig } from '../../config';\r\nimport { IContentTypeQueryConfig, IDeliveryNetworkResponse, Responses } from '../../models';\r\nimport { QueryService } from '../../services';\r\nimport { BaseQuery } from '../common/base-query.class';\r\n\r\nexport class SingleTypeQuery extends BaseQuery<\r\n    Responses.IViewContentTypeResponse,\r\n    IContentTypeQueryConfig,\r\n    Contracts.IViewContentTypeContract\r\n> {\r\n    protected _queryConfig: IContentTypeQueryConfig = {};\r\n\r\n    constructor(\r\n        protected config: IDeliveryClientConfig,\r\n        protected queryService: QueryService,\r\n        private typeCodename: string\r\n    ) {\r\n        super(config, queryService);\r\n\r\n        if (!typeCodename) {\r\n            throw Error(`Cannot create type query without the codename of the type`);\r\n        }\r\n    }\r\n\r\n    toPromise(): Promise<\r\n        IDeliveryNetworkResponse<Responses.IViewContentTypeResponse, Contracts.IViewContentTypeContract>\r\n    > {\r\n        return this.queryService.getSingleType(this.getUrl(), this._queryConfig ?? {});\r\n    }\r\n\r\n    getUrl(): string {\r\n        const action = '/types/' + this.typeCodename;\r\n\r\n        return super.resolveUrlInternal(action);\r\n    }\r\n\r\n    map(json: any): Responses.IViewContentTypeResponse {\r\n        return this.queryService.mappingService.viewContentTypeResponse(json);\r\n    }\r\n}\r\n","export * from './rich-text/rich-text-resolver.models';\r\nexport * from './property-name/camel-case-property-name-resolver.class';\r\nexport * from './property-name/pascal-case-property-name-resolver.class';\r\nexport * from './property-name/snake-case-property-name-resolver.class';\r\nexport * from './rich-text/sync/rich-text-html-resolver';\r\nexport * from './rich-text/sync/rich-text-object-resolver';\r\nexport * from './rich-text/sync/rich-text-json-resolver';\r\nexport * from './rich-text/async/async-rich-text-html-resolver';\r\n\r\n\r\n","import { textHelper } from '../../utilities';\r\nimport { PropertyNameResolver } from '../../models';\r\n\r\nexport const camelCasePropertyNameResolver: PropertyNameResolver = (contentType, element) => {\r\n    return textHelper.addUnderscoreWhenStarsWithNumber(textHelper.removeZeroWidthCharacters(camelize(element)));\r\n};\r\n\r\nfunction camelize(str: string): string {\r\n    str = str.replace(textHelper.getPropertyNameRegex(), (_, c) => (c ? c.toUpperCase() : ''));\r\n    return str.substring(0, 1).toLowerCase() + str.substring(1);\r\n}\r\n","import { textHelper } from '../../utilities';\r\nimport { PropertyNameResolver } from '../../models';\r\n\r\nexport const pascalCasePropertyNameResolver: PropertyNameResolver = (contentType, element) => {\r\n    return textHelper.addUnderscoreWhenStarsWithNumber(textHelper.removeZeroWidthCharacters(camelize(element)));\r\n};\r\n\r\nfunction camelize(str: string): string {\r\n    str = str.replace(textHelper.getPropertyNameRegex(), (_, c) => (c ? c.toUpperCase() : ''));\r\n    return str.substring(0, 1).toUpperCase() + str.substring(1);\r\n}\r\n","import { textHelper } from '../../utilities';\r\nimport { PropertyNameResolver } from '../../models';\r\n\r\nexport const snakeCasePropertyNameResolver: PropertyNameResolver = (contentType, element) => {\r\n    return textHelper\r\n        .addUnderscoreWhenStarsWithNumber(textHelper.removeZeroWidthCharacters(toSnakeCase(element)))\r\n        .toLowerCase();\r\n};\r\n\r\nfunction toSnakeCase(str: string): string {\r\n    str = str.replace(textHelper.getPropertyNameRegex(), (_, c) => '_' + (c ? c.toLowerCase() : ''));\r\n    return removeEndUnderscore(removeStartUnderscore(str));\r\n}\r\n\r\nfunction removeStartUnderscore(str: string): string {\r\n    if (!str.startsWith('_')) {\r\n        return str;\r\n    }\r\n\r\n    return str.substring(1);\r\n}\r\n\r\nfunction removeEndUnderscore(str: string): string {\r\n    if (!str.endsWith('_')) {\r\n        return str;\r\n    }\r\n\r\n    return str.slice(0, -1);\r\n}\r\n","import { IResolvedRichTextHtmlResult, IAsyncRichTextHtmlResolverInput } from '../rich-text-resolver.models';\r\nimport { asyncBrowserParser, IAsyncParser, parserConfiguration, parserHelper } from '../../../parser';\r\nimport { BaseAsyncRichTextResolver } from '../base/base-async-rich-text-resolver';\r\n\r\nexport class AsyncRichTextHtmlResolver extends BaseAsyncRichTextResolver<\r\n    IAsyncRichTextHtmlResolverInput,\r\n    IResolvedRichTextHtmlResult\r\n> {\r\n    constructor(parser?: IAsyncParser<string>) {\r\n        super(asyncBrowserParser, parser);\r\n    }\r\n\r\n    async resolveRichTextAsync(input: IAsyncRichTextHtmlResolverInput): Promise<IResolvedRichTextHtmlResult> {\r\n        return await this.resolveRichTextInternalAsync(input.element.value, input);\r\n    }\r\n\r\n    private async resolveRichTextInternalAsync(\r\n        html: string,\r\n        input: IAsyncRichTextHtmlResolverInput\r\n    ): Promise<IResolvedRichTextHtmlResult> {\r\n        const parsedResult = await super.getAsyncParser().parseAsync(\r\n            html,\r\n            input.element,\r\n            {\r\n                elementResolverAsync: async (element) => {},\r\n                contentItemResolverAsync: async (element, itemCodename, linkedItemIndex, linkedItem) => {\r\n                    const parentElement = element.parentElement;\r\n\r\n                    if (parentElement) {\r\n                        const resolvedItemHtml = input.contentItemResolverAsync\r\n                            ? (await input.contentItemResolverAsync(itemCodename, linkedItem)).contentItemHtml ?? ''\r\n                            : '';\r\n\r\n                        // resursively resolve HTML\r\n                        const innerHtml = (await this.resolveRichTextInternalAsync(resolvedItemHtml, input)).html;\r\n\r\n                        // set resolved html\r\n                        if (input.preserveResolvedObjectTags === true) {\r\n                            element.setInnerHtml(innerHtml);\r\n                        } else {\r\n                            element.setOuterHtml(innerHtml);\r\n                        }\r\n\r\n                        // set resolved attribute\r\n                        element.setAttribute(parserHelper.sdkResolvedAttributeName, '1');\r\n                    }\r\n                },\r\n                genericElementResolverAsync: async (element) => {\r\n                    // do nothing to generic elements\r\n                },\r\n                imageResolverAsync: async (element, imageId, image) => {\r\n                    // get image result\r\n                    const imageResult = input.imageResolverAsync\r\n                        ? await input.imageResolverAsync(imageId, image)\r\n                        : undefined;\r\n\r\n                    // html has priority over url resolver\r\n                    if (imageResult?.imageHtml) {\r\n                        // replace link html\r\n                        element.setOuterHtml(imageResult.imageHtml);\r\n                    } else if (imageResult?.imageUrl) {\r\n                        // set link url only\r\n                        element.setAttribute(parserConfiguration.imageElementData.srcAttribute, imageResult.imageUrl);\r\n                    }\r\n                },\r\n                urlResolverAsync: async (element, linkId, linkText, link) => {\r\n                    if (input.urlResolverAsync) {\r\n                        const urlResult = await input.urlResolverAsync(linkId, linkText, link);\r\n\r\n                        // html has priority over url resolver\r\n                        if (urlResult?.linkHtml) {\r\n                            // replace link html\r\n                            element.setOuterHtml(urlResult.linkHtml);\r\n                        } else if (urlResult?.linkUrl) {\r\n                            // set link url only\r\n                            element.setAttribute('href', urlResult.linkUrl);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            input.linkedItems ?? []\r\n        );\r\n\r\n        return {\r\n            componentCodenames: parsedResult.componentCodenames,\r\n            linkedItemCodenames: parsedResult.linkedItemCodenames,\r\n            html: parsedResult.result\r\n        };\r\n    }\r\n}\r\n\r\nexport const createAsyncRichTextHtmlResolver = (parser?: IAsyncParser<string>) => new AsyncRichTextHtmlResolver(parser);\r\n","import { IAsyncParser } from '../../../parser';\r\nimport { IRichTextResolverAsync } from '../rich-text-resolver.models';\r\n\r\nexport abstract class BaseAsyncRichTextResolver<TInput, TOutput> implements IRichTextResolverAsync<TInput, TOutput> {\r\n    constructor(private defaultParser: IAsyncParser<any>, private parser?: IAsyncParser<any>) {}\r\n\r\n    abstract resolveRichTextAsync(input: TInput): Promise<TOutput>;\r\n\r\n    protected getAsyncParser(): IAsyncParser<any> {\r\n        if (this.parser) {\r\n            return this.parser;\r\n        }\r\n\r\n        return this.defaultParser;\r\n    }\r\n}\r\n","import { IParser } from '../../../parser';\r\nimport { IRichTextResolver } from '../rich-text-resolver.models';\r\n\r\nexport abstract class BaseRichTextResolver<TInput, TOutput> implements IRichTextResolver<TInput, TOutput> {\r\n    constructor(private defaultParser: IParser<any>, private parser?: IParser<any>) {}\r\n\r\n    abstract resolveRichText(input: TInput): TOutput;\r\n\r\n    protected getParser(): IParser<any> {\r\n        if (this.parser) {\r\n            return this.parser;\r\n        }\r\n\r\n        return this.defaultParser;\r\n    }\r\n}\r\n","import { IResolvedRichTextHtmlResult, IRichTextHtmlResolverInput } from '../rich-text-resolver.models';\r\nimport { browserParser, IParser, parserConfiguration, parserHelper } from '../../../parser';\r\nimport { BaseRichTextResolver } from '../base/base-rich-text-resolver';\r\n\r\nexport class RichTextHtmlResolver extends BaseRichTextResolver<\r\n    IRichTextHtmlResolverInput,\r\n    IResolvedRichTextHtmlResult\r\n> {\r\n    constructor(parser?: IParser<string>) {\r\n        super(browserParser, parser);\r\n    }\r\n\r\n    resolveRichText(input: IRichTextHtmlResolverInput): IResolvedRichTextHtmlResult {\r\n        return this.resolveRichTextInternal(input.element.value, input);\r\n    }\r\n\r\n    private resolveRichTextInternal(html: string, input: IRichTextHtmlResolverInput): IResolvedRichTextHtmlResult {\r\n        const parsedResult = super.getParser().parse(\r\n            html,\r\n            input.element,\r\n            {\r\n                elementResolver: (element) => {},\r\n                contentItemResolver: (element, itemCodename, linkedItemIndex, linkedItem) => {\r\n                    const parentElement = element.parentElement;\r\n\r\n                    if (parentElement) {\r\n                        const resolvedItemHtml = input.contentItemResolver\r\n                            ? input.contentItemResolver(itemCodename, linkedItem).contentItemHtml ?? ''\r\n                            : '';\r\n\r\n                        // resursively resolve HTML\r\n                        const innerHtml = this.resolveRichTextInternal(resolvedItemHtml, input).html;\r\n\r\n                        // set resolved html\r\n                        if (input.preserveResolvedObjectTags === true) {\r\n                            element.setInnerHtml(innerHtml);\r\n                        } else {\r\n                            element.setOuterHtml(innerHtml);\r\n                        }\r\n\r\n                        // set resolved attribute\r\n                        element.setAttribute(parserHelper.sdkResolvedAttributeName, '1');\r\n                    }\r\n                },\r\n                genericElementResolver: (element) => {\r\n                    // do nothing to generic elements\r\n                },\r\n                imageResolver: (element, imageId, image) => {\r\n                    // get image result\r\n                    const imageResult = input.imageResolver ? input.imageResolver(imageId, image) : undefined;\r\n\r\n                    // html has priority over url resolver\r\n                    if (imageResult?.imageHtml) {\r\n                        // replace link html\r\n                        element.setOuterHtml(imageResult.imageHtml);\r\n                    } else if (imageResult?.imageUrl) {\r\n                        // set link url only\r\n                        element.setAttribute(parserConfiguration.imageElementData.srcAttribute, imageResult.imageUrl);\r\n                    }\r\n                },\r\n                urlResolver: (element, linkId, linkText, link) => {\r\n                    if (input.urlResolver) {\r\n                        const urlResult = input.urlResolver(linkId, linkText, link);\r\n\r\n                        // html has priority over url resolver\r\n                        if (urlResult?.linkHtml) {\r\n                            // replace link html\r\n                            element.setOuterHtml(urlResult.linkHtml);\r\n                        } else if (urlResult?.linkUrl) {\r\n                            // set link url only\r\n                            element.setAttribute('href', urlResult.linkUrl);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            input.linkedItems ?? []\r\n        );\r\n\r\n        return {\r\n            componentCodenames: parsedResult.componentCodenames,\r\n            linkedItemCodenames: parsedResult.linkedItemCodenames,\r\n            html: parsedResult.result\r\n        };\r\n    }\r\n}\r\n\r\nexport const createRichTextHtmlResolver = (parser?: IParser<string>) => new RichTextHtmlResolver(parser);\r\n","import { browserParser, IParser } from '../../../parser';\r\nimport { BaseRichTextResolver } from '../base/base-rich-text-resolver';\r\nimport { IRichTextObjectResolverInput, IRichTextJsonResult } from '../rich-text-resolver.models';\r\nimport { createRichTextObjectResolver } from './rich-text-object-resolver';\r\n\r\nexport class RichTextJsonResolver extends BaseRichTextResolver<\r\n    IRichTextObjectResolverInput,\r\n    IRichTextJsonResult\r\n> {\r\n    constructor(parser?: IParser<string>) {\r\n        super(browserParser, parser);\r\n    }\r\n\r\n    resolveRichText(input: IRichTextObjectResolverInput): IRichTextJsonResult {\r\n        const objectResult = createRichTextObjectResolver(this.getParser()).resolveRichText(input).data;\r\n\r\n        return {\r\n            json: JSON.stringify(objectResult)\r\n        };\r\n    }\r\n}\r\n\r\nexport const createRichTextJsonResolver = (parser?: IParser<any>) => new RichTextJsonResolver(parser);\r\n","import {\r\n    IRichTextObjectResolverInput,\r\n    IRichTextObjectContentItemData,\r\n    IRichTextObjectLinkData,\r\n    IRichTextObjectImageData,\r\n    IRichTextObjectHtmlElementData,\r\n    IRichTextObjectItem,\r\n    IRichTextObjectAtribute,\r\n    IRichTextObjectResult\r\n} from '../rich-text-resolver.models';\r\nimport { browserParser, IParser, IParserElement } from '../../../parser';\r\nimport { guidHelper } from '../../../utilities';\r\nimport { BaseRichTextResolver } from '../base/base-rich-text-resolver';\r\n\r\nexport class RichTextObjectResolver extends BaseRichTextResolver<IRichTextObjectResolverInput, IRichTextObjectResult> {\r\n    private readonly sdkIdAttributeName: string = 'sdk-elem-id';\r\n    private readonly rootId: string = 'root';\r\n    private readonly defaultWrapTag: string = 'div';\r\n\r\n    constructor(parser?: IParser<string>) {\r\n        super(browserParser, parser);\r\n    }\r\n\r\n    resolveRichText(input: IRichTextObjectResolverInput): IRichTextObjectResult {\r\n        const result = this.resolveRichTextInternal(input.element.value, input, {\r\n            type: 'root',\r\n            attributes: [],\r\n            children: [],\r\n            data: {},\r\n            tag: input.wrapperTag ?? this.defaultWrapTag,\r\n            _sdkElemId: this.rootId\r\n        });\r\n\r\n        if (input.cleanSdkIds === true) {\r\n            this.cleanSdkIds(result);\r\n        }\r\n\r\n        return {\r\n            data: result\r\n        };\r\n    }\r\n\r\n    private resolveRichTextInternal(\r\n        html: string,\r\n        input: IRichTextObjectResolverInput,\r\n        result: IRichTextObjectItem\r\n    ): IRichTextObjectItem {\r\n        super.getParser().parse(\r\n            html,\r\n            input.element,\r\n            {\r\n                elementResolver: (element) => {\r\n                    // generate guid for each element\r\n                    element.setAttribute(this.sdkIdAttributeName, guidHelper.genereateGuid());\r\n                },\r\n                contentItemResolver: (element, itemCodename, linkedItemIndex, linkedItem) => {\r\n                    const data: IRichTextObjectContentItemData = {\r\n                        codename: itemCodename,\r\n                        item: linkedItem\r\n                    };\r\n\r\n                    const parentSdkId = this.getSdkIdFromElement(element.parentElement);\r\n                    const parentItem = this.findItemWithSdkId(parentSdkId, result);\r\n\r\n                    if (parentItem) {\r\n                        parentItem.children.push({\r\n                            type: 'linkedItem',\r\n                            attributes: this.getAttributes(element),\r\n                            tag: element.tag.toLowerCase(),\r\n                            data: data,\r\n                            children: [],\r\n                            _sdkElemId: this.getSdkIdFromElement(element)\r\n                        });\r\n                    }\r\n                },\r\n                genericElementResolver: (element) => {\r\n                    const data: IRichTextObjectHtmlElementData = {\r\n                        text: element.text ?? '',\r\n                        html: element.html ?? ''\r\n                    };\r\n\r\n                    const parentSdkId = this.getSdkIdFromElement(element.parentElement);\r\n                    const parentItem = this.findItemWithSdkId(parentSdkId, result);\r\n\r\n                    if (parentItem) {\r\n                        parentItem.children.push({\r\n                            type: 'htmlElement',\r\n                            attributes: this.getAttributes(element),\r\n                            tag: element.tag.toLowerCase(),\r\n                            data: data,\r\n                            children: [],\r\n                            _sdkElemId: this.getSdkIdFromElement(element)\r\n                        });\r\n                    }\r\n                },\r\n                imageResolver: (element, imageId, image) => {\r\n                    const data: IRichTextObjectImageData = {\r\n                        imageId: imageId,\r\n                        image: image\r\n                    };\r\n\r\n                    const parentSdkId = this.getSdkIdFromElement(element.parentElement);\r\n                    const parentItem = this.findItemWithSdkId(parentSdkId, result);\r\n\r\n                    if (parentItem) {\r\n                        parentItem.children.push({\r\n                            type: 'image',\r\n                            attributes: this.getAttributes(element),\r\n                            tag: element.tag.toLowerCase(),\r\n                            data: data,\r\n                            children: [],\r\n                            _sdkElemId: this.getSdkIdFromElement(element)\r\n                        });\r\n                    }\r\n                },\r\n                urlResolver: (element, linkId, linkText, link) => {\r\n                    const data: IRichTextObjectLinkData = {\r\n                        linkId: linkId,\r\n                        linkText: linkText,\r\n                        link: link\r\n                    };\r\n\r\n                    const parentSdkId = this.getSdkIdFromElement(element.parentElement);\r\n                    const parentItem = this.findItemWithSdkId(parentSdkId, result);\r\n\r\n                    if (parentItem) {\r\n                        parentItem.children.push({\r\n                            type: 'link',\r\n                            attributes: this.getAttributes(element),\r\n                            tag: element.tag.toLowerCase(),\r\n                            data: data,\r\n                            children: [],\r\n                            _sdkElemId: this.getSdkIdFromElement(element)\r\n                        });\r\n                    }\r\n                }\r\n            },\r\n            input.linkedItems ?? []\r\n        );\r\n\r\n        return result;\r\n    }\r\n\r\n    private findItemWithSdkId(sdkId: string, item: IRichTextObjectItem): IRichTextObjectItem | undefined {\r\n        if (item._sdkElemId === sdkId) {\r\n            return item;\r\n        }\r\n\r\n        for (const child of item.children) {\r\n            const foundItem = this.findItemWithSdkId(sdkId, child);\r\n            if (foundItem) {\r\n                return foundItem;\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    private getAttributes(element: IParserElement | undefined): IRichTextObjectAtribute[] {\r\n        return element?.attributes ?? [];\r\n    }\r\n\r\n    private getSdkIdFromElement(element: IParserElement | undefined): string {\r\n        if (!element) {\r\n            return this.rootId;\r\n        }\r\n        const value = element.attributes.find((m) => m.name === this.sdkIdAttributeName)?.value ?? this.rootId;\r\n        return value;\r\n    }\r\n\r\n    private cleanSdkIds(item: IRichTextObjectItem): void {\r\n        item.attributes = item.attributes.filter((m) => m.name !== this.sdkIdAttributeName);\r\n        item._sdkElemId = '';\r\n\r\n        for (const child of item.children) {\r\n            this.cleanSdkIds(child);\r\n        }\r\n    }\r\n}\r\n\r\nexport const createRichTextObjectResolver = (parser?: IParser<any>) => new RichTextObjectResolver(parser);\r\n","\nimport { ISDKInfo } from '@kontent-ai/core-sdk';\nexport const sdkInfo: ISDKInfo = {\n    host: 'npmjs.com',\n    version: '12.4.2',\n    name: '@kontent-ai/delivery-sdk'\n};\n","import { IResponse, IHeader, IHttpService, IQueryParameter, urlHelper } from '@kontent-ai/core-sdk';\r\nimport { AxiosError } from 'axios';\r\nimport {\r\n    waitForLoadingNewContentHeader,\r\n    IQueryConfig,\r\n    ISDKInfo,\r\n    IDeliveryErrorRaw,\r\n    DeliveryError,\r\n    sdkVersionHeader,\r\n    staleContentHeaderName,\r\n    continuationTokenHeaderName,\r\n    IDeliveryNetworkResponse\r\n} from '../models';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { IMappingService } from './mapping.service';\r\n\r\nexport abstract class BaseDeliveryQueryService {\r\n    /**\r\n     * Default base Url to Kontent.ai Delivery API\r\n     */\r\n    private readonly defaultBaseDeliveryApiUrl: string = 'https://deliver.kontent.ai';\r\n\r\n    /**\r\n     * Default preview url to Kontent.ai Delivery API\r\n     */\r\n    private readonly defaultPreviewDeliveryApiUrl: string = 'https://preview-deliver.kontent.ai';\r\n\r\n    constructor(\r\n        /**\r\n         * Delivery client configuration\r\n         */\r\n        public readonly config: IDeliveryClientConfig,\r\n        /**\r\n         * Http service for fetching data\r\n         */\r\n        public readonly httpService: IHttpService<any>,\r\n        /**\r\n         * Information about the SDK\r\n         */\r\n        public readonly sdkInfo: ISDKInfo,\r\n        /**\r\n         * Mapping service\r\n         */\r\n        public readonly mappingService: IMappingService\r\n    ) {}\r\n\r\n    /**\r\n     * Gets url based on the action, query configuration and options (parameters)\r\n     * @param action Action (= url part) that will be hit\r\n     * @param queryConfig Query configuration\r\n     * @param options Query options\r\n     */\r\n    getUrl(action: string, queryConfig: IQueryConfig, options?: IQueryParameter[]): string {\r\n        if (!this.config.proxy || !this.config.proxy.advancedProxyUrlResolver) {\r\n            return urlHelper.addOptionsToUrl(this.getBaseUrl(queryConfig) + action, options);\r\n        }\r\n        return this.config.proxy.advancedProxyUrlResolver({\r\n            queryParameters: options ? options : [],\r\n            queryString: urlHelper.addOptionsToUrl('', options),\r\n            action: action,\r\n            domain: this.getDomain(queryConfig),\r\n            queryConfig: queryConfig,\r\n            projectId: this.config.projectId\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Gets proper set of headers for given request.\r\n     * @param queryConfig Query configuration\r\n     * @param additionalHeaders Custom headers\r\n     */\r\n    getHeaders(queryConfig: IQueryConfig, additionalHeaders?: IHeader[]): IHeader[] {\r\n        const headers: IHeader[] = [];\r\n\r\n        if (additionalHeaders) {\r\n            headers.push(...additionalHeaders);\r\n        }\r\n\r\n        // add SDK Id header for monitoring SDK usage\r\n        headers.push(this.getSdkIdHeader());\r\n\r\n        // add headers from global config\r\n        if (this.config.globalHeaders) {\r\n            headers.push(...this.config.globalHeaders(queryConfig));\r\n        }\r\n\r\n        // add query / global headers from query config\r\n        headers.push(...this.getQueryHeaders(queryConfig));\r\n\r\n        if (this.isPreviewModeEnabled(queryConfig) && this.isSecuredModeEnabled(queryConfig)) {\r\n            throw Error(`Preview & secured modes cannot be used at the same time.`);\r\n        }\r\n\r\n        // add preview header is required\r\n        if (this.isPreviewModeEnabled(queryConfig) && this.config.previewApiKey) {\r\n            headers.push(this.getAuthorizationHeader(this.config.previewApiKey));\r\n        }\r\n\r\n        // add secured mode header is required\r\n        if (this.isSecuredModeEnabled(queryConfig) && this.config.secureApiKey) {\r\n            headers.push(this.getAuthorizationHeader(this.config.secureApiKey));\r\n        }\r\n\r\n        // add 'X-KC-Wait-For-Loading-New-Content' header if required\r\n        if (this.shouldAddWaitForLoadingNewContentHeader(queryConfig)) {\r\n            headers.push({\r\n                header: waitForLoadingNewContentHeader,\r\n                value: 'true'\r\n            });\r\n        }\r\n\r\n        return headers;\r\n    }\r\n\r\n    /**\r\n     * Http POST response\r\n     * @param url Url of request\r\n     * @param queryConfig Query config configuration\r\n     */\r\n    protected async postResponseAsync<TRawData>(\r\n        url: string,\r\n        body: any,\r\n        queryConfig?: IQueryConfig,\r\n        serviceConfig?: {\r\n            headers?: IHeader[];\r\n        }\r\n    ): Promise<IResponse<TRawData>> {\r\n        if (!queryConfig) {\r\n            queryConfig = {};\r\n        }\r\n\r\n        if (!serviceConfig) {\r\n            serviceConfig = {};\r\n        }\r\n\r\n        try {\r\n            return await this.httpService.postAsync<TRawData>(\r\n                {\r\n                    url: url,\r\n                    body: body\r\n                },\r\n                {\r\n                    cancelToken: queryConfig?.cancelToken,\r\n                    responseType: 'json',\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(queryConfig, serviceConfig.headers ? serviceConfig.headers : [])\r\n                }\r\n            );\r\n        } catch (error) {\r\n            throw this.mapDeliveryError(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Http GET response\r\n     * @param url Url of request\r\n     * @param queryConfig Query config configuration\r\n     */\r\n    protected async getResponseAsync<TRawData>(\r\n        url: string,\r\n        queryConfig?: IQueryConfig,\r\n        serviceConfig?: {\r\n            headers?: IHeader[];\r\n        }\r\n    ): Promise<IResponse<TRawData>> {\r\n        if (!queryConfig) {\r\n            queryConfig = {};\r\n        }\r\n\r\n        if (!serviceConfig) {\r\n            serviceConfig = {};\r\n        }\r\n\r\n        try {\r\n            return await this.httpService.getAsync<TRawData>(\r\n                {\r\n                    url: url\r\n                },\r\n                {\r\n                    cancelToken: queryConfig?.cancelToken,\r\n                    responseType: 'json',\r\n                    retryStrategy: this.config.retryStrategy,\r\n                    headers: this.getHeaders(queryConfig, serviceConfig.headers ? serviceConfig.headers : [])\r\n                }\r\n            );\r\n        } catch (error) {\r\n            throw this.mapDeliveryError(error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets base URL of the request including the project Id\r\n     * @param queryConfig Query configuration\r\n     */\r\n    protected getBaseUrl(queryConfig: IQueryConfig): string {\r\n        return this.getDomain(queryConfig) + '/' + this.config.projectId;\r\n    }\r\n\r\n    protected mapNetworkResponse<TData, TContract>(\r\n        data: TData,\r\n        response: IResponse<any>\r\n    ): IDeliveryNetworkResponse<TData, TContract> {\r\n        return {\r\n            data: data,\r\n            response: response,\r\n            hasStaleContent: this.getHasStaleContent(response.headers),\r\n            xContinuationToken: this.getContinuationToken(response.headers)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Indicates if current query should use preview mode\r\n     * @param queryConfig Query configuration\r\n     */\r\n    private isPreviewModeEnabled(queryConfig: IQueryConfig): boolean {\r\n        if (queryConfig.usePreviewMode !== undefined) {\r\n            return queryConfig.usePreviewMode;\r\n        }\r\n\r\n        if (!this.config.defaultQueryConfig) {\r\n            return false;\r\n        }\r\n\r\n        if (this.config.defaultQueryConfig.usePreviewMode === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private getQueryHeaders(queryConfig: IQueryConfig): IHeader[] {\r\n        if (queryConfig.customHeaders) {\r\n            return queryConfig.customHeaders;\r\n        }\r\n\r\n        if (this.config.defaultQueryConfig?.customHeaders) {\r\n            return this.config.defaultQueryConfig.customHeaders;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    private shouldAddWaitForLoadingNewContentHeader(queryConfig: IQueryConfig): boolean {\r\n        if (queryConfig.waitForLoadingNewContent !== undefined) {\r\n            return queryConfig.waitForLoadingNewContent;\r\n        }\r\n\r\n        if (!this.config.defaultQueryConfig) {\r\n            return false;\r\n        }\r\n\r\n        if (this.config.defaultQueryConfig.waitForLoadingNewContent === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Indicates if current query should use secured mode\r\n     * @param queryConfig Query configuration\r\n     */\r\n    private isSecuredModeEnabled(queryConfig: IQueryConfig): boolean {\r\n        if (queryConfig.useSecuredMode !== undefined) {\r\n            return queryConfig.useSecuredMode;\r\n        }\r\n\r\n        if (!this.config.defaultQueryConfig) {\r\n            return false;\r\n        }\r\n\r\n        if (this.config.defaultQueryConfig.useSecuredMode === true) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Gets preview or standard URL based on client and query configuration\r\n     * @param queryConfig Query configuration\r\n     */\r\n    private getDomain(queryConfig: IQueryConfig): string {\r\n        if (this.isPreviewModeEnabled(queryConfig)) {\r\n            if (!this.config.previewApiKey) {\r\n                throw Error(`Preview API key is not configured.`);\r\n            }\r\n\r\n            // check custom preview url\r\n            if (this.config.proxy && this.config.proxy.basePreviewUrl) {\r\n                return this.config.proxy.basePreviewUrl;\r\n            }\r\n\r\n            // use default preview url\r\n            return this.defaultPreviewDeliveryApiUrl;\r\n        }\r\n\r\n        // check custom base url\r\n        if (this.config.proxy && this.config.proxy.baseUrl) {\r\n            return this.config.proxy.baseUrl;\r\n        }\r\n        return this.defaultBaseDeliveryApiUrl;\r\n    }\r\n\r\n    /**\r\n     * Gets authorization header. This is used for 'preview' functionality\r\n     */\r\n    private getAuthorizationHeader(key?: string): IHeader {\r\n        if (!key) {\r\n            throw Error(`Cannot get authorization header because key is invalid`);\r\n        }\r\n        // authorization header required for preview mode\r\n        return {\r\n            header: 'authorization',\r\n            value: `bearer ${key}`\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Header identifying SDK type & version for internal purposes of Kontent.ai\r\n     */\r\n    private getSdkIdHeader(): IHeader {\r\n        return {\r\n            header: sdkVersionHeader,\r\n            value: `${this.sdkInfo.host};${this.sdkInfo.name};${this.sdkInfo.version}`\r\n        };\r\n    }\r\n\r\n    private mapDeliveryError(error: any): DeliveryError | any {\r\n        let axiosError: AxiosError | undefined;\r\n\r\n        if (error.error) {\r\n            axiosError = error.error;\r\n        } else {\r\n            axiosError = error;\r\n        }\r\n\r\n        if (!axiosError || !axiosError.isAxiosError) {\r\n            return error;\r\n        }\r\n\r\n        const deliveryErrorData = axiosError.response?.data as IDeliveryErrorRaw;\r\n\r\n        if (!deliveryErrorData || !deliveryErrorData.error_code) {\r\n            return error;\r\n        }\r\n\r\n        return new DeliveryError({\r\n            errorCode: deliveryErrorData.error_code,\r\n            message: deliveryErrorData.message,\r\n            specificCode: deliveryErrorData.specific_code,\r\n            requestId: deliveryErrorData.request_id\r\n        });\r\n    }\r\n\r\n    private getHasStaleContent(headers: IHeader[]): boolean {\r\n        const hasStaleContentHeader = headers.find(\r\n            (m) => m.header.toLowerCase() === staleContentHeaderName.toLowerCase()\r\n        );\r\n\r\n        if (hasStaleContentHeader) {\r\n            if (hasStaleContentHeader.value.toString() === '1') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private getContinuationToken(headers: IHeader[]): string | undefined {\r\n        const header = headers.find((m) => m.header.toLowerCase() === continuationTokenHeaderName.toLowerCase());\r\n        return header ? header.value : undefined;\r\n    }\r\n}\r\n","import { IHttpService } from '@kontent-ai/core-sdk';\r\n\r\nimport { IDeliveryClientConfig } from '../config';\r\nimport { Contracts } from '../contracts';\r\nimport {\r\n    Responses,\r\n    IContentItem,\r\n    IContentTypeQueryConfig,\r\n    IGroupedNetworkResponse,\r\n    IItemQueryConfig,\r\n    IDeliveryNetworkResponse,\r\n    ILanguagesQueryConfig,\r\n    ITaxonomyQueryConfig,\r\n    ISyncInitQueryConfig\r\n} from '../models';\r\nimport {\r\n    IKontentListAllResponse,\r\n    IKontentListResponse,\r\n    IListAllQueryConfig,\r\n    ISDKInfo\r\n} from '../models/common/common-models';\r\nimport { BaseDeliveryQueryService } from './base-delivery-query.service';\r\nimport { IMappingService } from './mapping.service';\r\n\r\nexport class QueryService extends BaseDeliveryQueryService {\r\n    constructor(\r\n        config: IDeliveryClientConfig,\r\n        httpService: IHttpService<any>,\r\n        sdkInfo: ISDKInfo,\r\n        mappingService: IMappingService\r\n    ) {\r\n        super(config, httpService, sdkInfo, mappingService);\r\n    }\r\n\r\n    /**\r\n     * Gets single item from given url\r\n     * @param url Url used to get single item\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getSingleItemAsync<TContentItem extends IContentItem = IContentItem>(\r\n        url: string,\r\n        queryConfig: IItemQueryConfig\r\n    ): Promise<\r\n        IDeliveryNetworkResponse<Responses.IViewContentItemResponse<TContentItem>, Contracts.IViewContentItemContract>\r\n    > {\r\n        const response = await this.getResponseAsync<Contracts.IViewContentItemContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse<\r\n            Responses.IViewContentItemResponse<TContentItem>,\r\n            Contracts.IViewContentItemContract\r\n        >(this.mappingService.viewContentItemResponse<TContentItem>(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets single feed response. Might not contain all items in your project.\r\n     * @param url Url\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getItemsFeed<TContentItem extends IContentItem = IContentItem>(\r\n        url: string,\r\n        queryConfig: IItemQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IListItemsFeedResponse<TContentItem>, Contracts.IItemsFeedContract>> {\r\n        const response = await this.getResponseAsync<Contracts.IItemsFeedContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.itemsFeedResponse<TContentItem>(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets multiple items from given url\r\n     * @param url Url used to get multiple items\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getMultipleItems<TContentItem extends IContentItem = IContentItem>(\r\n        url: string,\r\n        queryConfig: IItemQueryConfig\r\n    ): Promise<\r\n        IDeliveryNetworkResponse<Responses.IListContentItemsResponse<TContentItem>, Contracts.IListContentItemsContract>\r\n    > {\r\n        const response = await this.getResponseAsync<Contracts.IListContentItemsContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.listContentItemsResponse(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets single content type from given url\r\n     * @param url Url used to get single type\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getSingleType(\r\n        url: string,\r\n        queryConfig: IContentTypeQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IViewContentTypeResponse, Contracts.IViewContentTypeContract>> {\r\n        const response = await this.getResponseAsync<Contracts.IViewContentTypeContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.viewContentTypeResponse(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets multiple content types from given url\r\n     * @param url Url used to get multiple types\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getMultipleTypes(\r\n        url: string,\r\n        queryConfig: IContentTypeQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IListContentTypesResponse, Contracts.IListContentTypeContract>> {\r\n        const response = await this.getResponseAsync<Contracts.IListContentTypeContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.listContentTypesResponse(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Initializes synchronization of changes in content items based on the specified parameters. After the initialization,\r\n     * you'll get an X-Continuation token in the response.\r\n     * Use the token to synchronize changes in the content items matching the initialization criteria.\r\n     * @param url Url\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async initializeSync(\r\n        url: string,\r\n        queryConfig: ISyncInitQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IInitializeSyncResponse, Contracts.IInitializeSyncContract>> {\r\n        const response = await this.postResponseAsync<Contracts.IInitializeSyncContract>(url, {}, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.initializeContentSync(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Retrieve a list of delta updates to recently changed content items in the specified project.\r\n     * The types of items you get is determined by the X-Continuation token you use.\r\n     * @param url Url used to get multiple types\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async syncChanges(\r\n        url: string,\r\n        queryConfig: IContentTypeQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.ISyncChangesResponse, Contracts.ISyncChangesContract>> {\r\n        const response = await this.getResponseAsync<Contracts.ISyncChangesContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.syncChanges(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets languages\r\n     * @param url Url\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getLanguages(\r\n        url: string,\r\n        queryConfig: ILanguagesQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IListLanguagesResponse, Contracts.IListLanguagesContract>> {\r\n        const response = await this.getResponseAsync<Contracts.IListLanguagesContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.listLanguagesResponse(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets single taxonomy from given url\r\n     * @param url Url used to get single taxonomy\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getTaxonomy(\r\n        url: string,\r\n        queryConfig: ITaxonomyQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IViewTaxonomyResponse, Contracts.IViewTaxonomyGroupContract>> {\r\n        const response = await this.getResponseAsync<Contracts.IViewTaxonomyGroupContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.viewTaxonomyResponse(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets multiple taxonomies from given url\r\n     * @param url Url used to get multiple taxonomies\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getTaxonomies(\r\n        url: string,\r\n        queryConfig: ITaxonomyQueryConfig\r\n    ): Promise<IDeliveryNetworkResponse<Responses.IListTaxonomiesResponse, Contracts.IListTaxonomyGroupsContract>> {\r\n        const response = await this.getResponseAsync<Contracts.IListTaxonomyGroupsContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.listTaxonomiesResponse(response.data), response);\r\n    }\r\n\r\n    /**\r\n     * Gets single content type element from given url\r\n     * @param url Url used to get single content type element\r\n     * @param queryConfig Query configuration\r\n     */\r\n    async getElementAsync(\r\n        url: string,\r\n        queryConfig: ITaxonomyQueryConfig\r\n    ): Promise<\r\n        IDeliveryNetworkResponse<Responses.IViewContentTypeElementResponse, Contracts.IViewContentTypeElementContract>\r\n    > {\r\n        const response = await this.getResponseAsync<Contracts.IViewContentTypeElementContract>(url, queryConfig);\r\n\r\n        return this.mapNetworkResponse(this.mappingService.viewContentTypeElementResponse(response.data), response);\r\n    }\r\n\r\n    async getListAllResponse<\r\n        TResponse extends IKontentListResponse,\r\n        TAllResponse extends IKontentListAllResponse,\r\n        TContract\r\n    >(data: {\r\n        page: number;\r\n        getResponse: (\r\n            nextPageUrl?: string,\r\n            continuationToken?: string\r\n        ) => Promise<IDeliveryNetworkResponse<TResponse, TContract>>;\r\n        allResponseFactory: (\r\n            items: any[],\r\n            responses: IDeliveryNetworkResponse<TResponse, TContract>[]\r\n        ) => IGroupedNetworkResponse<TAllResponse>;\r\n        listQueryConfig?: IListAllQueryConfig<TResponse, TContract>;\r\n    }): Promise<IGroupedNetworkResponse<TAllResponse>> {\r\n        const responses = await this.getListAllResponseInternalAsync({\r\n            page: data.page,\r\n            resolvedResponses: [],\r\n            getResponse: data.getResponse,\r\n            nextPageUrl: undefined,\r\n            continuationToken: undefined,\r\n            listQueryConfig: data.listQueryConfig\r\n        });\r\n\r\n        return data.allResponseFactory(\r\n            responses.reduce((prev: any[], current) => {\r\n                prev.push(...current.data.items);\r\n                return prev;\r\n            }, []),\r\n            responses\r\n        );\r\n    }\r\n\r\n    private async getListAllResponseInternalAsync<TResponse extends IKontentListResponse, TContract>(data: {\r\n        page: number;\r\n        nextPageUrl?: string;\r\n        continuationToken?: string;\r\n        getResponse: (\r\n            nextPageUrl?: string,\r\n            continuationToken?: string\r\n        ) => Promise<IDeliveryNetworkResponse<TResponse, TContract>>;\r\n        resolvedResponses: IDeliveryNetworkResponse<TResponse, TContract>[];\r\n        listQueryConfig?: IListAllQueryConfig<TResponse, TContract>;\r\n    }): Promise<IDeliveryNetworkResponse<TResponse, TContract>[]> {\r\n        if (data.listQueryConfig?.pages) {\r\n            if (data.page > data.listQueryConfig.pages) {\r\n                // page limit reached, return result\r\n                return data.resolvedResponses;\r\n            }\r\n        }\r\n\r\n        const response = await data.getResponse(data.nextPageUrl, data.continuationToken);\r\n\r\n        if (data.listQueryConfig?.delayBetweenRequests) {\r\n            await this.sleep(data.listQueryConfig.delayBetweenRequests);\r\n        }\r\n\r\n        data.resolvedResponses.push(response);\r\n\r\n        if (data.listQueryConfig?.responseFetched) {\r\n            data.listQueryConfig.responseFetched(response, data.nextPageUrl, data.continuationToken);\r\n        }\r\n\r\n        const nextPage = response.data.pagination?.nextPage;\r\n        const continuationToken = response.xContinuationToken;\r\n\r\n        if (nextPage || continuationToken) {\r\n            // recursively fetch next page data\r\n            return await this.getListAllResponseInternalAsync({\r\n                page: data.page + 1,\r\n                nextPageUrl: nextPage,\r\n                continuationToken: continuationToken,\r\n                listQueryConfig: data.listQueryConfig,\r\n                getResponse: data.getResponse,\r\n                resolvedResponses: data.resolvedResponses\r\n            });\r\n        }\r\n\r\n        return data.resolvedResponses;\r\n    }\r\n\r\n    private sleep(ms: number): Promise<void> {\r\n        return new Promise((resolve) => setTimeout(resolve, ms));\r\n    }\r\n}\r\n","export * from './delivery-query.service';\r\nexport * from './mapping.service';\r\n","import { IDeliveryClientConfig } from '../config';\r\nimport { Contracts } from '../contracts';\r\nimport { SyncMapper, GenericElementMapper, ItemMapper, LanguageMapper, TaxonomyMapper, TypeMapper } from '../mappers';\r\nimport { Responses, IContentItem, IPagination } from '../models';\r\n\r\nexport interface IMappingService {\r\n    listContentTypesResponse(data: Contracts.IListContentTypeContract): Responses.IListContentTypesResponse;\r\n\r\n    itemsFeedResponse<TContentItem extends IContentItem = IContentItem>(\r\n        data: Contracts.IItemsFeedContract\r\n    ): Responses.IListItemsFeedResponse<TContentItem>;\r\n\r\n    viewContentTypeResponse(data: Contracts.IViewContentTypeContract): Responses.IViewContentTypeResponse;\r\n\r\n    viewContentItemResponse<TContentItem extends IContentItem = IContentItem>(\r\n        data: Contracts.IViewContentItemContract\r\n    ): Responses.IViewContentItemResponse<TContentItem>;\r\n\r\n    listContentItemsResponse<TContentItem extends IContentItem = IContentItem>(\r\n        data: Contracts.IListContentItemsContract\r\n    ): Responses.IListContentItemsResponse<TContentItem>;\r\n\r\n    viewTaxonomyResponse(data: Contracts.IViewTaxonomyGroupContract): Responses.IViewTaxonomyResponse;\r\n\r\n    listTaxonomiesResponse(data: Contracts.IListTaxonomyGroupsContract): Responses.IListTaxonomiesResponse;\r\n\r\n    viewContentTypeElementResponse(\r\n        data: Contracts.IViewContentTypeElementContract\r\n    ): Responses.IViewContentTypeElementResponse;\r\n\r\n    listLanguagesResponse(data: Contracts.IListLanguagesContract): Responses.IListLanguagesResponse;\r\n    initializeContentSync(data: Contracts.IInitializeSyncContract): Responses.IInitializeSyncResponse;\r\n    syncChanges(data: Contracts.ISyncChangesContract): Responses.ISyncChangesResponse;\r\n}\r\n\r\nexport class MappingService implements IMappingService {\r\n    private readonly typeMapper: TypeMapper;\r\n    private readonly languageMapper: LanguageMapper;\r\n    private readonly itemMapper: ItemMapper;\r\n    private readonly taxonomyMapper: TaxonomyMapper;\r\n    private readonly genericElementMapper: GenericElementMapper;\r\n    private readonly syncMapper: SyncMapper;\r\n\r\n    constructor(readonly config: IDeliveryClientConfig) {\r\n        this.typeMapper = new TypeMapper();\r\n        this.languageMapper = new LanguageMapper();\r\n        this.itemMapper = new ItemMapper(config);\r\n        this.taxonomyMapper = new TaxonomyMapper();\r\n        this.genericElementMapper = new GenericElementMapper();\r\n        this.syncMapper = new SyncMapper();\r\n    }\r\n\r\n    /**\r\n     * Gets response for list of languages\r\n     * @param data Response data\r\n     */\r\n    listLanguagesResponse(data: Contracts.IListLanguagesContract): Responses.IListLanguagesResponse {\r\n        return {\r\n            items: this.languageMapper.mapMultipleLanguages(data),\r\n            pagination: this.mapPagination(data.pagination)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting a multiple type\r\n     * @param data Response data\r\n     */\r\n    listContentTypesResponse(data: Contracts.IListContentTypeContract): Responses.IListContentTypesResponse {\r\n        return {\r\n            items: this.typeMapper.mapMultipleTypes(data),\r\n            pagination: this.mapPagination(data.pagination)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for single type\r\n     * @param data Response data\r\n     * @param options Options\r\n     */\r\n    viewContentTypeResponse(data: Contracts.IViewContentTypeContract): Responses.IViewContentTypeResponse {\r\n        return {\r\n            type: this.typeMapper.mapSingleType(data)\r\n        };\r\n    }\r\n\r\n    itemsFeedResponse<TContentItem extends IContentItem = IContentItem>(\r\n        data: Contracts.IItemsFeedContract\r\n    ): Responses.IListItemsFeedResponse<TContentItem> {\r\n        const itemsResult = this.itemMapper.mapItems<TContentItem>({\r\n            linkedItems: Object.values(data.modular_content),\r\n            mainItems: data.items\r\n        });\r\n\r\n        return {\r\n            items: itemsResult.items,\r\n            linkedItems: itemsResult.linkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting single item\r\n     * @param data Response data\r\n     * @param queryConfig Query configuration\r\n     */\r\n    viewContentItemResponse<TContentItem extends IContentItem = IContentItem>(\r\n        data: Contracts.IViewContentItemContract\r\n    ): Responses.IViewContentItemResponse<TContentItem> {\r\n        const itemResult = this.itemMapper.mapSingleItemFromResponse<TContentItem>(data);\r\n\r\n        return {\r\n            item: itemResult.item,\r\n            linkedItems: itemResult.linkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting multiple items\r\n     * @param data Response data\r\n     * @param queryConfig Query configuration\r\n     */\r\n    listContentItemsResponse<TContentItem extends IContentItem = IContentItem>(\r\n        data: Contracts.IListContentItemsContract\r\n    ): Responses.IListContentItemsResponse<TContentItem> {\r\n        const itemsResult = this.itemMapper.mapMultipleItemsFromResponse<TContentItem>(data);\r\n\r\n        return {\r\n            items: itemsResult.items,\r\n            pagination: this.mapPagination(data.pagination),\r\n            linkedItems: itemsResult.linkedItems\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting single taxonomy item\r\n     * @param data Response data\r\n     */\r\n    viewTaxonomyResponse(data: Contracts.IViewTaxonomyGroupContract): Responses.IViewTaxonomyResponse {\r\n        return {\r\n            taxonomy: this.taxonomyMapper.mapTaxonomy(data.system, data.terms)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting multiples taxonomies\r\n     * @param data Response data\r\n     */\r\n    listTaxonomiesResponse(data: Contracts.IListTaxonomyGroupsContract): Responses.IListTaxonomiesResponse {\r\n        return {\r\n            items: this.taxonomyMapper.mapTaxonomies(data.taxonomies),\r\n            pagination: this.mapPagination(data.pagination)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets response for getting single content type element\r\n     * @param data Response data\r\n     */\r\n    viewContentTypeElementResponse(\r\n        data: Contracts.IViewContentTypeElementContract\r\n    ): Responses.IViewContentTypeElementResponse {\r\n        return {\r\n            element: this.genericElementMapper.mapElement(data)\r\n        };\r\n    }\r\n\r\n    initializeContentSync(data: Contracts.IInitializeSyncContract): Responses.IInitializeSyncResponse {\r\n        return {\r\n            items: data.items.map((m) => this.syncMapper.mapContentItemDelta(m))\r\n        };\r\n    }\r\n\r\n    syncChanges(data: Contracts.ISyncChangesContract): Responses.ISyncChangesResponse {\r\n        return {\r\n            items: data.items.map((m) => this.syncMapper.mapContentItemDelta(m))\r\n        };\r\n    }\r\n\r\n    private mapPagination(paginationContract: Contracts.IPaginationContract): IPagination {\r\n        return {\r\n            skip: paginationContract.skip,\r\n            count: paginationContract.count,\r\n            limit: paginationContract.limit,\r\n            nextPage: paginationContract.next_page,\r\n            totalCount: paginationContract.total_count ?? null\r\n        };\r\n    }\r\n}\r\n","import * as urlParse from 'url-parse';\r\n\r\nexport class DeliveryUrlHelper {\r\n    replaceAssetDomain(originalAssetUrl: string, customDomain: string): string {\r\n        const urlPath = this.getUrlPathname(originalAssetUrl);\r\n\r\n        return `${customDomain}${urlPath}`;\r\n    }\r\n\r\n    getUrlPathname(url: string): string {\r\n        const parsedUrl = urlParse(url);\r\n\r\n        return parsedUrl.pathname;\r\n    }\r\n}\r\n\r\nexport const deliveryUrlHelper = new DeliveryUrlHelper();\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport class GuidHelper {\r\n    genereateGuid(): string {\r\n        return uuidv4();\r\n    }\r\n}\r\n\r\nexport const guidHelper = new GuidHelper();\r\n","export * from './linked-items.helper';\r\nexport * from './guid.helper';\r\nexport * from './delivery-url.helper';\r\nexport * from './text-helper';\r\n","import { IContentItem, IContentItemsContainer } from '../models/item-models';\r\n\r\nexport class LinkedItemsHelper {\r\n\r\n    convertLinkedItemsToArray(linkedItems: IContentItemsContainer): IContentItem[] {\r\n        const linkedItemsArray: IContentItem[] = [];\r\n\r\n        for (const linkedItemKey of Object.keys(linkedItems)) {\r\n            linkedItemsArray.push(linkedItems[linkedItemKey]);\r\n        }\r\n\r\n        return linkedItemsArray;\r\n    }\r\n}\r\n\r\nexport const linkedItemsHelper = new LinkedItemsHelper();\r\n","export class TextHelper {\r\n    getPropertyNameRegex(): RegExp {\r\n        return /[;,\\/\\&\\(\\)\\?\\-\\=\\'\\\"\\\\\\xa7\\!\\%\\:\\_\\s.]+(.)?/g;\r\n    }\r\n\r\n    removeZeroWidthCharacters(str: string): string {\r\n        return str.replace(/[\\u200B-\\u200D\\uFEFF]/g, '');\r\n    }\r\n\r\n    addUnderscoreWhenStarsWithNumber(str: string): string {\r\n        if (this.startsWithNumber(str)) {\r\n            return `_${str}`;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    startsWithNumber(str: string): boolean {\r\n        if (str.match(/^\\d/)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const textHelper = new TextHelper();\r\n","'use strict';\n\nvar required = require('requires-port')\n  , qs = require('querystringify')\n  , controlOrWhitespace = /^[\\x00-\\x20\\u00a0\\u1680\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+/\n  , CRHTLF = /[\\n\\r\\t]/g\n  , slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\\/\\//\n  , port = /:\\d+$/\n  , protocolre = /^([a-z][a-z0-9.+-]*:)?(\\/\\/)?([\\\\/]+)?([\\S\\s]*)/i\n  , windowsDriveLetter = /^[a-zA-Z]:/;\n\n/**\n * Remove control characters and whitespace from the beginning of a string.\n *\n * @param {Object|String} str String to trim.\n * @returns {String} A new string representing `str` stripped of control\n *     characters and whitespace from its beginning.\n * @public\n */\nfunction trimLeft(str) {\n  return (str ? str : '').toString().replace(controlOrWhitespace, '');\n}\n\n/**\n * These are the parse rules for the URL parser, it informs the parser\n * about:\n *\n * 0. The char it Needs to parse, if it's a string it should be done using\n *    indexOf, RegExp using exec and NaN means set as current value.\n * 1. The property we should set when parsing this value.\n * 2. Indication if it's backwards or forward parsing, when set as number it's\n *    the value of extra chars that should be split off.\n * 3. Inherit from location if non existing in the parser.\n * 4. `toLowerCase` the resulting value.\n */\nvar rules = [\n  ['#', 'hash'],                        // Extract from the back.\n  ['?', 'query'],                       // Extract from the back.\n  function sanitize(address, url) {     // Sanitize what is left of the address\n    return isSpecial(url.protocol) ? address.replace(/\\\\/g, '/') : address;\n  },\n  ['/', 'pathname'],                    // Extract from the back.\n  ['@', 'auth', 1],                     // Extract from the front.\n  [NaN, 'host', undefined, 1, 1],       // Set left over value.\n  [/:(\\d*)$/, 'port', undefined, 1],    // RegExp the back.\n  [NaN, 'hostname', undefined, 1, 1]    // Set left over.\n];\n\n/**\n * These properties should not be copied or inherited from. This is only needed\n * for all non blob URL's as a blob URL does not include a hash, only the\n * origin.\n *\n * @type {Object}\n * @private\n */\nvar ignore = { hash: 1, query: 1 };\n\n/**\n * The location object differs when your code is loaded through a normal page,\n * Worker or through a worker using a blob. And with the blobble begins the\n * trouble as the location object will contain the URL of the blob, not the\n * location of the page where our code is loaded in. The actual origin is\n * encoded in the `pathname` so we can thankfully generate a good \"default\"\n * location from it so we can generate proper relative URL's again.\n *\n * @param {Object|String} loc Optional default location object.\n * @returns {Object} lolcation object.\n * @public\n */\nfunction lolcation(loc) {\n  var globalVar;\n\n  if (typeof window !== 'undefined') globalVar = window;\n  else if (typeof global !== 'undefined') globalVar = global;\n  else if (typeof self !== 'undefined') globalVar = self;\n  else globalVar = {};\n\n  var location = globalVar.location || {};\n  loc = loc || location;\n\n  var finaldestination = {}\n    , type = typeof loc\n    , key;\n\n  if ('blob:' === loc.protocol) {\n    finaldestination = new Url(unescape(loc.pathname), {});\n  } else if ('string' === type) {\n    finaldestination = new Url(loc, {});\n    for (key in ignore) delete finaldestination[key];\n  } else if ('object' === type) {\n    for (key in loc) {\n      if (key in ignore) continue;\n      finaldestination[key] = loc[key];\n    }\n\n    if (finaldestination.slashes === undefined) {\n      finaldestination.slashes = slashes.test(loc.href);\n    }\n  }\n\n  return finaldestination;\n}\n\n/**\n * Check whether a protocol scheme is special.\n *\n * @param {String} The protocol scheme of the URL\n * @return {Boolean} `true` if the protocol scheme is special, else `false`\n * @private\n */\nfunction isSpecial(scheme) {\n  return (\n    scheme === 'file:' ||\n    scheme === 'ftp:' ||\n    scheme === 'http:' ||\n    scheme === 'https:' ||\n    scheme === 'ws:' ||\n    scheme === 'wss:'\n  );\n}\n\n/**\n * @typedef ProtocolExtract\n * @type Object\n * @property {String} protocol Protocol matched in the URL, in lowercase.\n * @property {Boolean} slashes `true` if protocol is followed by \"//\", else `false`.\n * @property {String} rest Rest of the URL that is not part of the protocol.\n */\n\n/**\n * Extract protocol information from a URL with/without double slash (\"//\").\n *\n * @param {String} address URL we want to extract from.\n * @param {Object} location\n * @return {ProtocolExtract} Extracted information.\n * @private\n */\nfunction extractProtocol(address, location) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n  location = location || {};\n\n  var match = protocolre.exec(address);\n  var protocol = match[1] ? match[1].toLowerCase() : '';\n  var forwardSlashes = !!match[2];\n  var otherSlashes = !!match[3];\n  var slashesCount = 0;\n  var rest;\n\n  if (forwardSlashes) {\n    if (otherSlashes) {\n      rest = match[2] + match[3] + match[4];\n      slashesCount = match[2].length + match[3].length;\n    } else {\n      rest = match[2] + match[4];\n      slashesCount = match[2].length;\n    }\n  } else {\n    if (otherSlashes) {\n      rest = match[3] + match[4];\n      slashesCount = match[3].length;\n    } else {\n      rest = match[4]\n    }\n  }\n\n  if (protocol === 'file:') {\n    if (slashesCount >= 2) {\n      rest = rest.slice(2);\n    }\n  } else if (isSpecial(protocol)) {\n    rest = match[4];\n  } else if (protocol) {\n    if (forwardSlashes) {\n      rest = rest.slice(2);\n    }\n  } else if (slashesCount >= 2 && isSpecial(location.protocol)) {\n    rest = match[4];\n  }\n\n  return {\n    protocol: protocol,\n    slashes: forwardSlashes || isSpecial(protocol),\n    slashesCount: slashesCount,\n    rest: rest\n  };\n}\n\n/**\n * Resolve a relative URL pathname against a base URL pathname.\n *\n * @param {String} relative Pathname of the relative URL.\n * @param {String} base Pathname of the base URL.\n * @return {String} Resolved pathname.\n * @private\n */\nfunction resolve(relative, base) {\n  if (relative === '') return base;\n\n  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/'))\n    , i = path.length\n    , last = path[i - 1]\n    , unshift = false\n    , up = 0;\n\n  while (i--) {\n    if (path[i] === '.') {\n      path.splice(i, 1);\n    } else if (path[i] === '..') {\n      path.splice(i, 1);\n      up++;\n    } else if (up) {\n      if (i === 0) unshift = true;\n      path.splice(i, 1);\n      up--;\n    }\n  }\n\n  if (unshift) path.unshift('');\n  if (last === '.' || last === '..') path.push('');\n\n  return path.join('/');\n}\n\n/**\n * The actual URL instance. Instead of returning an object we've opted-in to\n * create an actual constructor as it's much more memory efficient and\n * faster and it pleases my OCD.\n *\n * It is worth noting that we should not use `URL` as class name to prevent\n * clashes with the global URL instance that got introduced in browsers.\n *\n * @constructor\n * @param {String} address URL we want to parse.\n * @param {Object|String} [location] Location defaults for relative paths.\n * @param {Boolean|Function} [parser] Parser for the query string.\n * @private\n */\nfunction Url(address, location, parser) {\n  address = trimLeft(address);\n  address = address.replace(CRHTLF, '');\n\n  if (!(this instanceof Url)) {\n    return new Url(address, location, parser);\n  }\n\n  var relative, extracted, parse, instruction, index, key\n    , instructions = rules.slice()\n    , type = typeof location\n    , url = this\n    , i = 0;\n\n  //\n  // The following if statements allows this module two have compatibility with\n  // 2 different API:\n  //\n  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments\n  //    where the boolean indicates that the query string should also be parsed.\n  //\n  // 2. The `URL` interface of the browser which accepts a URL, object as\n  //    arguments. The supplied object will be used as default values / fall-back\n  //    for relative paths.\n  //\n  if ('object' !== type && 'string' !== type) {\n    parser = location;\n    location = null;\n  }\n\n  if (parser && 'function' !== typeof parser) parser = qs.parse;\n\n  location = lolcation(location);\n\n  //\n  // Extract protocol information before running the instructions.\n  //\n  extracted = extractProtocol(address || '', location);\n  relative = !extracted.protocol && !extracted.slashes;\n  url.slashes = extracted.slashes || relative && location.slashes;\n  url.protocol = extracted.protocol || location.protocol || '';\n  address = extracted.rest;\n\n  //\n  // When the authority component is absent the URL starts with a path\n  // component.\n  //\n  if (\n    extracted.protocol === 'file:' && (\n      extracted.slashesCount !== 2 || windowsDriveLetter.test(address)) ||\n    (!extracted.slashes &&\n      (extracted.protocol ||\n        extracted.slashesCount < 2 ||\n        !isSpecial(url.protocol)))\n  ) {\n    instructions[3] = [/(.*)/, 'pathname'];\n  }\n\n  for (; i < instructions.length; i++) {\n    instruction = instructions[i];\n\n    if (typeof instruction === 'function') {\n      address = instruction(address, url);\n      continue;\n    }\n\n    parse = instruction[0];\n    key = instruction[1];\n\n    if (parse !== parse) {\n      url[key] = address;\n    } else if ('string' === typeof parse) {\n      index = parse === '@'\n        ? address.lastIndexOf(parse)\n        : address.indexOf(parse);\n\n      if (~index) {\n        if ('number' === typeof instruction[2]) {\n          url[key] = address.slice(0, index);\n          address = address.slice(index + instruction[2]);\n        } else {\n          url[key] = address.slice(index);\n          address = address.slice(0, index);\n        }\n      }\n    } else if ((index = parse.exec(address))) {\n      url[key] = index[1];\n      address = address.slice(0, index.index);\n    }\n\n    url[key] = url[key] || (\n      relative && instruction[3] ? location[key] || '' : ''\n    );\n\n    //\n    // Hostname, host and protocol should be lowercased so they can be used to\n    // create a proper `origin`.\n    //\n    if (instruction[4]) url[key] = url[key].toLowerCase();\n  }\n\n  //\n  // Also parse the supplied query string in to an object. If we're supplied\n  // with a custom parser as function use that instead of the default build-in\n  // parser.\n  //\n  if (parser) url.query = parser(url.query);\n\n  //\n  // If the URL is relative, resolve the pathname against the base URL.\n  //\n  if (\n      relative\n    && location.slashes\n    && url.pathname.charAt(0) !== '/'\n    && (url.pathname !== '' || location.pathname !== '')\n  ) {\n    url.pathname = resolve(url.pathname, location.pathname);\n  }\n\n  //\n  // Default to a / for pathname if none exists. This normalizes the URL\n  // to always have a /\n  //\n  if (url.pathname.charAt(0) !== '/' && isSpecial(url.protocol)) {\n    url.pathname = '/' + url.pathname;\n  }\n\n  //\n  // We should not add port numbers if they are already the default port number\n  // for a given protocol. As the host also contains the port number we're going\n  // override it with the hostname which contains no port number.\n  //\n  if (!required(url.port, url.protocol)) {\n    url.host = url.hostname;\n    url.port = '';\n  }\n\n  //\n  // Parse down the `auth` for the username and password.\n  //\n  url.username = url.password = '';\n\n  if (url.auth) {\n    index = url.auth.indexOf(':');\n\n    if (~index) {\n      url.username = url.auth.slice(0, index);\n      url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n      url.password = url.auth.slice(index + 1);\n      url.password = encodeURIComponent(decodeURIComponent(url.password))\n    } else {\n      url.username = encodeURIComponent(decodeURIComponent(url.auth));\n    }\n\n    url.auth = url.password ? url.username +':'+ url.password : url.username;\n  }\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  //\n  // The href is just the compiled result.\n  //\n  url.href = url.toString();\n}\n\n/**\n * This is convenience method for changing properties in the URL instance to\n * insure that they all propagate correctly.\n *\n * @param {String} part          Property we need to adjust.\n * @param {Mixed} value          The newly assigned value.\n * @param {Boolean|Function} fn  When setting the query, it will be the function\n *                               used to parse the query.\n *                               When setting the protocol, double slash will be\n *                               removed from the final url if it is true.\n * @returns {URL} URL instance for chaining.\n * @public\n */\nfunction set(part, value, fn) {\n  var url = this;\n\n  switch (part) {\n    case 'query':\n      if ('string' === typeof value && value.length) {\n        value = (fn || qs.parse)(value);\n      }\n\n      url[part] = value;\n      break;\n\n    case 'port':\n      url[part] = value;\n\n      if (!required(value, url.protocol)) {\n        url.host = url.hostname;\n        url[part] = '';\n      } else if (value) {\n        url.host = url.hostname +':'+ value;\n      }\n\n      break;\n\n    case 'hostname':\n      url[part] = value;\n\n      if (url.port) value += ':'+ url.port;\n      url.host = value;\n      break;\n\n    case 'host':\n      url[part] = value;\n\n      if (port.test(value)) {\n        value = value.split(':');\n        url.port = value.pop();\n        url.hostname = value.join(':');\n      } else {\n        url.hostname = value;\n        url.port = '';\n      }\n\n      break;\n\n    case 'protocol':\n      url.protocol = value.toLowerCase();\n      url.slashes = !fn;\n      break;\n\n    case 'pathname':\n    case 'hash':\n      if (value) {\n        var char = part === 'pathname' ? '/' : '#';\n        url[part] = value.charAt(0) !== char ? char + value : value;\n      } else {\n        url[part] = value;\n      }\n      break;\n\n    case 'username':\n    case 'password':\n      url[part] = encodeURIComponent(value);\n      break;\n\n    case 'auth':\n      var index = value.indexOf(':');\n\n      if (~index) {\n        url.username = value.slice(0, index);\n        url.username = encodeURIComponent(decodeURIComponent(url.username));\n\n        url.password = value.slice(index + 1);\n        url.password = encodeURIComponent(decodeURIComponent(url.password));\n      } else {\n        url.username = encodeURIComponent(decodeURIComponent(value));\n      }\n  }\n\n  for (var i = 0; i < rules.length; i++) {\n    var ins = rules[i];\n\n    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();\n  }\n\n  url.auth = url.password ? url.username +':'+ url.password : url.username;\n\n  url.origin = url.protocol !== 'file:' && isSpecial(url.protocol) && url.host\n    ? url.protocol +'//'+ url.host\n    : 'null';\n\n  url.href = url.toString();\n\n  return url;\n}\n\n/**\n * Transform the properties back in to a valid and full URL string.\n *\n * @param {Function} stringify Optional query stringify function.\n * @returns {String} Compiled version of the URL.\n * @public\n */\nfunction toString(stringify) {\n  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;\n\n  var query\n    , url = this\n    , host = url.host\n    , protocol = url.protocol;\n\n  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';\n\n  var result =\n    protocol +\n    ((url.protocol && url.slashes) || isSpecial(url.protocol) ? '//' : '');\n\n  if (url.username) {\n    result += url.username;\n    if (url.password) result += ':'+ url.password;\n    result += '@';\n  } else if (url.password) {\n    result += ':'+ url.password;\n    result += '@';\n  } else if (\n    url.protocol !== 'file:' &&\n    isSpecial(url.protocol) &&\n    !host &&\n    url.pathname !== '/'\n  ) {\n    //\n    // Add back the empty userinfo, otherwise the original invalid URL\n    // might be transformed into a valid one with `url.pathname` as host.\n    //\n    result += '@';\n  }\n\n  //\n  // Trailing colon is removed from `url.host` when it is parsed. If it still\n  // ends with a colon, then add back the trailing colon that was removed. This\n  // prevents an invalid URL from being transformed into a valid one.\n  //\n  if (host[host.length - 1] === ':' || (port.test(url.hostname) && !url.port)) {\n    host += ':';\n  }\n\n  result += host + url.pathname;\n\n  query = 'object' === typeof url.query ? stringify(url.query) : url.query;\n  if (query) result += '?' !== query.charAt(0) ? '?'+ query : query;\n\n  if (url.hash) result += url.hash;\n\n  return result;\n}\n\nUrl.prototype = { set: set, toString: toString };\n\n//\n// Expose the URL parser and some additional properties that might be useful for\n// others or testing.\n//\nUrl.extractProtocol = extractProtocol;\nUrl.location = lolcation;\nUrl.trimLeft = trimLeft;\nUrl.qs = qs;\n\nmodule.exports = Url;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.URL = exports.DNS = void 0;\nexports.default = v35;\n\nvar _stringify = require(\"./stringify.js\");\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = _interopRequireDefault(require(\"./native.js\"));\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = require(\"./stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports.default = _default;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(8713);\n"],"names":["root","factory","exports","module","define","amd","self","UrlHelper","addOptionsToUrl","url","options","forEach","filter","indexOf","getParam","urlHelper","HeaderHelper","constructor","this","sdkVersionHeader","getSdkIdHeader","info","header","value","host","name","version","headerHelper","EnumHelper","getAllNames","T","enumNames","key","hasOwnProperty","push","getAllValues","Object","keys","map","getEnumFromValue","isNumeric","result","find","m","toLowerCase","toString","err","getEnumFromName","allNames","enumName","isNaN","parseFloat","isFinite","enumHelper","extractHeadersFromAxiosResponse","response","headers","headerKey","RetryHelper","requestCancelledMessagePrefix","retryAfterHeaderName","defaultRetryStatusCodes","defaultRetryStrategy","addJitter","deltaBackoffMs","maxAttempts","canRetryError","error","canRetryErrorDefault","getRetryErrorResult","data","_a","_b","_c","message","startsWith","canRetry","retryInMs","maxRetries","retryStrategy","retryAttempt","retryResult","tryGetRetryAfterInMsFromError","getNextWaitTimeMs","getRetryStrategyFromStrategyOptions","retryOptions","canRetryInTime","startTime","maxCumulativeWaitTimeMs","start","getTime","differenceInMs","Date","retryAttempts","Math","pow","from","to","randomNumberFromInterval","tryGetAxiosError","statusCode","getStatusCodeFromError","canRetryStatusCode","axiosError","retryValueHeader","useRetryForResponseCodes","includes","status","isAxiosError","originalError","min","max","floor","random","retryHelper","Parameters","CustomParameter","Error","getParamValue","HttpDebugger","debugStartHttpRequest","debugSuccessHttpRequest","debugRetryHttpRequest","httpDebugger","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","getWithRetryAsync","instance","call","functionsConfig","retryStrategyOptions","runWithRetryAsync","axiosResponse","get","getHeadersJson","responseType","cancelToken","token","rawResponse","postWithRetryAsync","post","body","maxContentLength","maxBodyLength","putWithRetryAsync","put","patchWithRetryAsync","patch","deleteWithRetryAsync","delete","createCancelToken","canceler","cancel","cancelMessage","c","setTimeout","console","warn","logErrorsToConsole","addContentTypeHeader","headerJson","HttpService","opts","axiosInstance","axiosRequestConfig","getFunctionsConfig","getAsync","postAsync","putAsync","patchAsync","deleteAsync","TestHttpService","config","undefined","assign","resolveTestCall","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","onCanceled","requestData","requestHeaders","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","val","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","executor","TypeError","resolvePromise","promise","_listeners","i","l","length","onfulfilled","_resolve","reason","throwIfRequested","listener","index","splice","source","ERR_CANCELED","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","responseInterceptorChain","chain","Array","concat","shift","newConfig","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","code","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","defineProperties","defineProperty","customProps","toFlatObject","obj","handlers","use","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","configValue","validateStatus","ERR_BAD_RESPONSE","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","stringify","stringifySafely","strictJSONParsing","args","arguments","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","formatMessage","opt","desc","ERR_DEPRECATED","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","TypedArray","Uint8Array","pattern","ArrayBuffer","isView","pipe","product","assignValue","a","b","stripBOM","content","charCodeAt","superConstructor","props","sourceObj","destObj","merged","getOwnPropertyNames","searchString","position","String","lastIndex","has","decode","input","prefix","pairs","query","part","DeliveryClient","mappingService","MappingService","queryService","QueryService","httpService","sdkInfo","languages","LanguagesQuery","types","MultipleTypeQuery","typeCodename","SingleTypeQuery","items","MultipleItemsQuery","item","codename","SingleItemQuery","itemsFeed","ItemsFeedQuery","taxonomy","TaxonomyQuery","taxonomies","TaxonomiesQuery","element","elementCodename","ElementQuery","initializeSync","InitializeSyncQuery","syncChanges","SyncChangesQuery","ElementType","ImageUrlTransformationBuilder","imageUrl","queryParams","automaticFormatValue","withCustomParam","param","withDpr","dpr","QueryParameter","withRectangleCrop","x","y","width","height","withFocalPointCrop","z","withFitMode","withAutomaticFormat","backupFormat","withFormat","fitMode","withCompression","compression","withQuality","quality","format","withHeight","withWidth","getParams","getQueryString","getUrl","mapElements","processedItem","processedItems","dataToMap","system","preparedItems","processingStartedForCodenames","preparedItem","itemInstance","elementCodenames","rawItem","elements","elementMap","resolveElementMap","elementWrapper","rawElement","resolvedName","shouldMapElement","mappedElement","mapElement","elementType","ModularContent","mapLinkedItemsElement","Text","mapTextElement","Asset","mapAssetsElement","Number","mapNumberElement","MultipleChoice","mapMultipleChoiceElement","DateTime","mapDateTimeElement","RichText","mapRichTextElement","UrlSlug","mapUrlSlugElement","Taxonomy","mapTaxonomyElement","Custom","mapCustomElement","mapUnknowElement","richTextLinkedItems","richTextLinkedItemsCodenames","rawModularContentCodenamesMatches","matchAll","rawModularContentCodenamesSorted","reduce","acc","groups","rawModularContentCodenames","modular_content","sort","preparedData","canMapLinkedItems","existingLinkedItem","getOrSaveLinkedItemForElement","mappedLinkedItemResult","richTextImagesResult","getRichTextImages","images","links","mapRichTextLinks","richTextImages","richTextHtml","getRichTextHtml","imageUrlRecords","linkedItemCodenames","linkedItems","buildElement","displayTimeZone","display_timezone","assetContracts","assets","assetContract","renditions","assetUrl","assetsDomain","deliveryUrlHelper","replaceAssetDomain","renditionPresetKey","rendition","renditionToBeApplied","defaultRenditionPreset","finalUrl","asset","taxonomyGroup","taxonomy_group","Unknown","elementResolver","elementResolverValue","linkedItem","mappingStartedForCodenames","mappedLinkedItem","linksJson","linkId","linkRaw","urlSlug","url_slug","richTextImageRecords","richTextImageRecord","newUrl","originalUrl","imagesJson","imageId","imageRaw","image_id","originalElementCodename","resolvedElementPropertyName","propertyNameResolver","valueFactory","linkedItemsReferenceHandler","elementMapper","ElementMapper","mapSingleItemFromResponse","mapResult","mapItems","mainItems","values","mapMultipleItemsFromResponse","that","mappedMainItems","mappedLinkedItems","itemsToResolve","createContentItem","itemResult","mapItem","collection","language","lastModified","last_modified","sitemapLocations","sitemap_locations","workflowStep","workflow_step","mapMultipleLanguages","mapLanguage","mapContentItemDelta","itemDeltaContract","changeType","change_type","timestamp","mapTaxonomy","taxonomySystem","taxonomyTerms","terms","mapTaxonomyTerms","mapTaxonomies","mappedTaxonomies","termsArray","mappedTermsArray","mappedTerms","mapSingleType","mapType","mapMultipleTypes","elementName","typeElement","rawOptions","rawOption","requestId","errorCode","specificCode","Filters","defaultValue","getParamValueForSystemFilter","TypeFilter","CollectionFilter","EmptyFilter","NotEmptyFilter","EqualsFilter","NotEqualsFilter","AllFilter","AnyFilter","ContainsFilter","GreaterThanFilter","GreaterThanOrEqualFilter","InFilter","NotInFilter","LessThanFilter","LessThanOrEqualFilter","RangeFilter","lowerValue","higherValue","lowerVal","higherVal","continuationTokenHeaderName","waitForLoadingNewContentHeader","staleContentHeaderName","ElementsParameter","LimitParameter","limit","IncludeTotalCountParameter","SkipParameter","skip","OrderParameter","sortOrder","DepthParameter","depth","LanguageParameter","languageCodename","AsyncBrowserParser","parseAsync","html","mainRichTextElement","resolvers","parseInternalAsync","ParsedItemIndexReferenceWrapper","linkedItemIndex","parentElement","rootElement","createWrapperElement","processRichTextElementAsync","children","componentCodenames","itemType","dataCodename","innerHTML","htmlCollection","elementResolverAsync","parserHelper","convertToParserElement","typeAttribute","attributes","getNamedItem","parserConfiguration","modularContentElementData","dataCodenameAttribute","dataTypeAttribute","dataType","relAttribute","componentRel","linkItemContentObject","contentItemResolverAsync","getLinkedItem","increment","nodeName","linkElementData","dataItemIdAttribute","dataItemId","linkObject","linkText","urlResolverAsync","tryGetLink","imageElementData","dataImageIdAttribute","dataImageId","imageObj","imageResolverAsync","tryGetImage","genericElementResolverAsync","linkedItemWrapperElem","asyncBrowserParser","BrowserParser","parseInternal","processRichTextElement","contentItemResolver","urlResolver","imageResolver","genericElementResolver","browserParser","srcAttribute","resolvedLinkedItemIndexAttribute","resolvedAttribute","ParserHelper","sdkResolvedAttributeName","itemCodename","inputElement","elementImage","elementKey","richTextElementImage","elementLink","richTextElementLink","attribute","tag","tagName","attributeName","attributeValue","setInnerHtml","newHtml","setOuterHtml","outerHTML","text","textContent","sourceElement","BaseItemListingQuery","BaseListingQuery","super","emptyFilter","parameters","notEmptyFilter","equalsFilter","notEqualsFilter","allFilter","anyFilter","containsFilter","greaterThanFilter","greaterThanOrEqualFilter","inFilter","notInFilter","lessThanFilter","lessThanOrEqualFilter","rangeFilter","limitParameter","orderParameter","orderByDescending","orderByAscending","skipParameter","BaseQuery","withContinuationToken","queryHeaders","_queryConfig","customHeaders","withHeaders","toAllPromise","queryAllConfig","getListAllResponse","page","listQueryConfig","allResponseFactory","responses","getResponse","nextPageUrl","continuationToken","withCustomUrl","toPromise","withCustomParameter","withParameter","parameter","withParameters","getHeaders","withHeader","customUrl","getParameters","queryConfig","resolveUrlInternal","action","processDefaultLanguageParameter","defaultLanguage","getElementAsync","json","viewContentTypeElementResponse","includeTotalCountParameter","collections","depthParameter","languageParameter","elementsParameter","getMultipleItems","listContentItemsResponse","getSingleItemAsync","viewContentItemResponse","getItemsFeed","itemsFeedResponse","endpoint","getLanguages","listLanguagesResponse","initializeContentSync","taxonomiesEndpoint","getTaxonomies","listTaxonomiesResponse","taxonomyCodename","getTaxonomy","viewTaxonomyResponse","getMultipleTypes","listContentTypesResponse","getSingleType","viewContentTypeResponse","camelCasePropertyNameResolver","textHelper","addUnderscoreWhenStarsWithNumber","removeZeroWidthCharacters","getPropertyNameRegex","_","substring","pascalCasePropertyNameResolver","snakeCasePropertyNameResolver","removeEndUnderscore","removeStartUnderscore","AsyncRichTextHtmlResolver","BaseAsyncRichTextResolver","resolveRichTextAsync","resolveRichTextInternalAsync","parsedResult","getAsyncParser","resolvedItemHtml","contentItemHtml","innerHtml","preserveResolvedObjectTags","image","imageResult","imageHtml","link","urlResult","linkHtml","linkUrl","createAsyncRichTextHtmlResolver","defaultParser","getParser","RichTextHtmlResolver","BaseRichTextResolver","resolveRichText","resolveRichTextInternal","createRichTextHtmlResolver","RichTextJsonResolver","objectResult","createRichTextObjectResolver","createRichTextJsonResolver","RichTextObjectResolver","sdkIdAttributeName","rootId","defaultWrapTag","wrapperTag","_sdkElemId","cleanSdkIds","guidHelper","genereateGuid","parentSdkId","getSdkIdFromElement","parentItem","findItemWithSdkId","getAttributes","sdkId","child","foundItem","defaultBaseDeliveryApiUrl","defaultPreviewDeliveryApiUrl","proxy","advancedProxyUrlResolver","queryParameters","queryString","getDomain","projectId","getBaseUrl","additionalHeaders","globalHeaders","getQueryHeaders","isPreviewModeEnabled","isSecuredModeEnabled","previewApiKey","getAuthorizationHeader","secureApiKey","shouldAddWaitForLoadingNewContentHeader","postResponseAsync","serviceConfig","mapDeliveryError","getResponseAsync","mapNetworkResponse","hasStaleContent","getHasStaleContent","xContinuationToken","getContinuationToken","usePreviewMode","defaultQueryConfig","waitForLoadingNewContent","useSecuredMode","basePreviewUrl","baseUrl","deliveryErrorData","error_code","DeliveryError","specific_code","request_id","hasStaleContentHeader","BaseDeliveryQueryService","getListAllResponseInternalAsync","resolvedResponses","prev","current","pages","delayBetweenRequests","sleep","responseFetched","nextPage","pagination","ms","typeMapper","TypeMapper","languageMapper","LanguageMapper","itemMapper","ItemMapper","taxonomyMapper","TaxonomyMapper","genericElementMapper","GenericElementMapper","syncMapper","SyncMapper","mapPagination","itemsResult","paginationContract","count","next_page","totalCount","total_count","DeliveryUrlHelper","originalAssetUrl","customDomain","getUrlPathname","urlParse","GuidHelper","LinkedItemsHelper","convertLinkedItemsToArray","linkedItemsArray","linkedItemKey","linkedItemsHelper","TextHelper","startsWithNumber","required","qs","controlOrWhitespace","CRHTLF","slashes","protocolre","windowsDriveLetter","trimLeft","rules","address","isSpecial","NaN","ignore","lolcation","loc","g","finaldestination","Url","scheme","extractProtocol","rest","forwardSlashes","otherSlashes","slashesCount","relative","extracted","instruction","instructions","lastIndexOf","base","last","up","origin","set","char","ins","enumerable","_nil","default","_parse","_stringify","_v","_v2","_v3","_v4","_validate","_version","_interopRequireDefault","__esModule","getOutputLength","inputLength8","safeAdd","lsw","md5cmn","q","s","t","num","cnt","md5ff","d","md5gg","md5hh","md5ii","bytes","msg","output","length32","hexTab","hex","parseInt","md5ToHexEncodedArray","len","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","_default","randomUUID","crypto","uuid","getRandomValues","rnds8","f","ROTL","n","K","H","N","ceil","M","j","W","unsafeStringify","byteToHex","offset","_rng","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","node","clockseq","seedBytes","rng","msecs","nsecs","dt","tl","tmh","_md","URL","DNS","hashfunc","generateUUID","namespace","_namespace","stringToBytes","_native","rnds","_sha","_regex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","o","globalThis","Function","r","Symbol","toStringTag"],"sourceRoot":""}